nohup: ignoring input
figures already existed
Results already existed
[[10, 10]]
[10]
Results/2022-02-10-00-58-22_36465/ created
Results/2022-02-10-00-58-22_36465/10 created
figures/2022-02-10-00-58-22_36465/ created
[('VOUT - L - Sb - GND', 0.5), ('VOUT - L - Sa - GND', 0.5), ('VIN - Sa - L - VOUT', 0.4583333333333333), ('VIN - Sb - Sa - GND', 0.4166666666666667), ('VIN - Sa - Sb - GND', 0.4166666666666667), ('VIN - Sb - L - VOUT', 0.375)]
{"['Sa']|[]": 0.33222591362126247, "['Sb']|[]": 0.33222591362126247, "['L']|[]": 0.33222591362126247, "['C']|[]": 0.003322259136212625, "['Sa', 'Sa']|['Sa']": 0.004950495049504951, "['Sa', 'Sb']|['Sa']": 0.49504950495049516, "['Sa', 'L']|['Sa']": 0.49504950495049516, "['Sa', 'C']|['Sa']": 0.004950495049504951, "['Sa', 'Sb']|['Sb']": 0.49504950495049516, "['Sb', 'Sb']|['Sb']": 0.004950495049504951, "['Sb', 'L']|['Sb']": 0.49504950495049516, "['Sb', 'C']|['Sb']": 0.004950495049504951, "['Sa', 'L']|['L']": 0.49504950495049516, "['Sb', 'L']|['L']": 0.49504950495049516, "['L', 'L']|['L']": 0.004950495049504951, "['L', 'C']|['L']": 0.004950495049504951, "['Sa', 'C']|['C']": 0.25, "['Sb', 'C']|['C']": 0.25, "['L', 'C']|['C']": 0.25, "['C', 'C']|['C']": 0.25, "['Sa', 'Sa', 'Sa']|['Sa', 'Sa']": 0.25, "['Sa', 'Sa', 'Sb']|['Sa', 'Sa']": 0.25, "['Sa', 'Sa', 'L']|['Sa', 'Sa']": 0.25, "['Sa', 'Sa', 'C']|['Sa', 'Sa']": 0.25, "['Sa', 'Sa', 'Sb']|['Sa', 'Sb']": 0.009708737864077669, "['Sa', 'Sb', 'Sb']|['Sa', 'Sb']": 0.009708737864077669, "['Sa', 'Sb', 'L']|['Sa', 'Sb']": 0.970873786407767, "['Sa', 'Sb', 'C']|['Sa', 'Sb']": 0.009708737864077669, "['Sa', 'Sa', 'L']|['Sa', 'L']": 0.009708737864077669, "['Sa', 'Sb', 'L']|['Sa', 'L']": 0.970873786407767, "['Sa', 'L', 'L']|['Sa', 'L']": 0.009708737864077669, "['Sa', 'L', 'C']|['Sa', 'L']": 0.009708737864077669, "['Sa', 'Sa', 'C']|['Sa', 'C']": 0.25, "['Sa', 'Sb', 'C']|['Sa', 'C']": 0.25, "['Sa', 'L', 'C']|['Sa', 'C']": 0.25, "['Sa', 'C', 'C']|['Sa', 'C']": 0.25, "['Sa', 'Sb', 'Sb']|['Sb', 'Sb']": 0.25, "['Sb', 'Sb', 'Sb']|['Sb', 'Sb']": 0.25, "['Sb', 'Sb', 'L']|['Sb', 'Sb']": 0.25, "['Sb', 'Sb', 'C']|['Sb', 'Sb']": 0.25, "['Sa', 'Sb', 'L']|['Sb', 'L']": 0.970873786407767, "['Sb', 'Sb', 'L']|['Sb', 'L']": 0.009708737864077669, "['Sb', 'L', 'L']|['Sb', 'L']": 0.009708737864077669, "['Sb', 'L', 'C']|['Sb', 'L']": 0.009708737864077669, "['Sa', 'Sb', 'C']|['Sb', 'C']": 0.25, "['Sb', 'Sb', 'C']|['Sb', 'C']": 0.25, "['Sb', 'L', 'C']|['Sb', 'C']": 0.25, "['Sb', 'C', 'C']|['Sb', 'C']": 0.25, "['Sa', 'L', 'L']|['L', 'L']": 0.25, "['Sb', 'L', 'L']|['L', 'L']": 0.25, "['L', 'L', 'L']|['L', 'L']": 0.25, "['L', 'L', 'C']|['L', 'L']": 0.25, "['Sa', 'L', 'C']|['L', 'C']": 0.25, "['Sb', 'L', 'C']|['L', 'C']": 0.25, "['L', 'L', 'C']|['L', 'C']": 0.25, "['L', 'C', 'C']|['L', 'C']": 0.25, "['Sa', 'C', 'C']|['C', 'C']": 0.25, "['Sb', 'C', 'C']|['C', 'C']": 0.25, "['L', 'C', 'C']|['C', 'C']": 0.25, "['C', 'C', 'C']|['C', 'C']": 0.25, "['Sa', 'Sa', 'Sa', 'Sa']|['Sa', 'Sa', 'Sa']": 0.25, "['Sa', 'Sa', 'Sa', 'Sb']|['Sa', 'Sa', 'Sa']": 0.25, "['Sa', 'Sa', 'Sa', 'L']|['Sa', 'Sa', 'Sa']": 0.25, "['Sa', 'Sa', 'Sa', 'C']|['Sa', 'Sa', 'Sa']": 0.25, "['Sa', 'Sa', 'Sa', 'Sb']|['Sa', 'Sa', 'Sb']": 0.25, "['Sa', 'Sa', 'Sb', 'Sb']|['Sa', 'Sa', 'Sb']": 0.25, "['Sa', 'Sa', 'Sb', 'L']|['Sa', 'Sa', 'Sb']": 0.25, "['Sa', 'Sa', 'Sb', 'C']|['Sa', 'Sa', 'Sb']": 0.25, "['Sa', 'Sa', 'Sa', 'L']|['Sa', 'Sa', 'L']": 0.25, "['Sa', 'Sa', 'Sb', 'L']|['Sa', 'Sa', 'L']": 0.25, "['Sa', 'Sa', 'L', 'L']|['Sa', 'Sa', 'L']": 0.25, "['Sa', 'Sa', 'L', 'C']|['Sa', 'Sa', 'L']": 0.25, "['Sa', 'Sa', 'Sa', 'C']|['Sa', 'Sa', 'C']": 0.25, "['Sa', 'Sa', 'Sb', 'C']|['Sa', 'Sa', 'C']": 0.25, "['Sa', 'Sa', 'L', 'C']|['Sa', 'Sa', 'C']": 0.25, "['Sa', 'Sa', 'C', 'C']|['Sa', 'Sa', 'C']": 0.25, "['Sa', 'Sa', 'Sb', 'Sb']|['Sa', 'Sb', 'Sb']": 0.25, "['Sa', 'Sb', 'Sb', 'Sb']|['Sa', 'Sb', 'Sb']": 0.25, "['Sa', 'Sb', 'Sb', 'L']|['Sa', 'Sb', 'Sb']": 0.25, "['Sa', 'Sb', 'Sb', 'C']|['Sa', 'Sb', 'Sb']": 0.25, "['Sa', 'Sa', 'Sb', 'L']|['Sa', 'Sb', 'L']": 0.25, "['Sa', 'Sb', 'Sb', 'L']|['Sa', 'Sb', 'L']": 0.25, "['Sa', 'Sb', 'L', 'L']|['Sa', 'Sb', 'L']": 0.25, "['Sa', 'Sb', 'L', 'C']|['Sa', 'Sb', 'L']": 0.25, "['Sa', 'Sa', 'Sb', 'C']|['Sa', 'Sb', 'C']": 0.25, "['Sa', 'Sb', 'Sb', 'C']|['Sa', 'Sb', 'C']": 0.25, "['Sa', 'Sb', 'L', 'C']|['Sa', 'Sb', 'C']": 0.25, "['Sa', 'Sb', 'C', 'C']|['Sa', 'Sb', 'C']": 0.25, "['Sa', 'Sa', 'L', 'L']|['Sa', 'L', 'L']": 0.25, "['Sa', 'Sb', 'L', 'L']|['Sa', 'L', 'L']": 0.25, "['Sa', 'L', 'L', 'L']|['Sa', 'L', 'L']": 0.25, "['Sa', 'L', 'L', 'C']|['Sa', 'L', 'L']": 0.25, "['Sa', 'Sa', 'L', 'C']|['Sa', 'L', 'C']": 0.25, "['Sa', 'Sb', 'L', 'C']|['Sa', 'L', 'C']": 0.25, "['Sa', 'L', 'L', 'C']|['Sa', 'L', 'C']": 0.25, "['Sa', 'L', 'C', 'C']|['Sa', 'L', 'C']": 0.25, "['Sa', 'Sa', 'C', 'C']|['Sa', 'C', 'C']": 0.25, "['Sa', 'Sb', 'C', 'C']|['Sa', 'C', 'C']": 0.25, "['Sa', 'L', 'C', 'C']|['Sa', 'C', 'C']": 0.25, "['Sa', 'C', 'C', 'C']|['Sa', 'C', 'C']": 0.25, "['Sa', 'Sb', 'Sb', 'Sb']|['Sb', 'Sb', 'Sb']": 0.25, "['Sb', 'Sb', 'Sb', 'Sb']|['Sb', 'Sb', 'Sb']": 0.25, "['Sb', 'Sb', 'Sb', 'L']|['Sb', 'Sb', 'Sb']": 0.25, "['Sb', 'Sb', 'Sb', 'C']|['Sb', 'Sb', 'Sb']": 0.25, "['Sa', 'Sb', 'Sb', 'L']|['Sb', 'Sb', 'L']": 0.25, "['Sb', 'Sb', 'Sb', 'L']|['Sb', 'Sb', 'L']": 0.25, "['Sb', 'Sb', 'L', 'L']|['Sb', 'Sb', 'L']": 0.25, "['Sb', 'Sb', 'L', 'C']|['Sb', 'Sb', 'L']": 0.25, "['Sa', 'Sb', 'Sb', 'C']|['Sb', 'Sb', 'C']": 0.25, "['Sb', 'Sb', 'Sb', 'C']|['Sb', 'Sb', 'C']": 0.25, "['Sb', 'Sb', 'L', 'C']|['Sb', 'Sb', 'C']": 0.25, "['Sb', 'Sb', 'C', 'C']|['Sb', 'Sb', 'C']": 0.25, "['Sa', 'Sb', 'L', 'L']|['Sb', 'L', 'L']": 0.25, "['Sb', 'Sb', 'L', 'L']|['Sb', 'L', 'L']": 0.25, "['Sb', 'L', 'L', 'L']|['Sb', 'L', 'L']": 0.25, "['Sb', 'L', 'L', 'C']|['Sb', 'L', 'L']": 0.25, "['Sa', 'Sb', 'L', 'C']|['Sb', 'L', 'C']": 0.25, "['Sb', 'Sb', 'L', 'C']|['Sb', 'L', 'C']": 0.25, "['Sb', 'L', 'L', 'C']|['Sb', 'L', 'C']": 0.25, "['Sb', 'L', 'C', 'C']|['Sb', 'L', 'C']": 0.25, "['Sa', 'Sb', 'C', 'C']|['Sb', 'C', 'C']": 0.25, "['Sb', 'Sb', 'C', 'C']|['Sb', 'C', 'C']": 0.25, "['Sb', 'L', 'C', 'C']|['Sb', 'C', 'C']": 0.25, "['Sb', 'C', 'C', 'C']|['Sb', 'C', 'C']": 0.25, "['Sa', 'L', 'L', 'L']|['L', 'L', 'L']": 0.25, "['Sb', 'L', 'L', 'L']|['L', 'L', 'L']": 0.25, "['L', 'L', 'L', 'L']|['L', 'L', 'L']": 0.25, "['L', 'L', 'L', 'C']|['L', 'L', 'L']": 0.25, "['Sa', 'L', 'L', 'C']|['L', 'L', 'C']": 0.25, "['Sb', 'L', 'L', 'C']|['L', 'L', 'C']": 0.25, "['L', 'L', 'L', 'C']|['L', 'L', 'C']": 0.25, "['L', 'L', 'C', 'C']|['L', 'L', 'C']": 0.25, "['Sa', 'L', 'C', 'C']|['L', 'C', 'C']": 0.25, "['Sb', 'L', 'C', 'C']|['L', 'C', 'C']": 0.25, "['L', 'L', 'C', 'C']|['L', 'C', 'C']": 0.25, "['L', 'C', 'C', 'C']|['L', 'C', 'C']": 0.25, "['Sa', 'C', 'C', 'C']|['C', 'C', 'C']": 0.25, "['Sb', 'C', 'C', 'C']|['C', 'C', 'C']": 0.25, "['L', 'C', 'C', 'C']|['C', 'C', 'C']": 0.25, "['C', 'C', 'C', 'C']|['C', 'C', 'C']": 0.25, "['Sa', 'Sa', 'Sa', 'Sa', 'Sa']|['Sa', 'Sa', 'Sa', 'Sa']": 0.25, "['Sa', 'Sa', 'Sa', 'Sa', 'Sb']|['Sa', 'Sa', 'Sa', 'Sa']": 0.25, "['Sa', 'Sa', 'Sa', 'Sa', 'L']|['Sa', 'Sa', 'Sa', 'Sa']": 0.25, "['Sa', 'Sa', 'Sa', 'Sa', 'C']|['Sa', 'Sa', 'Sa', 'Sa']": 0.25, "['Sa', 'Sa', 'Sa', 'Sa', 'Sb']|['Sa', 'Sa', 'Sa', 'Sb']": 0.25, "['Sa', 'Sa', 'Sa', 'Sb', 'Sb']|['Sa', 'Sa', 'Sa', 'Sb']": 0.25, "['Sa', 'Sa', 'Sa', 'Sb', 'L']|['Sa', 'Sa', 'Sa', 'Sb']": 0.25, "['Sa', 'Sa', 'Sa', 'Sb', 'C']|['Sa', 'Sa', 'Sa', 'Sb']": 0.25, "['Sa', 'Sa', 'Sa', 'Sa', 'L']|['Sa', 'Sa', 'Sa', 'L']": 0.25, "['Sa', 'Sa', 'Sa', 'Sb', 'L']|['Sa', 'Sa', 'Sa', 'L']": 0.25, "['Sa', 'Sa', 'Sa', 'L', 'L']|['Sa', 'Sa', 'Sa', 'L']": 0.25, "['Sa', 'Sa', 'Sa', 'L', 'C']|['Sa', 'Sa', 'Sa', 'L']": 0.25, "['Sa', 'Sa', 'Sa', 'Sa', 'C']|['Sa', 'Sa', 'Sa', 'C']": 0.25, "['Sa', 'Sa', 'Sa', 'Sb', 'C']|['Sa', 'Sa', 'Sa', 'C']": 0.25, "['Sa', 'Sa', 'Sa', 'L', 'C']|['Sa', 'Sa', 'Sa', 'C']": 0.25, "['Sa', 'Sa', 'Sa', 'C', 'C']|['Sa', 'Sa', 'Sa', 'C']": 0.25, "['Sa', 'Sa', 'Sa', 'Sb', 'Sb']|['Sa', 'Sa', 'Sb', 'Sb']": 0.25, "['Sa', 'Sa', 'Sb', 'Sb', 'Sb']|['Sa', 'Sa', 'Sb', 'Sb']": 0.25, "['Sa', 'Sa', 'Sb', 'Sb', 'L']|['Sa', 'Sa', 'Sb', 'Sb']": 0.25, "['Sa', 'Sa', 'Sb', 'Sb', 'C']|['Sa', 'Sa', 'Sb', 'Sb']": 0.25, "['Sa', 'Sa', 'Sa', 'Sb', 'L']|['Sa', 'Sa', 'Sb', 'L']": 0.25, "['Sa', 'Sa', 'Sb', 'Sb', 'L']|['Sa', 'Sa', 'Sb', 'L']": 0.25, "['Sa', 'Sa', 'Sb', 'L', 'L']|['Sa', 'Sa', 'Sb', 'L']": 0.25, "['Sa', 'Sa', 'Sb', 'L', 'C']|['Sa', 'Sa', 'Sb', 'L']": 0.25, "['Sa', 'Sa', 'Sa', 'Sb', 'C']|['Sa', 'Sa', 'Sb', 'C']": 0.25, "['Sa', 'Sa', 'Sb', 'Sb', 'C']|['Sa', 'Sa', 'Sb', 'C']": 0.25, "['Sa', 'Sa', 'Sb', 'L', 'C']|['Sa', 'Sa', 'Sb', 'C']": 0.25, "['Sa', 'Sa', 'Sb', 'C', 'C']|['Sa', 'Sa', 'Sb', 'C']": 0.25, "['Sa', 'Sa', 'Sa', 'L', 'L']|['Sa', 'Sa', 'L', 'L']": 0.25, "['Sa', 'Sa', 'Sb', 'L', 'L']|['Sa', 'Sa', 'L', 'L']": 0.25, "['Sa', 'Sa', 'L', 'L', 'L']|['Sa', 'Sa', 'L', 'L']": 0.25, "['Sa', 'Sa', 'L', 'L', 'C']|['Sa', 'Sa', 'L', 'L']": 0.25, "['Sa', 'Sa', 'Sa', 'L', 'C']|['Sa', 'Sa', 'L', 'C']": 0.25, "['Sa', 'Sa', 'Sb', 'L', 'C']|['Sa', 'Sa', 'L', 'C']": 0.25, "['Sa', 'Sa', 'L', 'L', 'C']|['Sa', 'Sa', 'L', 'C']": 0.25, "['Sa', 'Sa', 'L', 'C', 'C']|['Sa', 'Sa', 'L', 'C']": 0.25, "['Sa', 'Sa', 'Sa', 'C', 'C']|['Sa', 'Sa', 'C', 'C']": 0.25, "['Sa', 'Sa', 'Sb', 'C', 'C']|['Sa', 'Sa', 'C', 'C']": 0.25, "['Sa', 'Sa', 'L', 'C', 'C']|['Sa', 'Sa', 'C', 'C']": 0.25, "['Sa', 'Sa', 'C', 'C', 'C']|['Sa', 'Sa', 'C', 'C']": 0.25, "['Sa', 'Sa', 'Sb', 'Sb', 'Sb']|['Sa', 'Sb', 'Sb', 'Sb']": 0.25, "['Sa', 'Sb', 'Sb', 'Sb', 'Sb']|['Sa', 'Sb', 'Sb', 'Sb']": 0.25, "['Sa', 'Sb', 'Sb', 'Sb', 'L']|['Sa', 'Sb', 'Sb', 'Sb']": 0.25, "['Sa', 'Sb', 'Sb', 'Sb', 'C']|['Sa', 'Sb', 'Sb', 'Sb']": 0.25, "['Sa', 'Sa', 'Sb', 'Sb', 'L']|['Sa', 'Sb', 'Sb', 'L']": 0.25, "['Sa', 'Sb', 'Sb', 'Sb', 'L']|['Sa', 'Sb', 'Sb', 'L']": 0.25, "['Sa', 'Sb', 'Sb', 'L', 'L']|['Sa', 'Sb', 'Sb', 'L']": 0.25, "['Sa', 'Sb', 'Sb', 'L', 'C']|['Sa', 'Sb', 'Sb', 'L']": 0.25, "['Sa', 'Sa', 'Sb', 'Sb', 'C']|['Sa', 'Sb', 'Sb', 'C']": 0.25, "['Sa', 'Sb', 'Sb', 'Sb', 'C']|['Sa', 'Sb', 'Sb', 'C']": 0.25, "['Sa', 'Sb', 'Sb', 'L', 'C']|['Sa', 'Sb', 'Sb', 'C']": 0.25, "['Sa', 'Sb', 'Sb', 'C', 'C']|['Sa', 'Sb', 'Sb', 'C']": 0.25, "['Sa', 'Sa', 'Sb', 'L', 'L']|['Sa', 'Sb', 'L', 'L']": 0.25, "['Sa', 'Sb', 'Sb', 'L', 'L']|['Sa', 'Sb', 'L', 'L']": 0.25, "['Sa', 'Sb', 'L', 'L', 'L']|['Sa', 'Sb', 'L', 'L']": 0.25, "['Sa', 'Sb', 'L', 'L', 'C']|['Sa', 'Sb', 'L', 'L']": 0.25, "['Sa', 'Sa', 'Sb', 'L', 'C']|['Sa', 'Sb', 'L', 'C']": 0.25, "['Sa', 'Sb', 'Sb', 'L', 'C']|['Sa', 'Sb', 'L', 'C']": 0.25, "['Sa', 'Sb', 'L', 'L', 'C']|['Sa', 'Sb', 'L', 'C']": 0.25, "['Sa', 'Sb', 'L', 'C', 'C']|['Sa', 'Sb', 'L', 'C']": 0.25, "['Sa', 'Sa', 'Sb', 'C', 'C']|['Sa', 'Sb', 'C', 'C']": 0.25, "['Sa', 'Sb', 'Sb', 'C', 'C']|['Sa', 'Sb', 'C', 'C']": 0.25, "['Sa', 'Sb', 'L', 'C', 'C']|['Sa', 'Sb', 'C', 'C']": 0.25, "['Sa', 'Sb', 'C', 'C', 'C']|['Sa', 'Sb', 'C', 'C']": 0.25, "['Sa', 'Sa', 'L', 'L', 'L']|['Sa', 'L', 'L', 'L']": 0.25, "['Sa', 'Sb', 'L', 'L', 'L']|['Sa', 'L', 'L', 'L']": 0.25, "['Sa', 'L', 'L', 'L', 'L']|['Sa', 'L', 'L', 'L']": 0.25, "['Sa', 'L', 'L', 'L', 'C']|['Sa', 'L', 'L', 'L']": 0.25, "['Sa', 'Sa', 'L', 'L', 'C']|['Sa', 'L', 'L', 'C']": 0.25, "['Sa', 'Sb', 'L', 'L', 'C']|['Sa', 'L', 'L', 'C']": 0.25, "['Sa', 'L', 'L', 'L', 'C']|['Sa', 'L', 'L', 'C']": 0.25, "['Sa', 'L', 'L', 'C', 'C']|['Sa', 'L', 'L', 'C']": 0.25, "['Sa', 'Sa', 'L', 'C', 'C']|['Sa', 'L', 'C', 'C']": 0.25, "['Sa', 'Sb', 'L', 'C', 'C']|['Sa', 'L', 'C', 'C']": 0.25, "['Sa', 'L', 'L', 'C', 'C']|['Sa', 'L', 'C', 'C']": 0.25, "['Sa', 'L', 'C', 'C', 'C']|['Sa', 'L', 'C', 'C']": 0.25, "['Sa', 'Sa', 'C', 'C', 'C']|['Sa', 'C', 'C', 'C']": 0.25, "['Sa', 'Sb', 'C', 'C', 'C']|['Sa', 'C', 'C', 'C']": 0.25, "['Sa', 'L', 'C', 'C', 'C']|['Sa', 'C', 'C', 'C']": 0.25, "['Sa', 'C', 'C', 'C', 'C']|['Sa', 'C', 'C', 'C']": 0.25, "['Sa', 'Sb', 'Sb', 'Sb', 'Sb']|['Sb', 'Sb', 'Sb', 'Sb']": 0.25, "['Sb', 'Sb', 'Sb', 'Sb', 'Sb']|['Sb', 'Sb', 'Sb', 'Sb']": 0.25, "['Sb', 'Sb', 'Sb', 'Sb', 'L']|['Sb', 'Sb', 'Sb', 'Sb']": 0.25, "['Sb', 'Sb', 'Sb', 'Sb', 'C']|['Sb', 'Sb', 'Sb', 'Sb']": 0.25, "['Sa', 'Sb', 'Sb', 'Sb', 'L']|['Sb', 'Sb', 'Sb', 'L']": 0.25, "['Sb', 'Sb', 'Sb', 'Sb', 'L']|['Sb', 'Sb', 'Sb', 'L']": 0.25, "['Sb', 'Sb', 'Sb', 'L', 'L']|['Sb', 'Sb', 'Sb', 'L']": 0.25, "['Sb', 'Sb', 'Sb', 'L', 'C']|['Sb', 'Sb', 'Sb', 'L']": 0.25, "['Sa', 'Sb', 'Sb', 'Sb', 'C']|['Sb', 'Sb', 'Sb', 'C']": 0.25, "['Sb', 'Sb', 'Sb', 'Sb', 'C']|['Sb', 'Sb', 'Sb', 'C']": 0.25, "['Sb', 'Sb', 'Sb', 'L', 'C']|['Sb', 'Sb', 'Sb', 'C']": 0.25, "['Sb', 'Sb', 'Sb', 'C', 'C']|['Sb', 'Sb', 'Sb', 'C']": 0.25, "['Sa', 'Sb', 'Sb', 'L', 'L']|['Sb', 'Sb', 'L', 'L']": 0.25, "['Sb', 'Sb', 'Sb', 'L', 'L']|['Sb', 'Sb', 'L', 'L']": 0.25, "['Sb', 'Sb', 'L', 'L', 'L']|['Sb', 'Sb', 'L', 'L']": 0.25, "['Sb', 'Sb', 'L', 'L', 'C']|['Sb', 'Sb', 'L', 'L']": 0.25, "['Sa', 'Sb', 'Sb', 'L', 'C']|['Sb', 'Sb', 'L', 'C']": 0.25, "['Sb', 'Sb', 'Sb', 'L', 'C']|['Sb', 'Sb', 'L', 'C']": 0.25, "['Sb', 'Sb', 'L', 'L', 'C']|['Sb', 'Sb', 'L', 'C']": 0.25, "['Sb', 'Sb', 'L', 'C', 'C']|['Sb', 'Sb', 'L', 'C']": 0.25, "['Sa', 'Sb', 'Sb', 'C', 'C']|['Sb', 'Sb', 'C', 'C']": 0.25, "['Sb', 'Sb', 'Sb', 'C', 'C']|['Sb', 'Sb', 'C', 'C']": 0.25, "['Sb', 'Sb', 'L', 'C', 'C']|['Sb', 'Sb', 'C', 'C']": 0.25, "['Sb', 'Sb', 'C', 'C', 'C']|['Sb', 'Sb', 'C', 'C']": 0.25, "['Sa', 'Sb', 'L', 'L', 'L']|['Sb', 'L', 'L', 'L']": 0.25, "['Sb', 'Sb', 'L', 'L', 'L']|['Sb', 'L', 'L', 'L']": 0.25, "['Sb', 'L', 'L', 'L', 'L']|['Sb', 'L', 'L', 'L']": 0.25, "['Sb', 'L', 'L', 'L', 'C']|['Sb', 'L', 'L', 'L']": 0.25, "['Sa', 'Sb', 'L', 'L', 'C']|['Sb', 'L', 'L', 'C']": 0.25, "['Sb', 'Sb', 'L', 'L', 'C']|['Sb', 'L', 'L', 'C']": 0.25, "['Sb', 'L', 'L', 'L', 'C']|['Sb', 'L', 'L', 'C']": 0.25, "['Sb', 'L', 'L', 'C', 'C']|['Sb', 'L', 'L', 'C']": 0.25, "['Sa', 'Sb', 'L', 'C', 'C']|['Sb', 'L', 'C', 'C']": 0.25, "['Sb', 'Sb', 'L', 'C', 'C']|['Sb', 'L', 'C', 'C']": 0.25, "['Sb', 'L', 'L', 'C', 'C']|['Sb', 'L', 'C', 'C']": 0.25, "['Sb', 'L', 'C', 'C', 'C']|['Sb', 'L', 'C', 'C']": 0.25, "['Sa', 'Sb', 'C', 'C', 'C']|['Sb', 'C', 'C', 'C']": 0.25, "['Sb', 'Sb', 'C', 'C', 'C']|['Sb', 'C', 'C', 'C']": 0.25, "['Sb', 'L', 'C', 'C', 'C']|['Sb', 'C', 'C', 'C']": 0.25, "['Sb', 'C', 'C', 'C', 'C']|['Sb', 'C', 'C', 'C']": 0.25, "['Sa', 'L', 'L', 'L', 'L']|['L', 'L', 'L', 'L']": 0.25, "['Sb', 'L', 'L', 'L', 'L']|['L', 'L', 'L', 'L']": 0.25, "['L', 'L', 'L', 'L', 'L']|['L', 'L', 'L', 'L']": 0.25, "['L', 'L', 'L', 'L', 'C']|['L', 'L', 'L', 'L']": 0.25, "['Sa', 'L', 'L', 'L', 'C']|['L', 'L', 'L', 'C']": 0.25, "['Sb', 'L', 'L', 'L', 'C']|['L', 'L', 'L', 'C']": 0.25, "['L', 'L', 'L', 'L', 'C']|['L', 'L', 'L', 'C']": 0.25, "['L', 'L', 'L', 'C', 'C']|['L', 'L', 'L', 'C']": 0.25, "['Sa', 'L', 'L', 'C', 'C']|['L', 'L', 'C', 'C']": 0.25, "['Sb', 'L', 'L', 'C', 'C']|['L', 'L', 'C', 'C']": 0.25, "['L', 'L', 'L', 'C', 'C']|['L', 'L', 'C', 'C']": 0.25, "['L', 'L', 'C', 'C', 'C']|['L', 'L', 'C', 'C']": 0.25, "['Sa', 'L', 'C', 'C', 'C']|['L', 'C', 'C', 'C']": 0.25, "['Sb', 'L', 'C', 'C', 'C']|['L', 'C', 'C', 'C']": 0.25, "['L', 'L', 'C', 'C', 'C']|['L', 'C', 'C', 'C']": 0.25, "['L', 'C', 'C', 'C', 'C']|['L', 'C', 'C', 'C']": 0.25, "['Sa', 'C', 'C', 'C', 'C']|['C', 'C', 'C', 'C']": 0.25, "['Sb', 'C', 'C', 'C', 'C']|['C', 'C', 'C', 'C']": 0.25, "['L', 'C', 'C', 'C', 'C']|['C', 'C', 'C', 'C']": 0.25, "['C', 'C', 'C', 'C', 'C']|['C', 'C', 'C', 'C']": 0.25}
('Sa', 'Sa', 'Sa', 'Sa', 'Sa') : 1
('Sa', 'Sa', 'Sa', 'Sa', 'Sb') : 5
('Sa', 'Sa', 'Sa', 'Sa', 'L') : 5
('Sa', 'Sa', 'Sa', 'Sa', 'C') : 5
('Sa', 'Sa', 'Sa', 'Sb', 'Sb') : 10
('Sa', 'Sa', 'Sa', 'Sb', 'L') : 20
('Sa', 'Sa', 'Sa', 'Sb', 'C') : 20
('Sa', 'Sa', 'Sa', 'L', 'L') : 10
('Sa', 'Sa', 'Sa', 'L', 'C') : 20
('Sa', 'Sa', 'Sa', 'C', 'C') : 10
('Sa', 'Sa', 'Sb', 'Sb', 'Sb') : 10
('Sa', 'Sa', 'Sb', 'Sb', 'L') : 30
('Sa', 'Sa', 'Sb', 'Sb', 'C') : 30
('Sa', 'Sa', 'Sb', 'L', 'L') : 30
('Sa', 'Sa', 'Sb', 'L', 'C') : 60
('Sa', 'Sa', 'Sb', 'C', 'C') : 30
('Sa', 'Sa', 'L', 'L', 'L') : 10
('Sa', 'Sa', 'L', 'L', 'C') : 30
('Sa', 'Sa', 'L', 'C', 'C') : 30
('Sa', 'Sa', 'C', 'C', 'C') : 10
('Sa', 'Sb', 'Sb', 'Sb', 'Sb') : 5
('Sa', 'Sb', 'Sb', 'Sb', 'L') : 20
('Sa', 'Sb', 'Sb', 'Sb', 'C') : 20
('Sa', 'Sb', 'Sb', 'L', 'L') : 30
('Sa', 'Sb', 'Sb', 'L', 'C') : 60
('Sa', 'Sb', 'Sb', 'C', 'C') : 30
('Sa', 'Sb', 'L', 'L', 'L') : 20
('Sa', 'Sb', 'L', 'L', 'C') : 60
('Sa', 'Sb', 'L', 'C', 'C') : 60
('Sa', 'Sb', 'C', 'C', 'C') : 20
('Sa', 'L', 'L', 'L', 'L') : 5
('Sa', 'L', 'L', 'L', 'C') : 20
('Sa', 'L', 'L', 'C', 'C') : 30
('Sa', 'L', 'C', 'C', 'C') : 20
('Sa', 'C', 'C', 'C', 'C') : 5
('Sb', 'Sb', 'Sb', 'Sb', 'Sb') : 1
('Sb', 'Sb', 'Sb', 'Sb', 'L') : 5
('Sb', 'Sb', 'Sb', 'Sb', 'C') : 5
('Sb', 'Sb', 'Sb', 'L', 'L') : 10
('Sb', 'Sb', 'Sb', 'L', 'C') : 20
('Sb', 'Sb', 'Sb', 'C', 'C') : 10
('Sb', 'Sb', 'L', 'L', 'L') : 10
('Sb', 'Sb', 'L', 'L', 'C') : 30
('Sb', 'Sb', 'L', 'C', 'C') : 30
('Sb', 'Sb', 'C', 'C', 'C') : 10
('Sb', 'L', 'L', 'L', 'L') : 5
('Sb', 'L', 'L', 'L', 'C') : 20
('Sb', 'L', 'L', 'C', 'C') : 30
('Sb', 'L', 'C', 'C', 'C') : 20
('Sb', 'C', 'C', 'C', 'C') : 5
('L', 'L', 'L', 'L', 'L') : 1
('L', 'L', 'L', 'L', 'C') : 5
('L', 'L', 'L', 'C', 'C') : 10
('L', 'L', 'C', 'C', 'C') : 10
('L', 'C', 'C', 'C', 'C') : 5
('C', 'C', 'C', 'C', 'C') : 1
[]
<Synchronized wrapper for c_int(100)>
root offset is:  1
has to be unconnected
has to be unconnected
['VIN - Sa - VOUT', 'VIN - C - C - Sb - VOUT', 'VIN - C - C - L - VOUT', 'VIN - Sa - Sb - C - GND', 'VIN - Sa - L - C - GND', 'VIN - C - GND', 'VOUT - Sb - C - GND', 'VOUT - Sa - C - GND', 'VOUT - L - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'IN']), ('C1', ['0', 'N-C1-L0-Sb0']), ('L0', ['N-C1-L0-Sb0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['N-C1-L0-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_10(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, 1/100, 0], [-1/Cout, -102001/(100000*Cout), -1/Cout, 1/(100000*Cout)], [-1/10, -1/10, -1/10, 0], [0, 1/1000000, 0, -1000001/1000000]]', 'b': '[[0], [0], [0], [1]]', 'c': '[[0, 0, -1, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_10(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, 1/100, 0], [-1/Cout, -102001/(100000*Cout), -1/(100000*Cout), 1/Cout], [-1/10, -1/1000000, -1/1000000, 0], [0, 1/10, 0, -11/10]]', 'b': '[[0], [0], [0], [1]]', 'c': '[[0, 0, -1, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '10', '0'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', '10'], ['L0', 'OUT', '10'], ['C0', '0', '10'], ['C1', 'IN', '0']]}
['VIN - Sa - VOUT', 'VIN - C - C - Sb - VOUT', 'VIN - C - C - L - VOUT', 'VIN - Sa - Sb - C - GND', 'VIN - Sa - L - C - GND', 'VIN - C - GND', 'VOUT - Sb - C - GND', 'VOUT - Sa - C - GND', 'VOUT - L - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'IN']), ('C1', ['0', 'N-C1-L0-Sb0']), ('L0', ['N-C1-L0-Sb0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['N-C1-L0-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_10(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, 1/100, 0], [-1/Cout, -102001/(100000*Cout), -1/Cout, 1/(100000*Cout)], [-1/10, -1/10, -1/10, 0], [0, 1/1000000, 0, -1000001/1000000]]', 'b': '[[0], [0], [0], [1]]', 'c': '[[0, 0, -1, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_10(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, 1/100, 0], [-1/Cout, -102001/(100000*Cout), -1/(100000*Cout), 1/Cout], [-1/10, -1/1000000, -1/1000000, 0], [0, 1/10, 0, -11/10]]', 'b': '[[0], [0], [0], [1]]', 'c': '[[0, 0, -1, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '10', '0'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', '10'], ['L0', 'OUT', '10'], ['C0', '0', '10'], ['C1', 'IN', '0']]}
['VIN - Sa - VOUT', 'VIN - C - C - Sb - VOUT', 'VIN - C - C - L - VOUT', 'VIN - Sa - Sb - C - GND', 'VIN - Sa - L - C - GND', 'VIN - C - GND', 'VOUT - Sb - C - GND', 'VOUT - Sa - C - GND', 'VOUT - L - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'IN']), ('C1', ['0', 'N-C1-L0-Sb0']), ('L0', ['N-C1-L0-Sb0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['N-C1-L0-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_10(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, 1/100, 0], [-1/Cout, -102001/(100000*Cout), -1/Cout, 1/(100000*Cout)], [-1/10, -1/10, -1/10, 0], [0, 1/1000000, 0, -1000001/1000000]]', 'b': '[[0], [0], [0], [1]]', 'c': '[[0, 0, -1, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_10(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, 1/100, 0], [-1/Cout, -102001/(100000*Cout), -1/(100000*Cout), 1/Cout], [-1/10, -1/1000000, -1/1000000, 0], [0, 1/10, 0, -11/10]]', 'b': '[[0], [0], [0], [1]]', 'c': '[[0, 0, -1, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '10', '0'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', '10'], ['L0', 'OUT', '10'], ['C0', '0', '10'], ['C1', 'IN', '0']]}
['VIN - Sa - VOUT', 'VIN - C - C - Sb - VOUT', 'VIN - C - C - L - VOUT', 'VIN - Sa - Sb - C - GND', 'VIN - Sa - L - C - GND', 'VIN - C - GND', 'VOUT - Sb - C - GND', 'VOUT - Sa - C - GND', 'VOUT - L - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'IN']), ('C1', ['0', 'N-C1-L0-Sb0']), ('L0', ['N-C1-L0-Sb0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['N-C1-L0-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_10(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, 1/100, 0], [-1/Cout, -102001/(100000*Cout), -1/Cout, 1/(100000*Cout)], [-1/10, -1/10, -1/10, 0], [0, 1/1000000, 0, -1000001/1000000]]', 'b': '[[0], [0], [0], [1]]', 'c': '[[0, 0, -1, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_10(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, 1/100, 0], [-1/Cout, -102001/(100000*Cout), -1/(100000*Cout), 1/Cout], [-1/10, -1/1000000, -1/1000000, 0], [0, 1/10, 0, -11/10]]', 'b': '[[0], [0], [0], [1]]', 'c': '[[0, 0, -1, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '10', '0'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', '10'], ['L0', 'OUT', '10'], ['C0', '0', '10'], ['C1', 'IN', '0']]}
['VIN - Sa - VOUT', 'VIN - C - C - Sb - VOUT', 'VIN - C - C - L - VOUT', 'VIN - Sa - Sb - C - GND', 'VIN - Sa - L - C - GND', 'VIN - C - GND', 'VOUT - Sb - C - GND', 'VOUT - Sa - C - GND', 'VOUT - L - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'IN']), ('C1', ['0', 'N-C1-L0-Sb0']), ('L0', ['N-C1-L0-Sb0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['N-C1-L0-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_10(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, 1/100, 0], [-1/Cout, -102001/(100000*Cout), -1/Cout, 1/(100000*Cout)], [-1/10, -1/10, -1/10, 0], [0, 1/1000000, 0, -1000001/1000000]]', 'b': '[[0], [0], [0], [1]]', 'c': '[[0, 0, -1, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_10(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, 1/100, 0], [-1/Cout, -102001/(100000*Cout), -1/(100000*Cout), 1/Cout], [-1/10, -1/1000000, -1/1000000, 0], [0, 1/10, 0, -11/10]]', 'b': '[[0], [0], [0], [1]]', 'c': '[[0, 0, -1, 0], [0, 0, 0, 1], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '10', '0'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', '10'], ['L0', 'OUT', '10'], ['C0', '0', '10'], ['C1', 'IN', '0']]}
has to be unconnected
['VIN - C - C - C - VOUT', 'VIN - C - C - Sa - GND', 'VOUT - C - C - C - Sa - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-C2', 'OUT']), ('C1', ['IN', 'N-C1-C2-C3']), ('C2', ['N-C0-C2', 'N-C1-C2-C3']), ('C3', ['N-C1-C2-C3', 'N-C3-Sa0']), ('Sa0', ['0', 'N-C3-Sa0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)], [v_C2(t)], [v_C3(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1002001/(100000*Cout), -1/(100000*Cout), 1000001/(100000*Cout), -10/Cout, 1000001/(100000*Cout)], [-1/1000000, -1/1000000, 1/1000000, 0, 1/1000000], [1000001/1000000, 1/1000000, -1000001/1000000, 1, -1000001/1000000], [-1, 0, 1, -1, 1], [1000001/1000000, 1/1000000, -1000001/1000000, 1, -1000001/1000000]]', 'b': '[[10/Cout], [0], [-1], [1], [-1]]', 'c': '[[1, 0, -1, 0, -1], [1, 0, 0, 0, -1], [1, 1, -1, 0, -1], [1, 0, -1, 1, -1], [0, 0, 0, 0, 0], [1, 0, 0, 0, 0]]', 'd': '[[0], [0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)], [v_C2(t)], [v_C3(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-551/(50*Cout), -1/Cout, 11/Cout, -10/Cout, 11/Cout], [-1/10, -1/10, 1/10, 0, 1/10], [11/10, 1/10, -11/10, 1, -11/10], [-1, 0, 1, -1, 1], [11/10, 1/10, -11/10, 1, -11/10]]', 'b': '[[10/Cout], [0], [-1], [1], [-1]]', 'c': '[[1, 0, -1, 0, -1], [1, 0, 0, 0, -1], [1, 1, -1, 0, -1], [1, 0, -1, 1, -1], [0, 0, 0, 0, 0], [1, 0, 0, 0, 0]]', 'd': '[[0], [0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1', 'C2', 'C3'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '5', '10', '12'], 'net_list': [['Sa0', '0', '5'], ['C0', '5', '10'], ['C1', '12', '10'], ['C2', 'IN', '10'], ['C3', 'OUT', '12']]}
['VIN - C - C - C - VOUT', 'VIN - C - C - Sa - GND', 'VOUT - C - C - C - Sa - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-C2', 'OUT']), ('C1', ['IN', 'N-C1-C2-C3']), ('C2', ['N-C0-C2', 'N-C1-C2-C3']), ('C3', ['N-C1-C2-C3', 'N-C3-Sa0']), ('Sa0', ['0', 'N-C3-Sa0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)], [v_C2(t)], [v_C3(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1002001/(100000*Cout), -1/(100000*Cout), 1000001/(100000*Cout), -10/Cout, 1000001/(100000*Cout)], [-1/1000000, -1/1000000, 1/1000000, 0, 1/1000000], [1000001/1000000, 1/1000000, -1000001/1000000, 1, -1000001/1000000], [-1, 0, 1, -1, 1], [1000001/1000000, 1/1000000, -1000001/1000000, 1, -1000001/1000000]]', 'b': '[[10/Cout], [0], [-1], [1], [-1]]', 'c': '[[1, 0, -1, 0, -1], [1, 0, 0, 0, -1], [1, 1, -1, 0, -1], [1, 0, -1, 1, -1], [0, 0, 0, 0, 0], [1, 0, 0, 0, 0]]', 'd': '[[0], [0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)], [v_C2(t)], [v_C3(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-551/(50*Cout), -1/Cout, 11/Cout, -10/Cout, 11/Cout], [-1/10, -1/10, 1/10, 0, 1/10], [11/10, 1/10, -11/10, 1, -11/10], [-1, 0, 1, -1, 1], [11/10, 1/10, -11/10, 1, -11/10]]', 'b': '[[10/Cout], [0], [-1], [1], [-1]]', 'c': '[[1, 0, -1, 0, -1], [1, 0, 0, 0, -1], [1, 1, -1, 0, -1], [1, 0, -1, 1, -1], [0, 0, 0, 0, 0], [1, 0, 0, 0, 0]]', 'd': '[[0], [0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1', 'C2', 'C3'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '5', '10', '12'], 'net_list': [['Sa0', '0', '5'], ['C0', '5', '10'], ['C1', '12', '10'], ['C2', 'IN', '10'], ['C3', 'OUT', '12']]}
['VIN - C - C - C - VOUT', 'VIN - C - C - Sa - GND', 'VOUT - C - C - C - Sa - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-C2', 'OUT']), ('C1', ['IN', 'N-C1-C2-C3']), ('C2', ['N-C0-C2', 'N-C1-C2-C3']), ('C3', ['N-C1-C2-C3', 'N-C3-Sa0']), ('Sa0', ['0', 'N-C3-Sa0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)], [v_C2(t)], [v_C3(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1002001/(100000*Cout), -1/(100000*Cout), 1000001/(100000*Cout), -10/Cout, 1000001/(100000*Cout)], [-1/1000000, -1/1000000, 1/1000000, 0, 1/1000000], [1000001/1000000, 1/1000000, -1000001/1000000, 1, -1000001/1000000], [-1, 0, 1, -1, 1], [1000001/1000000, 1/1000000, -1000001/1000000, 1, -1000001/1000000]]', 'b': '[[10/Cout], [0], [-1], [1], [-1]]', 'c': '[[1, 0, -1, 0, -1], [1, 0, 0, 0, -1], [1, 1, -1, 0, -1], [1, 0, -1, 1, -1], [0, 0, 0, 0, 0], [1, 0, 0, 0, 0]]', 'd': '[[0], [0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)], [v_C2(t)], [v_C3(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-551/(50*Cout), -1/Cout, 11/Cout, -10/Cout, 11/Cout], [-1/10, -1/10, 1/10, 0, 1/10], [11/10, 1/10, -11/10, 1, -11/10], [-1, 0, 1, -1, 1], [11/10, 1/10, -11/10, 1, -11/10]]', 'b': '[[10/Cout], [0], [-1], [1], [-1]]', 'c': '[[1, 0, -1, 0, -1], [1, 0, 0, 0, -1], [1, 1, -1, 0, -1], [1, 0, -1, 1, -1], [0, 0, 0, 0, 0], [1, 0, 0, 0, 0]]', 'd': '[[0], [0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1', 'C2', 'C3'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '5', '10', '12'], 'net_list': [['Sa0', '0', '5'], ['C0', '5', '10'], ['C1', '12', '10'], ['C2', 'IN', '10'], ['C3', 'OUT', '12']]}
['VIN - C - C - C - VOUT', 'VIN - C - C - Sa - GND', 'VOUT - C - C - C - Sa - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-C2', 'OUT']), ('C1', ['IN', 'N-C1-C2-C3']), ('C2', ['N-C0-C2', 'N-C1-C2-C3']), ('C3', ['N-C1-C2-C3', 'N-C3-Sa0']), ('Sa0', ['0', 'N-C3-Sa0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)], [v_C2(t)], [v_C3(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1002001/(100000*Cout), -1/(100000*Cout), 1000001/(100000*Cout), -10/Cout, 1000001/(100000*Cout)], [-1/1000000, -1/1000000, 1/1000000, 0, 1/1000000], [1000001/1000000, 1/1000000, -1000001/1000000, 1, -1000001/1000000], [-1, 0, 1, -1, 1], [1000001/1000000, 1/1000000, -1000001/1000000, 1, -1000001/1000000]]', 'b': '[[10/Cout], [0], [-1], [1], [-1]]', 'c': '[[1, 0, -1, 0, -1], [1, 0, 0, 0, -1], [1, 1, -1, 0, -1], [1, 0, -1, 1, -1], [0, 0, 0, 0, 0], [1, 0, 0, 0, 0]]', 'd': '[[0], [0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)], [v_C2(t)], [v_C3(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-551/(50*Cout), -1/Cout, 11/Cout, -10/Cout, 11/Cout], [-1/10, -1/10, 1/10, 0, 1/10], [11/10, 1/10, -11/10, 1, -11/10], [-1, 0, 1, -1, 1], [11/10, 1/10, -11/10, 1, -11/10]]', 'b': '[[10/Cout], [0], [-1], [1], [-1]]', 'c': '[[1, 0, -1, 0, -1], [1, 0, 0, 0, -1], [1, 1, -1, 0, -1], [1, 0, -1, 1, -1], [0, 0, 0, 0, 0], [1, 0, 0, 0, 0]]', 'd': '[[0], [0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1', 'C2', 'C3'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '5', '10', '12'], 'net_list': [['Sa0', '0', '5'], ['C0', '5', '10'], ['C1', '12', '10'], ['C2', 'IN', '10'], ['C3', 'OUT', '12']]}
['VIN - C - C - C - VOUT', 'VIN - C - C - Sa - GND', 'VOUT - C - C - C - Sa - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-C2', 'OUT']), ('C1', ['IN', 'N-C1-C2-C3']), ('C2', ['N-C0-C2', 'N-C1-C2-C3']), ('C3', ['N-C1-C2-C3', 'N-C3-Sa0']), ('Sa0', ['0', 'N-C3-Sa0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)], [v_C2(t)], [v_C3(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1002001/(100000*Cout), -1/(100000*Cout), 1000001/(100000*Cout), -10/Cout, 1000001/(100000*Cout)], [-1/1000000, -1/1000000, 1/1000000, 0, 1/1000000], [1000001/1000000, 1/1000000, -1000001/1000000, 1, -1000001/1000000], [-1, 0, 1, -1, 1], [1000001/1000000, 1/1000000, -1000001/1000000, 1, -1000001/1000000]]', 'b': '[[10/Cout], [0], [-1], [1], [-1]]', 'c': '[[1, 0, -1, 0, -1], [1, 0, 0, 0, -1], [1, 1, -1, 0, -1], [1, 0, -1, 1, -1], [0, 0, 0, 0, 0], [1, 0, 0, 0, 0]]', 'd': '[[0], [0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)], [v_C2(t)], [v_C3(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-551/(50*Cout), -1/Cout, 11/Cout, -10/Cout, 11/Cout], [-1/10, -1/10, 1/10, 0, 1/10], [11/10, 1/10, -11/10, 1, -11/10], [-1, 0, 1, -1, 1], [11/10, 1/10, -11/10, 1, -11/10]]', 'b': '[[10/Cout], [0], [-1], [1], [-1]]', 'c': '[[1, 0, -1, 0, -1], [1, 0, 0, 0, -1], [1, 1, -1, 0, -1], [1, 0, -1, 1, -1], [0, 0, 0, 0, 0], [1, 0, 0, 0, 0]]', 'd': '[[0], [0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1', 'C2', 'C3'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '5', '10', '12'], 'net_list': [['Sa0', '0', '5'], ['C0', '5', '10'], ['C1', '12', '10'], ['C2', 'IN', '10'], ['C3', 'OUT', '12']]}
has to be unconnected
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - Sb - Sa - GND', 'VOUT - Sb - Sa - Sb - Sa - GND', 'VOUT - Sa - Sa - Sb - Sa - GND']

 PCC-36504
1
OrderedDict([('Sa0', ['IN', 'N-Sa0-Sb0']), ('Sa1', ['0', 'N-Sa1-Sb0']), ('Sa2', ['IN', 'OUT']), ('Sb0', ['N-Sa0-Sb0', 'N-Sa1-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-10220156400551/(11000070000050*Cout)]]', 'b': '[[200003000010/(220001400001*Cout)]]', 'c': '[[10000200001/220001400001], [10000100000/220001400001], [20000300001/220001400001], [0], [1]]', 'd': '[[100001000000/220001400001], [100000000000/220001400001], [200001000000/220001400001], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-116139940933/(125002727275*Cout)]]', 'b': '[[4545590910/(5000109091*Cout)]]', 'c': '[[909109091/10000218182], [9091/10000218182], [454559091/5000109091], [0], [1]]', 'd': '[[4545500000/5000109091], [500000/55001200001], [50001000000/55001200001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'Ra1', 'Rb1', 'Ra2', 'Rb2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '9', '12'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['Sa1', '0', '9'], ['Sb1', '9', '12'], ['Sa2', 'IN', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - Sb - Sa - GND', 'VOUT - Sb - Sa - Sb - Sa - GND', 'VOUT - Sa - Sa - Sb - Sa - GND']

 PCC-36504
1
OrderedDict([('Sa0', ['IN', 'N-Sa0-Sb0']), ('Sa1', ['0', 'N-Sa1-Sb0']), ('Sa2', ['IN', 'OUT']), ('Sb0', ['N-Sa0-Sb0', 'N-Sa1-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-10220156400551/(11000070000050*Cout)]]', 'b': '[[200003000010/(220001400001*Cout)]]', 'c': '[[10000200001/220001400001], [10000100000/220001400001], [20000300001/220001400001], [0], [1]]', 'd': '[[100001000000/220001400001], [100000000000/220001400001], [200001000000/220001400001], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-116139940933/(125002727275*Cout)]]', 'b': '[[4545590910/(5000109091*Cout)]]', 'c': '[[909109091/10000218182], [9091/10000218182], [454559091/5000109091], [0], [1]]', 'd': '[[4545500000/5000109091], [500000/55001200001], [50001000000/55001200001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'Ra1', 'Rb1', 'Ra2', 'Rb2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '9', '12'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['Sa1', '0', '9'], ['Sb1', '9', '12'], ['Sa2', 'IN', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - Sb - Sa - GND', 'VOUT - Sb - Sa - Sb - Sa - GND', 'VOUT - Sa - Sa - Sb - Sa - GND']

 PCC-36504
1
OrderedDict([('Sa0', ['IN', 'N-Sa0-Sb0']), ('Sa1', ['0', 'N-Sa1-Sb0']), ('Sa2', ['IN', 'OUT']), ('Sb0', ['N-Sa0-Sb0', 'N-Sa1-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-10220156400551/(11000070000050*Cout)]]', 'b': '[[200003000010/(220001400001*Cout)]]', 'c': '[[10000200001/220001400001], [10000100000/220001400001], [20000300001/220001400001], [0], [1]]', 'd': '[[100001000000/220001400001], [100000000000/220001400001], [200001000000/220001400001], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-116139940933/(125002727275*Cout)]]', 'b': '[[4545590910/(5000109091*Cout)]]', 'c': '[[909109091/10000218182], [9091/10000218182], [454559091/5000109091], [0], [1]]', 'd': '[[4545500000/5000109091], [500000/55001200001], [50001000000/55001200001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'Ra1', 'Rb1', 'Ra2', 'Rb2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '9', '12'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['Sa1', '0', '9'], ['Sb1', '9', '12'], ['Sa2', 'IN', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - Sb - Sa - GND', 'VOUT - Sb - Sa - Sb - Sa - GND', 'VOUT - Sa - Sa - Sb - Sa - GND']

 PCC-36504
1
OrderedDict([('Sa0', ['IN', 'N-Sa0-Sb0']), ('Sa1', ['0', 'N-Sa1-Sb0']), ('Sa2', ['IN', 'OUT']), ('Sb0', ['N-Sa0-Sb0', 'N-Sa1-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-10220156400551/(11000070000050*Cout)]]', 'b': '[[200003000010/(220001400001*Cout)]]', 'c': '[[10000200001/220001400001], [10000100000/220001400001], [20000300001/220001400001], [0], [1]]', 'd': '[[100001000000/220001400001], [100000000000/220001400001], [200001000000/220001400001], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-116139940933/(125002727275*Cout)]]', 'b': '[[4545590910/(5000109091*Cout)]]', 'c': '[[909109091/10000218182], [9091/10000218182], [454559091/5000109091], [0], [1]]', 'd': '[[4545500000/5000109091], [500000/55001200001], [50001000000/55001200001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'Ra1', 'Rb1', 'Ra2', 'Rb2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '9', '12'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['Sa1', '0', '9'], ['Sb1', '9', '12'], ['Sa2', 'IN', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - Sb - Sa - GND', 'VOUT - Sb - Sa - Sb - Sa - GND', 'VOUT - Sa - Sa - Sb - Sa - GND']

 PCC-36504
1
OrderedDict([('Sa0', ['IN', 'N-Sa0-Sb0']), ('Sa1', ['0', 'N-Sa1-Sb0']), ('Sa2', ['IN', 'OUT']), ('Sb0', ['N-Sa0-Sb0', 'N-Sa1-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-10220156400551/(11000070000050*Cout)]]', 'b': '[[200003000010/(220001400001*Cout)]]', 'c': '[[10000200001/220001400001], [10000100000/220001400001], [20000300001/220001400001], [0], [1]]', 'd': '[[100001000000/220001400001], [100000000000/220001400001], [200001000000/220001400001], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-116139940933/(125002727275*Cout)]]', 'b': '[[4545590910/(5000109091*Cout)]]', 'c': '[[909109091/10000218182], [9091/10000218182], [454559091/5000109091], [0], [1]]', 'd': '[[4545500000/5000109091], [500000/55001200001], [50001000000/55001200001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'Ra1', 'Rb1', 'Ra2', 'Rb2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '9', '12'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['Sa1', '0', '9'], ['Sb1', '9', '12'], ['Sa2', 'IN', '12']]}
['VIN - C - VOUT', 'VIN - L - L - Sa - Sb - VOUT', 'VIN - C - Sb - Sa - GND', 'VIN - L - L - GND', 'VOUT - C - L - L - GND', 'VOUT - Sb - Sa - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'OUT']), ('L0', ['0', 'N-L0-L1']), ('L1', ['IN', 'N-L0-L1']), ('Sa0', ['0', 'N-Sa0-Sb0']), ('Sb0', ['N-Sa0-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-36504 violations

['VIN - C - VOUT', 'VIN - L - L - Sa - Sb - VOUT', 'VIN - C - Sb - Sa - GND', 'VIN - L - L - GND', 'VOUT - C - L - L - GND', 'VOUT - Sb - Sa - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'OUT']), ('L0', ['0', 'N-L0-L1']), ('L1', ['IN', 'N-L0-L1']), ('Sa0', ['0', 'N-Sa0-Sb0']), ('Sb0', ['N-Sa0-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - C - VOUT', 'VIN - L - L - Sa - Sb - VOUT', 'VIN - C - Sb - Sa - GND', 'VIN - L - L - GND', 'VOUT - C - L - L - GND', 'VOUT - Sb - Sa - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'OUT']), ('L0', ['0', 'N-L0-L1']), ('L1', ['IN', 'N-L0-L1']), ('Sa0', ['0', 'N-Sa0-Sb0']), ('Sb0', ['N-Sa0-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - C - VOUT', 'VIN - L - L - Sa - Sb - VOUT', 'VIN - C - Sb - Sa - GND', 'VIN - L - L - GND', 'VOUT - C - L - L - GND', 'VOUT - Sb - Sa - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'OUT']), ('L0', ['0', 'N-L0-L1']), ('L1', ['IN', 'N-L0-L1']), ('Sa0', ['0', 'N-Sa0-Sb0']), ('Sb0', ['N-Sa0-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - C - VOUT', 'VIN - L - L - Sa - Sb - VOUT', 'VIN - C - Sb - Sa - GND', 'VIN - L - L - GND', 'VOUT - C - L - L - GND', 'VOUT - Sb - Sa - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'OUT']), ('L0', ['0', 'N-L0-L1']), ('L1', ['IN', 'N-L0-L1']), ('Sa0', ['0', 'N-Sa0-Sb0']), ('Sb0', ['N-Sa0-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
has to be unconnected
['VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sb - L - GND', 'VIN - Sb - L - GND', 'VOUT - Sa - Sb - C - GND', 'VOUT - Sa - Sb - L - GND', 'VOUT - Sa - Sb - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-L0-L1-Sb0']), ('L0', ['0', 'N-C0-L0-L1-Sb0']), ('L1', ['0', 'N-C0-L0-L1-Sb0']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['IN', 'N-C0-L0-L1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, 1/100], [0, 0, 0, -1/100], [0, 0, -1100551/(55000050*Cout), 1/(1100001*Cout)], [-1/10, 1/10, 1/11000010, -1000001/11000010]]', 'b': '[[0], [0], [10/(1100001*Cout)], [100000/1100001]]', 'c': '[[0, 0, 0, 1], [0, 0, 1/1100001, 100000/1100001], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, 1/100], [0, 0, 0, -1/100], [0, 0, -51100051/(55000050*Cout), 1/(1100001*Cout)], [-1/10, 1/10, 1/11000010, -11/11000010]]', 'b': '[[0], [0], [1000000/(1100001*Cout)], [1/1100001]]', 'c': '[[0, 0, 0, 1], [0, 0, 100000/1100001, 1/1100001], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', 'IN', '12'], ['L0', '12', '0'], ['C0', '12', '0'], ['L1', '0', '12']]}
['VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sb - L - GND', 'VIN - Sb - L - GND', 'VOUT - Sa - Sb - C - GND', 'VOUT - Sa - Sb - L - GND', 'VOUT - Sa - Sb - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-L0-L1-Sb0']), ('L0', ['0', 'N-C0-L0-L1-Sb0']), ('L1', ['0', 'N-C0-L0-L1-Sb0']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['IN', 'N-C0-L0-L1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, 1/100], [0, 0, 0, -1/100], [0, 0, -1100551/(55000050*Cout), 1/(1100001*Cout)], [-1/10, 1/10, 1/11000010, -1000001/11000010]]', 'b': '[[0], [0], [10/(1100001*Cout)], [100000/1100001]]', 'c': '[[0, 0, 0, 1], [0, 0, 1/1100001, 100000/1100001], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, 1/100], [0, 0, 0, -1/100], [0, 0, -51100051/(55000050*Cout), 1/(1100001*Cout)], [-1/10, 1/10, 1/11000010, -11/11000010]]', 'b': '[[0], [0], [1000000/(1100001*Cout)], [1/1100001]]', 'c': '[[0, 0, 0, 1], [0, 0, 100000/1100001, 1/1100001], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', 'IN', '12'], ['L0', '12', '0'], ['C0', '12', '0'], ['L1', '0', '12']]}
['VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sb - L - GND', 'VIN - Sb - L - GND', 'VOUT - Sa - Sb - C - GND', 'VOUT - Sa - Sb - L - GND', 'VOUT - Sa - Sb - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-L0-L1-Sb0']), ('L0', ['0', 'N-C0-L0-L1-Sb0']), ('L1', ['0', 'N-C0-L0-L1-Sb0']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['IN', 'N-C0-L0-L1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, 1/100], [0, 0, 0, -1/100], [0, 0, -1100551/(55000050*Cout), 1/(1100001*Cout)], [-1/10, 1/10, 1/11000010, -1000001/11000010]]', 'b': '[[0], [0], [10/(1100001*Cout)], [100000/1100001]]', 'c': '[[0, 0, 0, 1], [0, 0, 1/1100001, 100000/1100001], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, 1/100], [0, 0, 0, -1/100], [0, 0, -51100051/(55000050*Cout), 1/(1100001*Cout)], [-1/10, 1/10, 1/11000010, -11/11000010]]', 'b': '[[0], [0], [1000000/(1100001*Cout)], [1/1100001]]', 'c': '[[0, 0, 0, 1], [0, 0, 100000/1100001, 1/1100001], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', 'IN', '12'], ['L0', '12', '0'], ['C0', '12', '0'], ['L1', '0', '12']]}
['VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sb - L - GND', 'VIN - Sb - L - GND', 'VOUT - Sa - Sb - C - GND', 'VOUT - Sa - Sb - L - GND', 'VOUT - Sa - Sb - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-L0-L1-Sb0']), ('L0', ['0', 'N-C0-L0-L1-Sb0']), ('L1', ['0', 'N-C0-L0-L1-Sb0']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['IN', 'N-C0-L0-L1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, 1/100], [0, 0, 0, -1/100], [0, 0, -1100551/(55000050*Cout), 1/(1100001*Cout)], [-1/10, 1/10, 1/11000010, -1000001/11000010]]', 'b': '[[0], [0], [10/(1100001*Cout)], [100000/1100001]]', 'c': '[[0, 0, 0, 1], [0, 0, 1/1100001, 100000/1100001], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, 1/100], [0, 0, 0, -1/100], [0, 0, -51100051/(55000050*Cout), 1/(1100001*Cout)], [-1/10, 1/10, 1/11000010, -11/11000010]]', 'b': '[[0], [0], [1000000/(1100001*Cout)], [1/1100001]]', 'c': '[[0, 0, 0, 1], [0, 0, 100000/1100001, 1/1100001], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', 'IN', '12'], ['L0', '12', '0'], ['C0', '12', '0'], ['L1', '0', '12']]}
['VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sb - L - GND', 'VIN - Sb - L - GND', 'VOUT - Sa - Sb - C - GND', 'VOUT - Sa - Sb - L - GND', 'VOUT - Sa - Sb - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-L0-L1-Sb0']), ('L0', ['0', 'N-C0-L0-L1-Sb0']), ('L1', ['0', 'N-C0-L0-L1-Sb0']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['IN', 'N-C0-L0-L1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, 1/100], [0, 0, 0, -1/100], [0, 0, -1100551/(55000050*Cout), 1/(1100001*Cout)], [-1/10, 1/10, 1/11000010, -1000001/11000010]]', 'b': '[[0], [0], [10/(1100001*Cout)], [100000/1100001]]', 'c': '[[0, 0, 0, 1], [0, 0, 1/1100001, 100000/1100001], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, 1/100], [0, 0, 0, -1/100], [0, 0, -51100051/(55000050*Cout), 1/(1100001*Cout)], [-1/10, 1/10, 1/11000010, -11/11000010]]', 'b': '[[0], [0], [1000000/(1100001*Cout)], [1/1100001]]', 'c': '[[0, 0, 0, 1], [0, 0, 100000/1100001, 1/1100001], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', 'IN', '12'], ['L0', '12', '0'], ['C0', '12', '0'], ['L1', '0', '12']]}
['VIN - L - C - Sa - Sb - VOUT', 'VIN - L - Sa - VOUT', 'VIN - L - C - GND', 'VIN - L - Sa - Sb - Sa - GND', 'VOUT - Sb - Sa - GND', 'VOUT - Sa - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-L0-Sa0']), ('L0', ['IN', 'N-C0-L0-Sa0']), ('Sa0', ['N-C0-L0-Sa0', 'OUT']), ('Sa1', ['0', 'N-Sa1-Sb0']), ('Sb0', ['N-Sa1-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/1000, 0, 1/100], [0, -200202001/(10000100000*Cout), -1/(100000*Cout)], [-1/10, -1/1000000, -1/1000000]]', 'b': '[[1/100], [0], [0]]', 'c': '[[0, 0, -1], [0, 100000/100001, 0], [-1/10, 0, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/1000, 0, 1/100], [0, -5100101/(5000050*Cout), -1/Cout], [-1/10, -1/10, -1/10]]', 'b': '[[1/100], [0], [0]]', 'c': '[[0, 0, -1], [0, 1/100001, 0], [-1/10, 0, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '5', '12'], 'net_list': [['Sa0', '0', '5'], ['Sb0', '5', 'OUT'], ['L0', 'IN', '12'], ['C0', '0', '12'], ['Sa1', 'OUT', '12']]}
['VIN - L - C - Sa - Sb - VOUT', 'VIN - L - Sa - VOUT', 'VIN - L - C - GND', 'VIN - L - Sa - Sb - Sa - GND', 'VOUT - Sb - Sa - GND', 'VOUT - Sa - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-L0-Sa0']), ('L0', ['IN', 'N-C0-L0-Sa0']), ('Sa0', ['N-C0-L0-Sa0', 'OUT']), ('Sa1', ['0', 'N-Sa1-Sb0']), ('Sb0', ['N-Sa1-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/1000, 0, 1/100], [0, -200202001/(10000100000*Cout), -1/(100000*Cout)], [-1/10, -1/1000000, -1/1000000]]', 'b': '[[1/100], [0], [0]]', 'c': '[[0, 0, -1], [0, 100000/100001, 0], [-1/10, 0, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/1000, 0, 1/100], [0, -5100101/(5000050*Cout), -1/Cout], [-1/10, -1/10, -1/10]]', 'b': '[[1/100], [0], [0]]', 'c': '[[0, 0, -1], [0, 1/100001, 0], [-1/10, 0, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '5', '12'], 'net_list': [['Sa0', '0', '5'], ['Sb0', '5', 'OUT'], ['L0', 'IN', '12'], ['C0', '0', '12'], ['Sa1', 'OUT', '12']]}
['VIN - L - C - Sa - Sb - VOUT', 'VIN - L - Sa - VOUT', 'VIN - L - C - GND', 'VIN - L - Sa - Sb - Sa - GND', 'VOUT - Sb - Sa - GND', 'VOUT - Sa - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-L0-Sa0']), ('L0', ['IN', 'N-C0-L0-Sa0']), ('Sa0', ['N-C0-L0-Sa0', 'OUT']), ('Sa1', ['0', 'N-Sa1-Sb0']), ('Sb0', ['N-Sa1-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/1000, 0, 1/100], [0, -200202001/(10000100000*Cout), -1/(100000*Cout)], [-1/10, -1/1000000, -1/1000000]]', 'b': '[[1/100], [0], [0]]', 'c': '[[0, 0, -1], [0, 100000/100001, 0], [-1/10, 0, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/1000, 0, 1/100], [0, -5100101/(5000050*Cout), -1/Cout], [-1/10, -1/10, -1/10]]', 'b': '[[1/100], [0], [0]]', 'c': '[[0, 0, -1], [0, 1/100001, 0], [-1/10, 0, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '5', '12'], 'net_list': [['Sa0', '0', '5'], ['Sb0', '5', 'OUT'], ['L0', 'IN', '12'], ['C0', '0', '12'], ['Sa1', 'OUT', '12']]}
['VIN - L - C - Sa - Sb - VOUT', 'VIN - L - Sa - VOUT', 'VIN - L - C - GND', 'VIN - L - Sa - Sb - Sa - GND', 'VOUT - Sb - Sa - GND', 'VOUT - Sa - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-L0-Sa0']), ('L0', ['IN', 'N-C0-L0-Sa0']), ('Sa0', ['N-C0-L0-Sa0', 'OUT']), ('Sa1', ['0', 'N-Sa1-Sb0']), ('Sb0', ['N-Sa1-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/1000, 0, 1/100], [0, -200202001/(10000100000*Cout), -1/(100000*Cout)], [-1/10, -1/1000000, -1/1000000]]', 'b': '[[1/100], [0], [0]]', 'c': '[[0, 0, -1], [0, 100000/100001, 0], [-1/10, 0, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/1000, 0, 1/100], [0, -5100101/(5000050*Cout), -1/Cout], [-1/10, -1/10, -1/10]]', 'b': '[[1/100], [0], [0]]', 'c': '[[0, 0, -1], [0, 1/100001, 0], [-1/10, 0, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '5', '12'], 'net_list': [['Sa0', '0', '5'], ['Sb0', '5', 'OUT'], ['L0', 'IN', '12'], ['C0', '0', '12'], ['Sa1', 'OUT', '12']]}
['VIN - L - C - Sa - Sb - VOUT', 'VIN - L - Sa - VOUT', 'VIN - L - C - GND', 'VIN - L - Sa - Sb - Sa - GND', 'VOUT - Sb - Sa - GND', 'VOUT - Sa - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-L0-Sa0']), ('L0', ['IN', 'N-C0-L0-Sa0']), ('Sa0', ['N-C0-L0-Sa0', 'OUT']), ('Sa1', ['0', 'N-Sa1-Sb0']), ('Sb0', ['N-Sa1-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/1000, 0, 1/100], [0, -200202001/(10000100000*Cout), -1/(100000*Cout)], [-1/10, -1/1000000, -1/1000000]]', 'b': '[[1/100], [0], [0]]', 'c': '[[0, 0, -1], [0, 100000/100001, 0], [-1/10, 0, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/1000, 0, 1/100], [0, -5100101/(5000050*Cout), -1/Cout], [-1/10, -1/10, -1/10]]', 'b': '[[1/100], [0], [0]]', 'c': '[[0, 0, -1], [0, 1/100001, 0], [-1/10, 0, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '5', '12'], 'net_list': [['Sa0', '0', '5'], ['Sb0', '5', 'OUT'], ['L0', 'IN', '12'], ['C0', '0', '12'], ['Sa1', 'OUT', '12']]}
has to be unconnected
['VIN - C - Sa - L - VOUT', 'VIN - L - L - VOUT', 'VIN - C - L - VOUT', 'VIN - C - GND', 'VIN - L - Sa - GND', 'VIN - C - Sa - GND', 'VOUT - L - L - C - GND', 'VOUT - L - Sa - GND', 'VOUT - L - C - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'N-C0-L0-L1-Sa0']), ('C1', ['0', 'IN']), ('L0', ['IN', 'N-C0-L0-L1-Sa0']), ('L1', ['N-C0-L0-L1-Sa0', 'OUT']), ('Sa0', ['0', 'N-C0-L0-L1-Sa0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 1/100, 1/100, 1/100], [0, 0, 0, 0, 1/100], [-1/Cout, 0, -1/(50*Cout), 0, 0], [-1/10, 0, 0, -1000001/1000000, -1/1000000], [-1/10, -1/10, 0, -1/1000000, -1/1000000]]', 'b': '[[0], [0], [0], [-1], [0]]', 'c': '[[0, 0, 0, -1, -1], [0, 0, 0, -1, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 1/100, 1/100, 1/100], [0, 0, 0, 0, 1/100], [-1/Cout, 0, -1/(50*Cout), 0, 0], [-1/10, 0, 0, -11/10, -1/10], [-1/10, -1/10, 0, -1/10, -1/10]]', 'b': '[[0], [0], [0], [-1], [0]]', 'c': '[[0, 0, 0, -1, -1], [0, 0, 0, -1, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', '12', '0'], ['L0', 'OUT', '12'], ['C0', '0', 'IN'], ['L1', 'IN', '12'], ['C1', 'IN', '12']]}
['VIN - C - Sa - L - VOUT', 'VIN - L - L - VOUT', 'VIN - C - L - VOUT', 'VIN - C - GND', 'VIN - L - Sa - GND', 'VIN - C - Sa - GND', 'VOUT - L - L - C - GND', 'VOUT - L - Sa - GND', 'VOUT - L - C - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'N-C0-L0-L1-Sa0']), ('C1', ['0', 'IN']), ('L0', ['IN', 'N-C0-L0-L1-Sa0']), ('L1', ['N-C0-L0-L1-Sa0', 'OUT']), ('Sa0', ['0', 'N-C0-L0-L1-Sa0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 1/100, 1/100, 1/100], [0, 0, 0, 0, 1/100], [-1/Cout, 0, -1/(50*Cout), 0, 0], [-1/10, 0, 0, -1000001/1000000, -1/1000000], [-1/10, -1/10, 0, -1/1000000, -1/1000000]]', 'b': '[[0], [0], [0], [-1], [0]]', 'c': '[[0, 0, 0, -1, -1], [0, 0, 0, -1, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 1/100, 1/100, 1/100], [0, 0, 0, 0, 1/100], [-1/Cout, 0, -1/(50*Cout), 0, 0], [-1/10, 0, 0, -11/10, -1/10], [-1/10, -1/10, 0, -1/10, -1/10]]', 'b': '[[0], [0], [0], [-1], [0]]', 'c': '[[0, 0, 0, -1, -1], [0, 0, 0, -1, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', '12', '0'], ['L0', 'OUT', '12'], ['C0', '0', 'IN'], ['L1', 'IN', '12'], ['C1', 'IN', '12']]}
['VIN - C - Sa - L - VOUT', 'VIN - L - L - VOUT', 'VIN - C - L - VOUT', 'VIN - C - GND', 'VIN - L - Sa - GND', 'VIN - C - Sa - GND', 'VOUT - L - L - C - GND', 'VOUT - L - Sa - GND', 'VOUT - L - C - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'N-C0-L0-L1-Sa0']), ('C1', ['0', 'IN']), ('L0', ['IN', 'N-C0-L0-L1-Sa0']), ('L1', ['N-C0-L0-L1-Sa0', 'OUT']), ('Sa0', ['0', 'N-C0-L0-L1-Sa0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 1/100, 1/100, 1/100], [0, 0, 0, 0, 1/100], [-1/Cout, 0, -1/(50*Cout), 0, 0], [-1/10, 0, 0, -1000001/1000000, -1/1000000], [-1/10, -1/10, 0, -1/1000000, -1/1000000]]', 'b': '[[0], [0], [0], [-1], [0]]', 'c': '[[0, 0, 0, -1, -1], [0, 0, 0, -1, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 1/100, 1/100, 1/100], [0, 0, 0, 0, 1/100], [-1/Cout, 0, -1/(50*Cout), 0, 0], [-1/10, 0, 0, -11/10, -1/10], [-1/10, -1/10, 0, -1/10, -1/10]]', 'b': '[[0], [0], [0], [-1], [0]]', 'c': '[[0, 0, 0, -1, -1], [0, 0, 0, -1, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', '12', '0'], ['L0', 'OUT', '12'], ['C0', '0', 'IN'], ['L1', 'IN', '12'], ['C1', 'IN', '12']]}
['VIN - C - Sa - L - VOUT', 'VIN - L - L - VOUT', 'VIN - C - L - VOUT', 'VIN - C - GND', 'VIN - L - Sa - GND', 'VIN - C - Sa - GND', 'VOUT - L - L - C - GND', 'VOUT - L - Sa - GND', 'VOUT - L - C - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'N-C0-L0-L1-Sa0']), ('C1', ['0', 'IN']), ('L0', ['IN', 'N-C0-L0-L1-Sa0']), ('L1', ['N-C0-L0-L1-Sa0', 'OUT']), ('Sa0', ['0', 'N-C0-L0-L1-Sa0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 1/100, 1/100, 1/100], [0, 0, 0, 0, 1/100], [-1/Cout, 0, -1/(50*Cout), 0, 0], [-1/10, 0, 0, -1000001/1000000, -1/1000000], [-1/10, -1/10, 0, -1/1000000, -1/1000000]]', 'b': '[[0], [0], [0], [-1], [0]]', 'c': '[[0, 0, 0, -1, -1], [0, 0, 0, -1, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 1/100, 1/100, 1/100], [0, 0, 0, 0, 1/100], [-1/Cout, 0, -1/(50*Cout), 0, 0], [-1/10, 0, 0, -11/10, -1/10], [-1/10, -1/10, 0, -1/10, -1/10]]', 'b': '[[0], [0], [0], [-1], [0]]', 'c': '[[0, 0, 0, -1, -1], [0, 0, 0, -1, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', '12', '0'], ['L0', 'OUT', '12'], ['C0', '0', 'IN'], ['L1', 'IN', '12'], ['C1', 'IN', '12']]}
['VIN - C - Sa - L - VOUT', 'VIN - L - L - VOUT', 'VIN - C - L - VOUT', 'VIN - C - GND', 'VIN - L - Sa - GND', 'VIN - C - Sa - GND', 'VOUT - L - L - C - GND', 'VOUT - L - Sa - GND', 'VOUT - L - C - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'N-C0-L0-L1-Sa0']), ('C1', ['0', 'IN']), ('L0', ['IN', 'N-C0-L0-L1-Sa0']), ('L1', ['N-C0-L0-L1-Sa0', 'OUT']), ('Sa0', ['0', 'N-C0-L0-L1-Sa0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 1/100, 1/100, 1/100], [0, 0, 0, 0, 1/100], [-1/Cout, 0, -1/(50*Cout), 0, 0], [-1/10, 0, 0, -1000001/1000000, -1/1000000], [-1/10, -1/10, 0, -1/1000000, -1/1000000]]', 'b': '[[0], [0], [0], [-1], [0]]', 'c': '[[0, 0, 0, -1, -1], [0, 0, 0, -1, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 1/100, 1/100, 1/100], [0, 0, 0, 0, 1/100], [-1/Cout, 0, -1/(50*Cout), 0, 0], [-1/10, 0, 0, -11/10, -1/10], [-1/10, -1/10, 0, -1/10, -1/10]]', 'b': '[[0], [0], [0], [-1], [0]]', 'c': '[[0, 0, 0, -1, -1], [0, 0, 0, -1, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', '12', '0'], ['L0', 'OUT', '12'], ['C0', '0', 'IN'], ['L1', 'IN', '12'], ['C1', 'IN', '12']]}
['VIN - C - Sb - C - VOUT', 'VIN - Sb - Sb - VOUT', 'VIN - C - GND', 'VIN - Sb - Sb - C - Sb - GND', 'VOUT - Sb - Sb - C - GND', 'VOUT - C - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-Sb2', 'OUT']), ('C1', ['0', 'IN']), ('Sb0', ['N-Sb0-Sb1', 'OUT']), ('Sb1', ['IN', 'N-Sb0-Sb1']), ('Sb2', ['0', 'N-C0-Sb2'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-38/(25*Cout), 1/(2*Cout), -1/Cout], [1/20, -21/20, 0], [-1/10, 0, -1/10]]', 'b': '[[0], [1], [0]]', 'c': '[[1/2, 1/2, 0], [1, 0, 1], [0, 1, 0], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-4003/(200000*Cout), 1/(200000*Cout), -1/(100000*Cout)], [1/2000000, -2000001/2000000, 0], [-1/1000000, 0, -1/1000000]]', 'b': '[[0], [1], [0]]', 'c': '[[1/2, 1/2, 0], [1, 0, 1], [0, 1, 0], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'Rb1', 'Ra1', 'C1', 'Rb2', 'Ra2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '9', '12'], 'net_list': [['Sb0', '0', '9'], ['C0', 'IN', '0'], ['Sb1', 'IN', '12'], ['C1', '9', 'OUT'], ['Sb2', 'OUT', '12']]}
['VIN - C - Sb - C - VOUT', 'VIN - Sb - Sb - VOUT', 'VIN - C - GND', 'VIN - Sb - Sb - C - Sb - GND', 'VOUT - Sb - Sb - C - GND', 'VOUT - C - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-Sb2', 'OUT']), ('C1', ['0', 'IN']), ('Sb0', ['N-Sb0-Sb1', 'OUT']), ('Sb1', ['IN', 'N-Sb0-Sb1']), ('Sb2', ['0', 'N-C0-Sb2'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-38/(25*Cout), 1/(2*Cout), -1/Cout], [1/20, -21/20, 0], [-1/10, 0, -1/10]]', 'b': '[[0], [1], [0]]', 'c': '[[1/2, 1/2, 0], [1, 0, 1], [0, 1, 0], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-4003/(200000*Cout), 1/(200000*Cout), -1/(100000*Cout)], [1/2000000, -2000001/2000000, 0], [-1/1000000, 0, -1/1000000]]', 'b': '[[0], [1], [0]]', 'c': '[[1/2, 1/2, 0], [1, 0, 1], [0, 1, 0], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'Rb1', 'Ra1', 'C1', 'Rb2', 'Ra2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '9', '12'], 'net_list': [['Sb0', '0', '9'], ['C0', 'IN', '0'], ['Sb1', 'IN', '12'], ['C1', '9', 'OUT'], ['Sb2', 'OUT', '12']]}
['VIN - C - Sb - C - VOUT', 'VIN - Sb - Sb - VOUT', 'VIN - C - GND', 'VIN - Sb - Sb - C - Sb - GND', 'VOUT - Sb - Sb - C - GND', 'VOUT - C - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-Sb2', 'OUT']), ('C1', ['0', 'IN']), ('Sb0', ['N-Sb0-Sb1', 'OUT']), ('Sb1', ['IN', 'N-Sb0-Sb1']), ('Sb2', ['0', 'N-C0-Sb2'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-38/(25*Cout), 1/(2*Cout), -1/Cout], [1/20, -21/20, 0], [-1/10, 0, -1/10]]', 'b': '[[0], [1], [0]]', 'c': '[[1/2, 1/2, 0], [1, 0, 1], [0, 1, 0], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-4003/(200000*Cout), 1/(200000*Cout), -1/(100000*Cout)], [1/2000000, -2000001/2000000, 0], [-1/1000000, 0, -1/1000000]]', 'b': '[[0], [1], [0]]', 'c': '[[1/2, 1/2, 0], [1, 0, 1], [0, 1, 0], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'Rb1', 'Ra1', 'C1', 'Rb2', 'Ra2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '9', '12'], 'net_list': [['Sb0', '0', '9'], ['C0', 'IN', '0'], ['Sb1', 'IN', '12'], ['C1', '9', 'OUT'], ['Sb2', 'OUT', '12']]}
['VIN - C - Sb - C - VOUT', 'VIN - Sb - Sb - VOUT', 'VIN - C - GND', 'VIN - Sb - Sb - C - Sb - GND', 'VOUT - Sb - Sb - C - GND', 'VOUT - C - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-Sb2', 'OUT']), ('C1', ['0', 'IN']), ('Sb0', ['N-Sb0-Sb1', 'OUT']), ('Sb1', ['IN', 'N-Sb0-Sb1']), ('Sb2', ['0', 'N-C0-Sb2'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-38/(25*Cout), 1/(2*Cout), -1/Cout], [1/20, -21/20, 0], [-1/10, 0, -1/10]]', 'b': '[[0], [1], [0]]', 'c': '[[1/2, 1/2, 0], [1, 0, 1], [0, 1, 0], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-4003/(200000*Cout), 1/(200000*Cout), -1/(100000*Cout)], [1/2000000, -2000001/2000000, 0], [-1/1000000, 0, -1/1000000]]', 'b': '[[0], [1], [0]]', 'c': '[[1/2, 1/2, 0], [1, 0, 1], [0, 1, 0], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'Rb1', 'Ra1', 'C1', 'Rb2', 'Ra2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '9', '12'], 'net_list': [['Sb0', '0', '9'], ['C0', 'IN', '0'], ['Sb1', 'IN', '12'], ['C1', '9', 'OUT'], ['Sb2', 'OUT', '12']]}
['VIN - C - Sb - C - VOUT', 'VIN - Sb - Sb - VOUT', 'VIN - C - GND', 'VIN - Sb - Sb - C - Sb - GND', 'VOUT - Sb - Sb - C - GND', 'VOUT - C - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-Sb2', 'OUT']), ('C1', ['0', 'IN']), ('Sb0', ['N-Sb0-Sb1', 'OUT']), ('Sb1', ['IN', 'N-Sb0-Sb1']), ('Sb2', ['0', 'N-C0-Sb2'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-38/(25*Cout), 1/(2*Cout), -1/Cout], [1/20, -21/20, 0], [-1/10, 0, -1/10]]', 'b': '[[0], [1], [0]]', 'c': '[[1/2, 1/2, 0], [1, 0, 1], [0, 1, 0], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-4003/(200000*Cout), 1/(200000*Cout), -1/(100000*Cout)], [1/2000000, -2000001/2000000, 0], [-1/1000000, 0, -1/1000000]]', 'b': '[[0], [1], [0]]', 'c': '[[1/2, 1/2, 0], [1, 0, 1], [0, 1, 0], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'Rb1', 'Ra1', 'C1', 'Rb2', 'Ra2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '9', '12'], 'net_list': [['Sb0', '0', '9'], ['C0', 'IN', '0'], ['Sb1', 'IN', '12'], ['C1', '9', 'OUT'], ['Sb2', 'OUT', '12']]}
['VIN - Sb - Sa - L - Sb - VOUT', 'VIN - Sa - Sb - VOUT', 'VIN - Sb - Sa - GND', 'VIN - Sa - L - GND', 'VOUT - Sb - L - GND', 'VOUT - Sb - Sa - Sb - Sa - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-Sa0-Sb0']), ('Sa0', ['IN', 'N-L0-Sa0-Sb0']), ('Sa1', ['0', 'N-Sa1-Sb1']), ('Sb0', ['N-L0-Sa0-Sb0', 'OUT']), ('Sb1', ['IN', 'N-Sa1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001200001/10000220001200, -100001200001/10000220001200], [100001200001/(100002200012*Cout), -50026100281/(2500055000300*Cout)]]', 'b': '[[-1/10000120], [5/(500006*Cout)]]', 'c': '[[100001200001/100002200012, 100001200001/100002200012], [25000/25000550003, 25000/25000550003], [1/1000012, 1/1000012], [0, 0], [0, 1]]', 'd': '[[5/500006], [250000/250003], [500005/500006], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-275003000/25000550003, -275003/2500055000300], [275003/(25000550003*Cout), -50026100281/(2500055000300*Cout)]]', 'b': '[[-2500/250003], [5/(500006*Cout)]]', 'c': '[[27500300000/25000550003, 275003/25000550003], [25000/25000550003, 1/100002200012], [25000/250003, 1/1000012], [0, 0], [0, 1]]', 'd': '[[250000/250003], [5/500006], [500005/500006], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '5', '12'], 'net_list': [['Sa0', '0', '5'], ['Sb0', '5', 'IN'], ['L0', '0', '12'], ['Sa1', 'IN', '12'], ['Sb1', 'OUT', '12']]}
['VIN - Sb - Sa - L - Sb - VOUT', 'VIN - Sa - Sb - VOUT', 'VIN - Sb - Sa - GND', 'VIN - Sa - L - GND', 'VOUT - Sb - L - GND', 'VOUT - Sb - Sa - Sb - Sa - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-Sa0-Sb0']), ('Sa0', ['IN', 'N-L0-Sa0-Sb0']), ('Sa1', ['0', 'N-Sa1-Sb1']), ('Sb0', ['N-L0-Sa0-Sb0', 'OUT']), ('Sb1', ['IN', 'N-Sa1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001200001/10000220001200, -100001200001/10000220001200], [100001200001/(100002200012*Cout), -50026100281/(2500055000300*Cout)]]', 'b': '[[-1/10000120], [5/(500006*Cout)]]', 'c': '[[100001200001/100002200012, 100001200001/100002200012], [25000/25000550003, 25000/25000550003], [1/1000012, 1/1000012], [0, 0], [0, 1]]', 'd': '[[5/500006], [250000/250003], [500005/500006], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-275003000/25000550003, -275003/2500055000300], [275003/(25000550003*Cout), -50026100281/(2500055000300*Cout)]]', 'b': '[[-2500/250003], [5/(500006*Cout)]]', 'c': '[[27500300000/25000550003, 275003/25000550003], [25000/25000550003, 1/100002200012], [25000/250003, 1/1000012], [0, 0], [0, 1]]', 'd': '[[250000/250003], [5/500006], [500005/500006], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '5', '12'], 'net_list': [['Sa0', '0', '5'], ['Sb0', '5', 'IN'], ['L0', '0', '12'], ['Sa1', 'IN', '12'], ['Sb1', 'OUT', '12']]}
['VIN - Sb - Sa - L - Sb - VOUT', 'VIN - Sa - Sb - VOUT', 'VIN - Sb - Sa - GND', 'VIN - Sa - L - GND', 'VOUT - Sb - L - GND', 'VOUT - Sb - Sa - Sb - Sa - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-Sa0-Sb0']), ('Sa0', ['IN', 'N-L0-Sa0-Sb0']), ('Sa1', ['0', 'N-Sa1-Sb1']), ('Sb0', ['N-L0-Sa0-Sb0', 'OUT']), ('Sb1', ['IN', 'N-Sa1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001200001/10000220001200, -100001200001/10000220001200], [100001200001/(100002200012*Cout), -50026100281/(2500055000300*Cout)]]', 'b': '[[-1/10000120], [5/(500006*Cout)]]', 'c': '[[100001200001/100002200012, 100001200001/100002200012], [25000/25000550003, 25000/25000550003], [1/1000012, 1/1000012], [0, 0], [0, 1]]', 'd': '[[5/500006], [250000/250003], [500005/500006], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-275003000/25000550003, -275003/2500055000300], [275003/(25000550003*Cout), -50026100281/(2500055000300*Cout)]]', 'b': '[[-2500/250003], [5/(500006*Cout)]]', 'c': '[[27500300000/25000550003, 275003/25000550003], [25000/25000550003, 1/100002200012], [25000/250003, 1/1000012], [0, 0], [0, 1]]', 'd': '[[250000/250003], [5/500006], [500005/500006], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '5', '12'], 'net_list': [['Sa0', '0', '5'], ['Sb0', '5', 'IN'], ['L0', '0', '12'], ['Sa1', 'IN', '12'], ['Sb1', 'OUT', '12']]}
['VIN - Sb - Sa - L - Sb - VOUT', 'VIN - Sa - Sb - VOUT', 'VIN - Sb - Sa - GND', 'VIN - Sa - L - GND', 'VOUT - Sb - L - GND', 'VOUT - Sb - Sa - Sb - Sa - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-Sa0-Sb0']), ('Sa0', ['IN', 'N-L0-Sa0-Sb0']), ('Sa1', ['0', 'N-Sa1-Sb1']), ('Sb0', ['N-L0-Sa0-Sb0', 'OUT']), ('Sb1', ['IN', 'N-Sa1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001200001/10000220001200, -100001200001/10000220001200], [100001200001/(100002200012*Cout), -50026100281/(2500055000300*Cout)]]', 'b': '[[-1/10000120], [5/(500006*Cout)]]', 'c': '[[100001200001/100002200012, 100001200001/100002200012], [25000/25000550003, 25000/25000550003], [1/1000012, 1/1000012], [0, 0], [0, 1]]', 'd': '[[5/500006], [250000/250003], [500005/500006], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-275003000/25000550003, -275003/2500055000300], [275003/(25000550003*Cout), -50026100281/(2500055000300*Cout)]]', 'b': '[[-2500/250003], [5/(500006*Cout)]]', 'c': '[[27500300000/25000550003, 275003/25000550003], [25000/25000550003, 1/100002200012], [25000/250003, 1/1000012], [0, 0], [0, 1]]', 'd': '[[250000/250003], [5/500006], [500005/500006], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '5', '12'], 'net_list': [['Sa0', '0', '5'], ['Sb0', '5', 'IN'], ['L0', '0', '12'], ['Sa1', 'IN', '12'], ['Sb1', 'OUT', '12']]}
['VIN - Sb - Sa - L - Sb - VOUT', 'VIN - Sa - Sb - VOUT', 'VIN - Sb - Sa - GND', 'VIN - Sa - L - GND', 'VOUT - Sb - L - GND', 'VOUT - Sb - Sa - Sb - Sa - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-Sa0-Sb0']), ('Sa0', ['IN', 'N-L0-Sa0-Sb0']), ('Sa1', ['0', 'N-Sa1-Sb1']), ('Sb0', ['N-L0-Sa0-Sb0', 'OUT']), ('Sb1', ['IN', 'N-Sa1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001200001/10000220001200, -100001200001/10000220001200], [100001200001/(100002200012*Cout), -50026100281/(2500055000300*Cout)]]', 'b': '[[-1/10000120], [5/(500006*Cout)]]', 'c': '[[100001200001/100002200012, 100001200001/100002200012], [25000/25000550003, 25000/25000550003], [1/1000012, 1/1000012], [0, 0], [0, 1]]', 'd': '[[5/500006], [250000/250003], [500005/500006], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-275003000/25000550003, -275003/2500055000300], [275003/(25000550003*Cout), -50026100281/(2500055000300*Cout)]]', 'b': '[[-2500/250003], [5/(500006*Cout)]]', 'c': '[[27500300000/25000550003, 275003/25000550003], [25000/25000550003, 1/100002200012], [25000/250003, 1/1000012], [0, 0], [0, 1]]', 'd': '[[250000/250003], [5/500006], [500005/500006], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '5', '12'], 'net_list': [['Sa0', '0', '5'], ['Sb0', '5', 'IN'], ['L0', '0', '12'], ['Sa1', 'IN', '12'], ['Sb1', 'OUT', '12']]}
has to be unconnected
has to be unconnected
['VIN - L - Sa - Sa - VOUT', 'VIN - L - L - GND', 'VOUT - Sa - Sa - L - L - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['IN', 'N-L0-L2']), ('L1', ['IN', 'N-L1-Sa0']), ('L2', ['0', 'N-L0-L2']), ('Sa0', ['N-L1-Sa0', 'N-Sa0-Sa1']), ('Sa1', ['N-Sa0-Sa1', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-36504 violations

['VIN - L - Sa - Sa - VOUT', 'VIN - L - L - GND', 'VOUT - Sa - Sa - L - L - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['IN', 'N-L0-L2']), ('L1', ['IN', 'N-L1-Sa0']), ('L2', ['0', 'N-L0-L2']), ('Sa0', ['N-L1-Sa0', 'N-Sa0-Sa1']), ('Sa1', ['N-Sa0-Sa1', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - L - Sa - Sa - VOUT', 'VIN - L - L - GND', 'VOUT - Sa - Sa - L - L - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['IN', 'N-L0-L2']), ('L1', ['IN', 'N-L1-Sa0']), ('L2', ['0', 'N-L0-L2']), ('Sa0', ['N-L1-Sa0', 'N-Sa0-Sa1']), ('Sa1', ['N-Sa0-Sa1', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - L - Sa - Sa - VOUT', 'VIN - L - L - GND', 'VOUT - Sa - Sa - L - L - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['IN', 'N-L0-L2']), ('L1', ['IN', 'N-L1-Sa0']), ('L2', ['0', 'N-L0-L2']), ('Sa0', ['N-L1-Sa0', 'N-Sa0-Sa1']), ('Sa1', ['N-Sa0-Sa1', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - L - Sa - Sa - VOUT', 'VIN - L - L - GND', 'VOUT - Sa - Sa - L - L - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['IN', 'N-L0-L2']), ('L1', ['IN', 'N-L1-Sa0']), ('L2', ['0', 'N-L0-L2']), ('Sa0', ['N-L1-Sa0', 'N-Sa0-Sa1']), ('Sa1', ['N-Sa0-Sa1', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sa - Sa - L - VOUT', 'VIN - Sa - Sa - L - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - L - Sa - Sb - GND', 'VOUT - L - Sa - Sb - GND']

 PCC-36504
1
OrderedDict([('L0', ['N-L0-Sa0-Sa1', 'OUT']), ('Sa0', ['N-L0-Sa0-Sa1', 'N-Sa0-Sa1-Sa2-Sb0']), ('Sa1', ['N-L0-Sa0-Sa1', 'N-Sa0-Sa1-Sa2-Sb0']), ('Sa2', ['IN', 'N-Sa0-Sa1-Sa2-Sb0']), ('Sb0', ['0', 'N-Sa0-Sa1-Sa2-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-50001550001/100001100, 1/100], [-1/Cout, -1/(50*Cout)]]', 'b': '[[-1/10000110], [0]]', 'c': '[[1000001/1000011, 0], [50001550001/1000011, 0], [1/1000011, 0], [0, 0], [0, 1]]', 'd': '[[10/1000011], [10/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-3200011/200002200, 1/100], [-1/Cout, -1/(50*Cout)]]', 'b': '[[-10000/1000011], [0]]', 'c': '[[1100000/1000011, 0], [3200011/2000022, 0], [100000/1000011, 0], [0, 0], [0, 1]]', 'd': '[[1000000/1000011], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'Ra2', 'Rb2'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '0', '12'], 'net_list': [['Sa0', 'IN', '11'], ['Sb0', '0', '11'], ['L0', 'OUT', '12'], ['Sa1', '12', '11'], ['Sa2', '11', '12']]}
['VIN - Sa - Sa - L - VOUT', 'VIN - Sa - Sa - L - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - L - Sa - Sb - GND', 'VOUT - L - Sa - Sb - GND']

 PCC-36504
1
OrderedDict([('L0', ['N-L0-Sa0-Sa1', 'OUT']), ('Sa0', ['N-L0-Sa0-Sa1', 'N-Sa0-Sa1-Sa2-Sb0']), ('Sa1', ['N-L0-Sa0-Sa1', 'N-Sa0-Sa1-Sa2-Sb0']), ('Sa2', ['IN', 'N-Sa0-Sa1-Sa2-Sb0']), ('Sb0', ['0', 'N-Sa0-Sa1-Sa2-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-50001550001/100001100, 1/100], [-1/Cout, -1/(50*Cout)]]', 'b': '[[-1/10000110], [0]]', 'c': '[[1000001/1000011, 0], [50001550001/1000011, 0], [1/1000011, 0], [0, 0], [0, 1]]', 'd': '[[10/1000011], [10/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-3200011/200002200, 1/100], [-1/Cout, -1/(50*Cout)]]', 'b': '[[-10000/1000011], [0]]', 'c': '[[1100000/1000011, 0], [3200011/2000022, 0], [100000/1000011, 0], [0, 0], [0, 1]]', 'd': '[[1000000/1000011], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'Ra2', 'Rb2'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '0', '12'], 'net_list': [['Sa0', 'IN', '11'], ['Sb0', '0', '11'], ['L0', 'OUT', '12'], ['Sa1', '12', '11'], ['Sa2', '11', '12']]}
['VIN - Sa - Sa - L - VOUT', 'VIN - Sa - Sa - L - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - L - Sa - Sb - GND', 'VOUT - L - Sa - Sb - GND']

 PCC-36504
1
OrderedDict([('L0', ['N-L0-Sa0-Sa1', 'OUT']), ('Sa0', ['N-L0-Sa0-Sa1', 'N-Sa0-Sa1-Sa2-Sb0']), ('Sa1', ['N-L0-Sa0-Sa1', 'N-Sa0-Sa1-Sa2-Sb0']), ('Sa2', ['IN', 'N-Sa0-Sa1-Sa2-Sb0']), ('Sb0', ['0', 'N-Sa0-Sa1-Sa2-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-50001550001/100001100, 1/100], [-1/Cout, -1/(50*Cout)]]', 'b': '[[-1/10000110], [0]]', 'c': '[[1000001/1000011, 0], [50001550001/1000011, 0], [1/1000011, 0], [0, 0], [0, 1]]', 'd': '[[10/1000011], [10/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-3200011/200002200, 1/100], [-1/Cout, -1/(50*Cout)]]', 'b': '[[-10000/1000011], [0]]', 'c': '[[1100000/1000011, 0], [3200011/2000022, 0], [100000/1000011, 0], [0, 0], [0, 1]]', 'd': '[[1000000/1000011], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'Ra2', 'Rb2'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '0', '12'], 'net_list': [['Sa0', 'IN', '11'], ['Sb0', '0', '11'], ['L0', 'OUT', '12'], ['Sa1', '12', '11'], ['Sa2', '11', '12']]}
['VIN - Sa - Sa - L - VOUT', 'VIN - Sa - Sa - L - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - L - Sa - Sb - GND', 'VOUT - L - Sa - Sb - GND']

 PCC-36504
1
OrderedDict([('L0', ['N-L0-Sa0-Sa1', 'OUT']), ('Sa0', ['N-L0-Sa0-Sa1', 'N-Sa0-Sa1-Sa2-Sb0']), ('Sa1', ['N-L0-Sa0-Sa1', 'N-Sa0-Sa1-Sa2-Sb0']), ('Sa2', ['IN', 'N-Sa0-Sa1-Sa2-Sb0']), ('Sb0', ['0', 'N-Sa0-Sa1-Sa2-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-50001550001/100001100, 1/100], [-1/Cout, -1/(50*Cout)]]', 'b': '[[-1/10000110], [0]]', 'c': '[[1000001/1000011, 0], [50001550001/1000011, 0], [1/1000011, 0], [0, 0], [0, 1]]', 'd': '[[10/1000011], [10/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-3200011/200002200, 1/100], [-1/Cout, -1/(50*Cout)]]', 'b': '[[-10000/1000011], [0]]', 'c': '[[1100000/1000011, 0], [3200011/2000022, 0], [100000/1000011, 0], [0, 0], [0, 1]]', 'd': '[[1000000/1000011], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'Ra2', 'Rb2'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '0', '12'], 'net_list': [['Sa0', 'IN', '11'], ['Sb0', '0', '11'], ['L0', 'OUT', '12'], ['Sa1', '12', '11'], ['Sa2', '11', '12']]}
['VIN - Sa - Sa - L - VOUT', 'VIN - Sa - Sa - L - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - L - Sa - Sb - GND', 'VOUT - L - Sa - Sb - GND']

 PCC-36504
1
OrderedDict([('L0', ['N-L0-Sa0-Sa1', 'OUT']), ('Sa0', ['N-L0-Sa0-Sa1', 'N-Sa0-Sa1-Sa2-Sb0']), ('Sa1', ['N-L0-Sa0-Sa1', 'N-Sa0-Sa1-Sa2-Sb0']), ('Sa2', ['IN', 'N-Sa0-Sa1-Sa2-Sb0']), ('Sb0', ['0', 'N-Sa0-Sa1-Sa2-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-50001550001/100001100, 1/100], [-1/Cout, -1/(50*Cout)]]', 'b': '[[-1/10000110], [0]]', 'c': '[[1000001/1000011, 0], [50001550001/1000011, 0], [1/1000011, 0], [0, 0], [0, 1]]', 'd': '[[10/1000011], [10/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-3200011/200002200, 1/100], [-1/Cout, -1/(50*Cout)]]', 'b': '[[-10000/1000011], [0]]', 'c': '[[1100000/1000011, 0], [3200011/2000022, 0], [100000/1000011, 0], [0, 0], [0, 1]]', 'd': '[[1000000/1000011], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'Ra2', 'Rb2'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '0', '12'], 'net_list': [['Sa0', 'IN', '11'], ['Sb0', '0', '11'], ['L0', 'OUT', '12'], ['Sa1', '12', '11'], ['Sa2', '11', '12']]}
has to be unconnected
has to be unconnected
['VIN - Sb - VOUT', 'VIN - L - L - VOUT', 'VIN - Sb - L - L - GND', 'VIN - L - L - L - L - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-L3']), ('L1', ['N-L1-L2', 'OUT']), ('L2', ['IN', 'N-L1-L2']), ('L3', ['N-L0-L3', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-36504 violations

['VIN - Sb - VOUT', 'VIN - L - L - VOUT', 'VIN - Sb - L - L - GND', 'VIN - L - L - L - L - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-L3']), ('L1', ['N-L1-L2', 'OUT']), ('L2', ['IN', 'N-L1-L2']), ('L3', ['N-L0-L3', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - L - L - VOUT', 'VIN - Sb - L - L - GND', 'VIN - L - L - L - L - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-L3']), ('L1', ['N-L1-L2', 'OUT']), ('L2', ['IN', 'N-L1-L2']), ('L3', ['N-L0-L3', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - L - L - VOUT', 'VIN - Sb - L - L - GND', 'VIN - L - L - L - L - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-L3']), ('L1', ['N-L1-L2', 'OUT']), ('L2', ['IN', 'N-L1-L2']), ('L3', ['N-L0-L3', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - L - L - VOUT', 'VIN - Sb - L - L - GND', 'VIN - L - L - L - L - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-L3']), ('L1', ['N-L1-L2', 'OUT']), ('L2', ['IN', 'N-L1-L2']), ('L3', ['N-L0-L3', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - C - Sa - VOUT', 'VIN - Sa - L - GND', 'VOUT - Sa - C - Sb - Sa - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-Sa0', 'N-C0-Sb0']), ('L0', ['0', 'N-L0-Sa1']), ('Sa0', ['N-C0-Sa0', 'OUT']), ('Sa1', ['IN', 'N-L0-Sa1']), ('Sb0', ['IN', 'N-C0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001200001/100001100, -1/100001100, -1/100001100], [1/(1000011*Cout), -1000511/(50000550*Cout), -10/(1000011*Cout)], [1/10000110, -1/1000011, -1/1000011]]', 'b': '[[-100001/10000110], [10/(1000011*Cout)], [1/1000011]]', 'c': '[[100000/1000011, 11/1000011, -1000000/1000011], [100001200001/1000011, 1/1000011, 1/1000011], [100000/1000011, 11/1000011, 11/1000011], [100001/1000011, 1/1000011, 1/1000011], [0, 0, 0], [0, 1, 0]]', 'd': '[[1000000/1000011], [1000010/1000011], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-275003/25000275, -1/100001100, -1/100001100], [1/(1000011*Cout), -1000511/(50000550*Cout), -10/(1000011*Cout)], [1/10000110, -1/1000011, -1/1000011]]', 'b': '[[-100001/10000110], [10/(1000011*Cout)], [1/1000011]]', 'c': '[[1/1000011, 1000001/1000011, -10/1000011], [1100012/1000011, 1/1000011, 1/1000011], [1/1000011, 1000001/1000011, 1000001/1000011], [100001/1000011, 1/1000011, 1/1000011], [0, 0, 0], [0, 1, 0]]', 'd': '[[10/1000011], [1000010/1000011], [10/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '8', '9', '0', '12'], 'net_list': [['Sa0', 'IN', '8'], ['Sb0', 'IN', '9'], ['L0', '0', '8'], ['C0', '9', '12'], ['Sa1', 'OUT', '12']]}
['VIN - Sb - C - Sa - VOUT', 'VIN - Sa - L - GND', 'VOUT - Sa - C - Sb - Sa - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-Sa0', 'N-C0-Sb0']), ('L0', ['0', 'N-L0-Sa1']), ('Sa0', ['N-C0-Sa0', 'OUT']), ('Sa1', ['IN', 'N-L0-Sa1']), ('Sb0', ['IN', 'N-C0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001200001/100001100, -1/100001100, -1/100001100], [1/(1000011*Cout), -1000511/(50000550*Cout), -10/(1000011*Cout)], [1/10000110, -1/1000011, -1/1000011]]', 'b': '[[-100001/10000110], [10/(1000011*Cout)], [1/1000011]]', 'c': '[[100000/1000011, 11/1000011, -1000000/1000011], [100001200001/1000011, 1/1000011, 1/1000011], [100000/1000011, 11/1000011, 11/1000011], [100001/1000011, 1/1000011, 1/1000011], [0, 0, 0], [0, 1, 0]]', 'd': '[[1000000/1000011], [1000010/1000011], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-275003/25000275, -1/100001100, -1/100001100], [1/(1000011*Cout), -1000511/(50000550*Cout), -10/(1000011*Cout)], [1/10000110, -1/1000011, -1/1000011]]', 'b': '[[-100001/10000110], [10/(1000011*Cout)], [1/1000011]]', 'c': '[[1/1000011, 1000001/1000011, -10/1000011], [1100012/1000011, 1/1000011, 1/1000011], [1/1000011, 1000001/1000011, 1000001/1000011], [100001/1000011, 1/1000011, 1/1000011], [0, 0, 0], [0, 1, 0]]', 'd': '[[10/1000011], [1000010/1000011], [10/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '8', '9', '0', '12'], 'net_list': [['Sa0', 'IN', '8'], ['Sb0', 'IN', '9'], ['L0', '0', '8'], ['C0', '9', '12'], ['Sa1', 'OUT', '12']]}
['VIN - Sb - C - Sa - VOUT', 'VIN - Sa - L - GND', 'VOUT - Sa - C - Sb - Sa - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-Sa0', 'N-C0-Sb0']), ('L0', ['0', 'N-L0-Sa1']), ('Sa0', ['N-C0-Sa0', 'OUT']), ('Sa1', ['IN', 'N-L0-Sa1']), ('Sb0', ['IN', 'N-C0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001200001/100001100, -1/100001100, -1/100001100], [1/(1000011*Cout), -1000511/(50000550*Cout), -10/(1000011*Cout)], [1/10000110, -1/1000011, -1/1000011]]', 'b': '[[-100001/10000110], [10/(1000011*Cout)], [1/1000011]]', 'c': '[[100000/1000011, 11/1000011, -1000000/1000011], [100001200001/1000011, 1/1000011, 1/1000011], [100000/1000011, 11/1000011, 11/1000011], [100001/1000011, 1/1000011, 1/1000011], [0, 0, 0], [0, 1, 0]]', 'd': '[[1000000/1000011], [1000010/1000011], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-275003/25000275, -1/100001100, -1/100001100], [1/(1000011*Cout), -1000511/(50000550*Cout), -10/(1000011*Cout)], [1/10000110, -1/1000011, -1/1000011]]', 'b': '[[-100001/10000110], [10/(1000011*Cout)], [1/1000011]]', 'c': '[[1/1000011, 1000001/1000011, -10/1000011], [1100012/1000011, 1/1000011, 1/1000011], [1/1000011, 1000001/1000011, 1000001/1000011], [100001/1000011, 1/1000011, 1/1000011], [0, 0, 0], [0, 1, 0]]', 'd': '[[10/1000011], [1000010/1000011], [10/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '8', '9', '0', '12'], 'net_list': [['Sa0', 'IN', '8'], ['Sb0', 'IN', '9'], ['L0', '0', '8'], ['C0', '9', '12'], ['Sa1', 'OUT', '12']]}
['VIN - Sb - C - Sa - VOUT', 'VIN - Sa - L - GND', 'VOUT - Sa - C - Sb - Sa - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-Sa0', 'N-C0-Sb0']), ('L0', ['0', 'N-L0-Sa1']), ('Sa0', ['N-C0-Sa0', 'OUT']), ('Sa1', ['IN', 'N-L0-Sa1']), ('Sb0', ['IN', 'N-C0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001200001/100001100, -1/100001100, -1/100001100], [1/(1000011*Cout), -1000511/(50000550*Cout), -10/(1000011*Cout)], [1/10000110, -1/1000011, -1/1000011]]', 'b': '[[-100001/10000110], [10/(1000011*Cout)], [1/1000011]]', 'c': '[[100000/1000011, 11/1000011, -1000000/1000011], [100001200001/1000011, 1/1000011, 1/1000011], [100000/1000011, 11/1000011, 11/1000011], [100001/1000011, 1/1000011, 1/1000011], [0, 0, 0], [0, 1, 0]]', 'd': '[[1000000/1000011], [1000010/1000011], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-275003/25000275, -1/100001100, -1/100001100], [1/(1000011*Cout), -1000511/(50000550*Cout), -10/(1000011*Cout)], [1/10000110, -1/1000011, -1/1000011]]', 'b': '[[-100001/10000110], [10/(1000011*Cout)], [1/1000011]]', 'c': '[[1/1000011, 1000001/1000011, -10/1000011], [1100012/1000011, 1/1000011, 1/1000011], [1/1000011, 1000001/1000011, 1000001/1000011], [100001/1000011, 1/1000011, 1/1000011], [0, 0, 0], [0, 1, 0]]', 'd': '[[10/1000011], [1000010/1000011], [10/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '8', '9', '0', '12'], 'net_list': [['Sa0', 'IN', '8'], ['Sb0', 'IN', '9'], ['L0', '0', '8'], ['C0', '9', '12'], ['Sa1', 'OUT', '12']]}
['VIN - Sb - C - Sa - VOUT', 'VIN - Sa - L - GND', 'VOUT - Sa - C - Sb - Sa - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-Sa0', 'N-C0-Sb0']), ('L0', ['0', 'N-L0-Sa1']), ('Sa0', ['N-C0-Sa0', 'OUT']), ('Sa1', ['IN', 'N-L0-Sa1']), ('Sb0', ['IN', 'N-C0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001200001/100001100, -1/100001100, -1/100001100], [1/(1000011*Cout), -1000511/(50000550*Cout), -10/(1000011*Cout)], [1/10000110, -1/1000011, -1/1000011]]', 'b': '[[-100001/10000110], [10/(1000011*Cout)], [1/1000011]]', 'c': '[[100000/1000011, 11/1000011, -1000000/1000011], [100001200001/1000011, 1/1000011, 1/1000011], [100000/1000011, 11/1000011, 11/1000011], [100001/1000011, 1/1000011, 1/1000011], [0, 0, 0], [0, 1, 0]]', 'd': '[[1000000/1000011], [1000010/1000011], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-275003/25000275, -1/100001100, -1/100001100], [1/(1000011*Cout), -1000511/(50000550*Cout), -10/(1000011*Cout)], [1/10000110, -1/1000011, -1/1000011]]', 'b': '[[-100001/10000110], [10/(1000011*Cout)], [1/1000011]]', 'c': '[[1/1000011, 1000001/1000011, -10/1000011], [1100012/1000011, 1/1000011, 1/1000011], [1/1000011, 1000001/1000011, 1000001/1000011], [100001/1000011, 1/1000011, 1/1000011], [0, 0, 0], [0, 1, 0]]', 'd': '[[10/1000011], [1000010/1000011], [10/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '8', '9', '0', '12'], 'net_list': [['Sa0', 'IN', '8'], ['Sb0', 'IN', '9'], ['L0', '0', '8'], ['C0', '9', '12'], ['Sa1', 'OUT', '12']]}
has to be unconnected
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - L - C - GND', 'VIN - Sb - L - C - GND', 'VIN - Sa - L - C - GND', 'VIN - Sa - L - C - GND', 'VOUT - L - C - GND', 'VOUT - L - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-C1-L0']), ('C1', ['0', 'N-C0-C1-L0']), ('L0', ['N-C0-C1-L0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-36504 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - L - C - GND', 'VIN - Sb - L - C - GND', 'VIN - Sa - L - C - GND', 'VIN - Sa - L - C - GND', 'VOUT - L - C - GND', 'VOUT - L - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-C1-L0']), ('C1', ['0', 'N-C0-C1-L0']), ('L0', ['N-C0-C1-L0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - L - C - GND', 'VIN - Sb - L - C - GND', 'VIN - Sa - L - C - GND', 'VIN - Sa - L - C - GND', 'VOUT - L - C - GND', 'VOUT - L - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-C1-L0']), ('C1', ['0', 'N-C0-C1-L0']), ('L0', ['N-C0-C1-L0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - L - C - GND', 'VIN - Sb - L - C - GND', 'VIN - Sa - L - C - GND', 'VIN - Sa - L - C - GND', 'VOUT - L - C - GND', 'VOUT - L - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-C1-L0']), ('C1', ['0', 'N-C0-C1-L0']), ('L0', ['N-C0-C1-L0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - L - C - GND', 'VIN - Sb - L - C - GND', 'VIN - Sa - L - C - GND', 'VIN - Sa - L - C - GND', 'VOUT - L - C - GND', 'VOUT - L - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-C1-L0']), ('C1', ['0', 'N-C0-C1-L0']), ('L0', ['N-C0-C1-L0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - L - VOUT', 'VIN - Sa - L - L - L - VOUT', 'VIN - Sb - L - GND', 'VIN - Sa - L - GND', 'VOUT - L - Sb - Sa - L - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-Sa0']), ('L1', ['N-L1-L2-Sb0', 'OUT']), ('L2', ['0', 'N-L1-L2-Sb0']), ('Sa0', ['IN', 'N-L0-Sa0']), ('Sb0', ['IN', 'N-L1-L2-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)]]', 'y': '[[v_10(t)], [v_11(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-11/1000, -11/1000, 1/1000, 0], [-11/1000, -11/1000, 1/1000, 1/100], [1/1000, 1/1000, -1000001/1000, 0], [0, -1/Cout, 0, -1/(50*Cout)]]', 'b': '[[-1/100], [-1/100], [1/100], [0]]', 'c': '[[11/10, 11/10, -1/10, 0], [1/10, 1/10, -1000001/10, 0], [1/10, 1/10, -1/10, 0], [0, 0, 0, 0], [0, 0, 0, 1]]', 'd': '[[1], [1], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)]]', 'y': '[[v_10(t)], [v_11(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000001/1000, -1000001/1000, 1/1000, 0], [-1000001/1000, -1000001/1000, 1/1000, 1/100], [1/1000, 1/1000, -11/1000, 0], [0, -1/Cout, 0, -1/(50*Cout)]]', 'b': '[[-1/100], [-1/100], [1/100], [0]]', 'c': '[[1000001/10, 1000001/10, -1/10, 0], [1/10, 1/10, -11/10, 0], [1/10, 1/10, -1/10, 0], [0, 0, 0, 0], [0, 0, 0, 1]]', 'd': '[[1], [1], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1', 'L2'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '10', '0'], 'net_list': [['Sa0', 'IN', '11'], ['Sb0', 'IN', '10'], ['L0', '0', '10'], ['L1', 'OUT', '10'], ['L2', '11', '0']]}
['VIN - Sb - L - VOUT', 'VIN - Sa - L - L - L - VOUT', 'VIN - Sb - L - GND', 'VIN - Sa - L - GND', 'VOUT - L - Sb - Sa - L - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-Sa0']), ('L1', ['N-L1-L2-Sb0', 'OUT']), ('L2', ['0', 'N-L1-L2-Sb0']), ('Sa0', ['IN', 'N-L0-Sa0']), ('Sb0', ['IN', 'N-L1-L2-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)]]', 'y': '[[v_10(t)], [v_11(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-11/1000, -11/1000, 1/1000, 0], [-11/1000, -11/1000, 1/1000, 1/100], [1/1000, 1/1000, -1000001/1000, 0], [0, -1/Cout, 0, -1/(50*Cout)]]', 'b': '[[-1/100], [-1/100], [1/100], [0]]', 'c': '[[11/10, 11/10, -1/10, 0], [1/10, 1/10, -1000001/10, 0], [1/10, 1/10, -1/10, 0], [0, 0, 0, 0], [0, 0, 0, 1]]', 'd': '[[1], [1], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)]]', 'y': '[[v_10(t)], [v_11(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000001/1000, -1000001/1000, 1/1000, 0], [-1000001/1000, -1000001/1000, 1/1000, 1/100], [1/1000, 1/1000, -11/1000, 0], [0, -1/Cout, 0, -1/(50*Cout)]]', 'b': '[[-1/100], [-1/100], [1/100], [0]]', 'c': '[[1000001/10, 1000001/10, -1/10, 0], [1/10, 1/10, -11/10, 0], [1/10, 1/10, -1/10, 0], [0, 0, 0, 0], [0, 0, 0, 1]]', 'd': '[[1], [1], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1', 'L2'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '10', '0'], 'net_list': [['Sa0', 'IN', '11'], ['Sb0', 'IN', '10'], ['L0', '0', '10'], ['L1', 'OUT', '10'], ['L2', '11', '0']]}
['VIN - Sb - L - VOUT', 'VIN - Sa - L - L - L - VOUT', 'VIN - Sb - L - GND', 'VIN - Sa - L - GND', 'VOUT - L - Sb - Sa - L - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-Sa0']), ('L1', ['N-L1-L2-Sb0', 'OUT']), ('L2', ['0', 'N-L1-L2-Sb0']), ('Sa0', ['IN', 'N-L0-Sa0']), ('Sb0', ['IN', 'N-L1-L2-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)]]', 'y': '[[v_10(t)], [v_11(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-11/1000, -11/1000, 1/1000, 0], [-11/1000, -11/1000, 1/1000, 1/100], [1/1000, 1/1000, -1000001/1000, 0], [0, -1/Cout, 0, -1/(50*Cout)]]', 'b': '[[-1/100], [-1/100], [1/100], [0]]', 'c': '[[11/10, 11/10, -1/10, 0], [1/10, 1/10, -1000001/10, 0], [1/10, 1/10, -1/10, 0], [0, 0, 0, 0], [0, 0, 0, 1]]', 'd': '[[1], [1], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)]]', 'y': '[[v_10(t)], [v_11(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000001/1000, -1000001/1000, 1/1000, 0], [-1000001/1000, -1000001/1000, 1/1000, 1/100], [1/1000, 1/1000, -11/1000, 0], [0, -1/Cout, 0, -1/(50*Cout)]]', 'b': '[[-1/100], [-1/100], [1/100], [0]]', 'c': '[[1000001/10, 1000001/10, -1/10, 0], [1/10, 1/10, -11/10, 0], [1/10, 1/10, -1/10, 0], [0, 0, 0, 0], [0, 0, 0, 1]]', 'd': '[[1], [1], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1', 'L2'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '10', '0'], 'net_list': [['Sa0', 'IN', '11'], ['Sb0', 'IN', '10'], ['L0', '0', '10'], ['L1', 'OUT', '10'], ['L2', '11', '0']]}
['VIN - Sb - L - VOUT', 'VIN - Sa - L - L - L - VOUT', 'VIN - Sb - L - GND', 'VIN - Sa - L - GND', 'VOUT - L - Sb - Sa - L - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-Sa0']), ('L1', ['N-L1-L2-Sb0', 'OUT']), ('L2', ['0', 'N-L1-L2-Sb0']), ('Sa0', ['IN', 'N-L0-Sa0']), ('Sb0', ['IN', 'N-L1-L2-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)]]', 'y': '[[v_10(t)], [v_11(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-11/1000, -11/1000, 1/1000, 0], [-11/1000, -11/1000, 1/1000, 1/100], [1/1000, 1/1000, -1000001/1000, 0], [0, -1/Cout, 0, -1/(50*Cout)]]', 'b': '[[-1/100], [-1/100], [1/100], [0]]', 'c': '[[11/10, 11/10, -1/10, 0], [1/10, 1/10, -1000001/10, 0], [1/10, 1/10, -1/10, 0], [0, 0, 0, 0], [0, 0, 0, 1]]', 'd': '[[1], [1], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)]]', 'y': '[[v_10(t)], [v_11(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000001/1000, -1000001/1000, 1/1000, 0], [-1000001/1000, -1000001/1000, 1/1000, 1/100], [1/1000, 1/1000, -11/1000, 0], [0, -1/Cout, 0, -1/(50*Cout)]]', 'b': '[[-1/100], [-1/100], [1/100], [0]]', 'c': '[[1000001/10, 1000001/10, -1/10, 0], [1/10, 1/10, -11/10, 0], [1/10, 1/10, -1/10, 0], [0, 0, 0, 0], [0, 0, 0, 1]]', 'd': '[[1], [1], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1', 'L2'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '10', '0'], 'net_list': [['Sa0', 'IN', '11'], ['Sb0', 'IN', '10'], ['L0', '0', '10'], ['L1', 'OUT', '10'], ['L2', '11', '0']]}
['VIN - Sb - L - VOUT', 'VIN - Sa - L - L - L - VOUT', 'VIN - Sb - L - GND', 'VIN - Sa - L - GND', 'VOUT - L - Sb - Sa - L - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-Sa0']), ('L1', ['N-L1-L2-Sb0', 'OUT']), ('L2', ['0', 'N-L1-L2-Sb0']), ('Sa0', ['IN', 'N-L0-Sa0']), ('Sb0', ['IN', 'N-L1-L2-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)]]', 'y': '[[v_10(t)], [v_11(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-11/1000, -11/1000, 1/1000, 0], [-11/1000, -11/1000, 1/1000, 1/100], [1/1000, 1/1000, -1000001/1000, 0], [0, -1/Cout, 0, -1/(50*Cout)]]', 'b': '[[-1/100], [-1/100], [1/100], [0]]', 'c': '[[11/10, 11/10, -1/10, 0], [1/10, 1/10, -1000001/10, 0], [1/10, 1/10, -1/10, 0], [0, 0, 0, 0], [0, 0, 0, 1]]', 'd': '[[1], [1], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)]]', 'y': '[[v_10(t)], [v_11(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000001/1000, -1000001/1000, 1/1000, 0], [-1000001/1000, -1000001/1000, 1/1000, 1/100], [1/1000, 1/1000, -11/1000, 0], [0, -1/Cout, 0, -1/(50*Cout)]]', 'b': '[[-1/100], [-1/100], [1/100], [0]]', 'c': '[[1000001/10, 1000001/10, -1/10, 0], [1/10, 1/10, -11/10, 0], [1/10, 1/10, -1/10, 0], [0, 0, 0, 0], [0, 0, 0, 1]]', 'd': '[[1], [1], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1', 'L2'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '10', '0'], 'net_list': [['Sa0', 'IN', '11'], ['Sb0', 'IN', '10'], ['L0', '0', '10'], ['L1', 'OUT', '10'], ['L2', '11', '0']]}
has to be unconnected
['VIN - Sa - VOUT', 'VIN - L - C - C - VOUT', 'VIN - Sa - C - C - Sa - GND', 'VIN - L - Sa - GND', 'VOUT - C - C - Sa - GND', 'VOUT - Sa - L - Sa - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-C1', 'N-C0-L0-Sa0']), ('C1', ['N-C0-C1', 'OUT']), ('L0', ['IN', 'N-C0-L0-Sa0']), ('Sa0', ['0', 'N-C0-L0-Sa0']), ('Sa1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1000001, -10000/1000001, 1/100, -1/100], [1000000/(1000001*Cout), -2002002001/(100000100000*Cout), 1/(100000*Cout), -1/(100000*Cout)], [-1/10, 1/1000000, -1/1000000, 1/1000000], [1/10, -1/1000000, 1/1000000, -1/1000000]]', 'b': '[[10000/1000001], [10/(1000001*Cout)], [0], [0]]', 'c': '[[0, 1, -1, 1], [0, 1, -1, 0], [-100000/1000001, 1/1000001, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1000000/1000001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/1100, -1/110, 1/100, -1/100], [10/(11*Cout), -1061/(550*Cout), 1/Cout, -1/Cout], [-1/10, 1/10, -1/10, 1/10], [1/10, -1/10, 1/10, -1/10]]', 'b': '[[1/110], [10/(11*Cout)], [0], [0]]', 'c': '[[0, 1, -1, 1], [0, 1, -1, 0], [-1/11, 1/11, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [10/11], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '12', '0'], 'net_list': [['Sa0', 'IN', 'OUT'], ['L0', 'IN', '11'], ['C0', 'OUT', '12'], ['Sa1', '0', '11'], ['C1', '11', '12']]}
['VIN - Sa - VOUT', 'VIN - L - C - C - VOUT', 'VIN - Sa - C - C - Sa - GND', 'VIN - L - Sa - GND', 'VOUT - C - C - Sa - GND', 'VOUT - Sa - L - Sa - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-C1', 'N-C0-L0-Sa0']), ('C1', ['N-C0-C1', 'OUT']), ('L0', ['IN', 'N-C0-L0-Sa0']), ('Sa0', ['0', 'N-C0-L0-Sa0']), ('Sa1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1000001, -10000/1000001, 1/100, -1/100], [1000000/(1000001*Cout), -2002002001/(100000100000*Cout), 1/(100000*Cout), -1/(100000*Cout)], [-1/10, 1/1000000, -1/1000000, 1/1000000], [1/10, -1/1000000, 1/1000000, -1/1000000]]', 'b': '[[10000/1000001], [10/(1000001*Cout)], [0], [0]]', 'c': '[[0, 1, -1, 1], [0, 1, -1, 0], [-100000/1000001, 1/1000001, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1000000/1000001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/1100, -1/110, 1/100, -1/100], [10/(11*Cout), -1061/(550*Cout), 1/Cout, -1/Cout], [-1/10, 1/10, -1/10, 1/10], [1/10, -1/10, 1/10, -1/10]]', 'b': '[[1/110], [10/(11*Cout)], [0], [0]]', 'c': '[[0, 1, -1, 1], [0, 1, -1, 0], [-1/11, 1/11, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [10/11], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '12', '0'], 'net_list': [['Sa0', 'IN', 'OUT'], ['L0', 'IN', '11'], ['C0', 'OUT', '12'], ['Sa1', '0', '11'], ['C1', '11', '12']]}
['VIN - Sa - VOUT', 'VIN - L - C - C - VOUT', 'VIN - Sa - C - C - Sa - GND', 'VIN - L - Sa - GND', 'VOUT - C - C - Sa - GND', 'VOUT - Sa - L - Sa - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-C1', 'N-C0-L0-Sa0']), ('C1', ['N-C0-C1', 'OUT']), ('L0', ['IN', 'N-C0-L0-Sa0']), ('Sa0', ['0', 'N-C0-L0-Sa0']), ('Sa1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1000001, -10000/1000001, 1/100, -1/100], [1000000/(1000001*Cout), -2002002001/(100000100000*Cout), 1/(100000*Cout), -1/(100000*Cout)], [-1/10, 1/1000000, -1/1000000, 1/1000000], [1/10, -1/1000000, 1/1000000, -1/1000000]]', 'b': '[[10000/1000001], [10/(1000001*Cout)], [0], [0]]', 'c': '[[0, 1, -1, 1], [0, 1, -1, 0], [-100000/1000001, 1/1000001, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1000000/1000001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/1100, -1/110, 1/100, -1/100], [10/(11*Cout), -1061/(550*Cout), 1/Cout, -1/Cout], [-1/10, 1/10, -1/10, 1/10], [1/10, -1/10, 1/10, -1/10]]', 'b': '[[1/110], [10/(11*Cout)], [0], [0]]', 'c': '[[0, 1, -1, 1], [0, 1, -1, 0], [-1/11, 1/11, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [10/11], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '12', '0'], 'net_list': [['Sa0', 'IN', 'OUT'], ['L0', 'IN', '11'], ['C0', 'OUT', '12'], ['Sa1', '0', '11'], ['C1', '11', '12']]}
['VIN - Sa - VOUT', 'VIN - L - C - C - VOUT', 'VIN - Sa - C - C - Sa - GND', 'VIN - L - Sa - GND', 'VOUT - C - C - Sa - GND', 'VOUT - Sa - L - Sa - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-C1', 'N-C0-L0-Sa0']), ('C1', ['N-C0-C1', 'OUT']), ('L0', ['IN', 'N-C0-L0-Sa0']), ('Sa0', ['0', 'N-C0-L0-Sa0']), ('Sa1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1000001, -10000/1000001, 1/100, -1/100], [1000000/(1000001*Cout), -2002002001/(100000100000*Cout), 1/(100000*Cout), -1/(100000*Cout)], [-1/10, 1/1000000, -1/1000000, 1/1000000], [1/10, -1/1000000, 1/1000000, -1/1000000]]', 'b': '[[10000/1000001], [10/(1000001*Cout)], [0], [0]]', 'c': '[[0, 1, -1, 1], [0, 1, -1, 0], [-100000/1000001, 1/1000001, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1000000/1000001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/1100, -1/110, 1/100, -1/100], [10/(11*Cout), -1061/(550*Cout), 1/Cout, -1/Cout], [-1/10, 1/10, -1/10, 1/10], [1/10, -1/10, 1/10, -1/10]]', 'b': '[[1/110], [10/(11*Cout)], [0], [0]]', 'c': '[[0, 1, -1, 1], [0, 1, -1, 0], [-1/11, 1/11, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [10/11], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '12', '0'], 'net_list': [['Sa0', 'IN', 'OUT'], ['L0', 'IN', '11'], ['C0', 'OUT', '12'], ['Sa1', '0', '11'], ['C1', '11', '12']]}
['VIN - Sa - VOUT', 'VIN - L - C - C - VOUT', 'VIN - Sa - C - C - Sa - GND', 'VIN - L - Sa - GND', 'VOUT - C - C - Sa - GND', 'VOUT - Sa - L - Sa - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-C1', 'N-C0-L0-Sa0']), ('C1', ['N-C0-C1', 'OUT']), ('L0', ['IN', 'N-C0-L0-Sa0']), ('Sa0', ['0', 'N-C0-L0-Sa0']), ('Sa1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1000001, -10000/1000001, 1/100, -1/100], [1000000/(1000001*Cout), -2002002001/(100000100000*Cout), 1/(100000*Cout), -1/(100000*Cout)], [-1/10, 1/1000000, -1/1000000, 1/1000000], [1/10, -1/1000000, 1/1000000, -1/1000000]]', 'b': '[[10000/1000001], [10/(1000001*Cout)], [0], [0]]', 'c': '[[0, 1, -1, 1], [0, 1, -1, 0], [-100000/1000001, 1/1000001, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1000000/1000001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/1100, -1/110, 1/100, -1/100], [10/(11*Cout), -1061/(550*Cout), 1/Cout, -1/Cout], [-1/10, 1/10, -1/10, 1/10], [1/10, -1/10, 1/10, -1/10]]', 'b': '[[1/110], [10/(11*Cout)], [0], [0]]', 'c': '[[0, 1, -1, 1], [0, 1, -1, 0], [-1/11, 1/11, 0, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [10/11], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '12', '0'], 'net_list': [['Sa0', 'IN', 'OUT'], ['L0', 'IN', '11'], ['C0', 'OUT', '12'], ['Sa1', '0', '11'], ['C1', '11', '12']]}
has to be unconnected
['VIN - L - C - VOUT', 'VIN - L - L - VOUT', 'VIN - L - C - VOUT', 'VIN - L - Sb - GND', 'VOUT - C - Sb - GND', 'VOUT - L - Sb - GND', 'VOUT - C - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-C1-L0-L1-Sb0', 'OUT']), ('C1', ['N-C0-C1-L0-L1-Sb0', 'OUT']), ('L0', ['N-C0-C1-L0-L1-Sb0', 'OUT']), ('L1', ['IN', 'N-C0-C1-L0-L1-Sb0']), ('Sb0', ['0', 'N-C0-C1-L0-L1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-36504 violations

['VIN - L - C - VOUT', 'VIN - L - L - VOUT', 'VIN - L - C - VOUT', 'VIN - L - Sb - GND', 'VOUT - C - Sb - GND', 'VOUT - L - Sb - GND', 'VOUT - C - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-C1-L0-L1-Sb0', 'OUT']), ('C1', ['N-C0-C1-L0-L1-Sb0', 'OUT']), ('L0', ['N-C0-C1-L0-L1-Sb0', 'OUT']), ('L1', ['IN', 'N-C0-C1-L0-L1-Sb0']), ('Sb0', ['0', 'N-C0-C1-L0-L1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - L - C - VOUT', 'VIN - L - L - VOUT', 'VIN - L - C - VOUT', 'VIN - L - Sb - GND', 'VOUT - C - Sb - GND', 'VOUT - L - Sb - GND', 'VOUT - C - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-C1-L0-L1-Sb0', 'OUT']), ('C1', ['N-C0-C1-L0-L1-Sb0', 'OUT']), ('L0', ['N-C0-C1-L0-L1-Sb0', 'OUT']), ('L1', ['IN', 'N-C0-C1-L0-L1-Sb0']), ('Sb0', ['0', 'N-C0-C1-L0-L1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - L - C - VOUT', 'VIN - L - L - VOUT', 'VIN - L - C - VOUT', 'VIN - L - Sb - GND', 'VOUT - C - Sb - GND', 'VOUT - L - Sb - GND', 'VOUT - C - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-C1-L0-L1-Sb0', 'OUT']), ('C1', ['N-C0-C1-L0-L1-Sb0', 'OUT']), ('L0', ['N-C0-C1-L0-L1-Sb0', 'OUT']), ('L1', ['IN', 'N-C0-C1-L0-L1-Sb0']), ('Sb0', ['0', 'N-C0-C1-L0-L1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - L - C - VOUT', 'VIN - L - L - VOUT', 'VIN - L - C - VOUT', 'VIN - L - Sb - GND', 'VOUT - C - Sb - GND', 'VOUT - L - Sb - GND', 'VOUT - C - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-C1-L0-L1-Sb0', 'OUT']), ('C1', ['N-C0-C1-L0-L1-Sb0', 'OUT']), ('L0', ['N-C0-C1-L0-L1-Sb0', 'OUT']), ('L1', ['IN', 'N-C0-C1-L0-L1-Sb0']), ('Sb0', ['0', 'N-C0-C1-L0-L1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
has to be unconnected
['VIN - L - L - VOUT', 'VIN - L - C - Sb - GND', 'VIN - L - Sa - GND', 'VOUT - L - C - Sb - GND', 'VOUT - L - Sa - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-L0-L1-Sa0', 'N-C0-Sb0']), ('L0', ['N-C0-L0-L1-Sa0', 'OUT']), ('L1', ['IN', 'N-C0-L0-L1-Sa0']), ('Sa0', ['0', 'N-C0-L0-L1-Sa0']), ('Sb0', ['0', 'N-C0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/100001000, -1000/100001, 0, 1000/100001], [-1000/100001, -1000/100001, 1/100, 1000/100001], [0, -1/Cout, -1/(50*Cout), 0], [-10000/100001, -10000/100001, 0, -1/1000010]]', 'b': '[[1/100], [0], [0], [0]]', 'c': '[[100000/100001, 100000/100001, 0, -100000/100001], [100000/100001, 100000/100001, 0, 1/100001], [-1/10, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/100001000, -1000/100001, 0, 1/10000100], [-1000/100001, -1000/100001, 1/100, 1/10000100], [0, -1/Cout, -1/(50*Cout), 0], [-1/1000010, -1/1000010, 0, -1/1000010]]', 'b': '[[1/100], [0], [0], [0]]', 'c': '[[100000/100001, 100000/100001, 0, -1/100001], [100000/100001, 100000/100001, 0, 100000/100001], [-1/10, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12', '9'], 'net_list': [['Sa0', '0', '12'], ['Sb0', '0', '9'], ['L0', 'IN', '12'], ['C0', '9', '12'], ['L1', 'OUT', '12']]}
['VIN - L - L - VOUT', 'VIN - L - C - Sb - GND', 'VIN - L - Sa - GND', 'VOUT - L - C - Sb - GND', 'VOUT - L - Sa - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-L0-L1-Sa0', 'N-C0-Sb0']), ('L0', ['N-C0-L0-L1-Sa0', 'OUT']), ('L1', ['IN', 'N-C0-L0-L1-Sa0']), ('Sa0', ['0', 'N-C0-L0-L1-Sa0']), ('Sb0', ['0', 'N-C0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/100001000, -1000/100001, 0, 1000/100001], [-1000/100001, -1000/100001, 1/100, 1000/100001], [0, -1/Cout, -1/(50*Cout), 0], [-10000/100001, -10000/100001, 0, -1/1000010]]', 'b': '[[1/100], [0], [0], [0]]', 'c': '[[100000/100001, 100000/100001, 0, -100000/100001], [100000/100001, 100000/100001, 0, 1/100001], [-1/10, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/100001000, -1000/100001, 0, 1/10000100], [-1000/100001, -1000/100001, 1/100, 1/10000100], [0, -1/Cout, -1/(50*Cout), 0], [-1/1000010, -1/1000010, 0, -1/1000010]]', 'b': '[[1/100], [0], [0], [0]]', 'c': '[[100000/100001, 100000/100001, 0, -1/100001], [100000/100001, 100000/100001, 0, 100000/100001], [-1/10, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12', '9'], 'net_list': [['Sa0', '0', '12'], ['Sb0', '0', '9'], ['L0', 'IN', '12'], ['C0', '9', '12'], ['L1', 'OUT', '12']]}
['VIN - L - L - VOUT', 'VIN - L - C - Sb - GND', 'VIN - L - Sa - GND', 'VOUT - L - C - Sb - GND', 'VOUT - L - Sa - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-L0-L1-Sa0', 'N-C0-Sb0']), ('L0', ['N-C0-L0-L1-Sa0', 'OUT']), ('L1', ['IN', 'N-C0-L0-L1-Sa0']), ('Sa0', ['0', 'N-C0-L0-L1-Sa0']), ('Sb0', ['0', 'N-C0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/100001000, -1000/100001, 0, 1000/100001], [-1000/100001, -1000/100001, 1/100, 1000/100001], [0, -1/Cout, -1/(50*Cout), 0], [-10000/100001, -10000/100001, 0, -1/1000010]]', 'b': '[[1/100], [0], [0], [0]]', 'c': '[[100000/100001, 100000/100001, 0, -100000/100001], [100000/100001, 100000/100001, 0, 1/100001], [-1/10, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/100001000, -1000/100001, 0, 1/10000100], [-1000/100001, -1000/100001, 1/100, 1/10000100], [0, -1/Cout, -1/(50*Cout), 0], [-1/1000010, -1/1000010, 0, -1/1000010]]', 'b': '[[1/100], [0], [0], [0]]', 'c': '[[100000/100001, 100000/100001, 0, -1/100001], [100000/100001, 100000/100001, 0, 100000/100001], [-1/10, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12', '9'], 'net_list': [['Sa0', '0', '12'], ['Sb0', '0', '9'], ['L0', 'IN', '12'], ['C0', '9', '12'], ['L1', 'OUT', '12']]}
['VIN - L - L - VOUT', 'VIN - L - C - Sb - GND', 'VIN - L - Sa - GND', 'VOUT - L - C - Sb - GND', 'VOUT - L - Sa - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-L0-L1-Sa0', 'N-C0-Sb0']), ('L0', ['N-C0-L0-L1-Sa0', 'OUT']), ('L1', ['IN', 'N-C0-L0-L1-Sa0']), ('Sa0', ['0', 'N-C0-L0-L1-Sa0']), ('Sb0', ['0', 'N-C0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/100001000, -1000/100001, 0, 1000/100001], [-1000/100001, -1000/100001, 1/100, 1000/100001], [0, -1/Cout, -1/(50*Cout), 0], [-10000/100001, -10000/100001, 0, -1/1000010]]', 'b': '[[1/100], [0], [0], [0]]', 'c': '[[100000/100001, 100000/100001, 0, -100000/100001], [100000/100001, 100000/100001, 0, 1/100001], [-1/10, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/100001000, -1000/100001, 0, 1/10000100], [-1000/100001, -1000/100001, 1/100, 1/10000100], [0, -1/Cout, -1/(50*Cout), 0], [-1/1000010, -1/1000010, 0, -1/1000010]]', 'b': '[[1/100], [0], [0], [0]]', 'c': '[[100000/100001, 100000/100001, 0, -1/100001], [100000/100001, 100000/100001, 0, 100000/100001], [-1/10, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12', '9'], 'net_list': [['Sa0', '0', '12'], ['Sb0', '0', '9'], ['L0', 'IN', '12'], ['C0', '9', '12'], ['L1', 'OUT', '12']]}
['VIN - L - L - VOUT', 'VIN - L - C - Sb - GND', 'VIN - L - Sa - GND', 'VOUT - L - C - Sb - GND', 'VOUT - L - Sa - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-L0-L1-Sa0', 'N-C0-Sb0']), ('L0', ['N-C0-L0-L1-Sa0', 'OUT']), ('L1', ['IN', 'N-C0-L0-L1-Sa0']), ('Sa0', ['0', 'N-C0-L0-L1-Sa0']), ('Sb0', ['0', 'N-C0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/100001000, -1000/100001, 0, 1000/100001], [-1000/100001, -1000/100001, 1/100, 1000/100001], [0, -1/Cout, -1/(50*Cout), 0], [-10000/100001, -10000/100001, 0, -1/1000010]]', 'b': '[[1/100], [0], [0], [0]]', 'c': '[[100000/100001, 100000/100001, 0, -100000/100001], [100000/100001, 100000/100001, 0, 1/100001], [-1/10, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/100001000, -1000/100001, 0, 1/10000100], [-1000/100001, -1000/100001, 1/100, 1/10000100], [0, -1/Cout, -1/(50*Cout), 0], [-1/1000010, -1/1000010, 0, -1/1000010]]', 'b': '[[1/100], [0], [0], [0]]', 'c': '[[100000/100001, 100000/100001, 0, -1/100001], [100000/100001, 100000/100001, 0, 100000/100001], [-1/10, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12', '9'], 'net_list': [['Sa0', '0', '12'], ['Sb0', '0', '9'], ['L0', 'IN', '12'], ['C0', '9', '12'], ['L1', 'OUT', '12']]}
['VIN - Sb - Sb - VOUT', 'VIN - Sb - Sb - C - Sb - GND', 'VOUT - Sb - Sb - C - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-Sb0', 'N-C0-Sb3']), ('Sb0', ['0', 'N-C0-Sb0']), ('Sb1', ['IN', 'N-Sb1-Sb2-Sb3']), ('Sb2', ['N-Sb1-Sb2-Sb3', 'OUT']), ('Sb3', ['N-C0-Sb3', 'N-Sb1-Sb2-Sb3'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1603/(2650*Cout), 11/(53*Cout)], [11/530, -21/530]]', 'b': '[[20/(53*Cout)], [1/53]]', 'c': '[[22/53, 11/53], [11/53, -21/53], [11/53, 32/53], [2/53, 1/53], [0, 0], [1, 0]]', 'd': '[[20/53], [10/53], [10/53], [50/53], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-10003006001/(500000300000*Cout), 1000001/(500000300000*Cout)], [1000001/5000003000000, -2000001/5000003000000]]', 'b': '[[20/(5000003*Cout)], [1/5000003]]', 'c': '[[2000002/5000003, 1000001/5000003], [1000001/5000003, -2000001/5000003], [1000001/5000003, 3000002/5000003], [2/5000003, 1/5000003], [0, 0], [1, 0]]', 'd': '[[2000000/5000003], [1000000/5000003], [1000000/5000003], [5000000/5000003], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'Rb1', 'Ra1', 'Rb2', 'Ra2', 'Rb3', 'Ra3'], 'node_list': ['IN', 'OUT', 'IN_exact', '10', '5', '12', '0'], 'net_list': [['Sb0', '10', '5'], ['C0', '5', '12'], ['Sb1', 'OUT', '10'], ['Sb2', 'IN', '10'], ['Sb3', '0', '12']]}
['VIN - Sb - Sb - VOUT', 'VIN - Sb - Sb - C - Sb - GND', 'VOUT - Sb - Sb - C - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-Sb0', 'N-C0-Sb3']), ('Sb0', ['0', 'N-C0-Sb0']), ('Sb1', ['IN', 'N-Sb1-Sb2-Sb3']), ('Sb2', ['N-Sb1-Sb2-Sb3', 'OUT']), ('Sb3', ['N-C0-Sb3', 'N-Sb1-Sb2-Sb3'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1603/(2650*Cout), 11/(53*Cout)], [11/530, -21/530]]', 'b': '[[20/(53*Cout)], [1/53]]', 'c': '[[22/53, 11/53], [11/53, -21/53], [11/53, 32/53], [2/53, 1/53], [0, 0], [1, 0]]', 'd': '[[20/53], [10/53], [10/53], [50/53], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-10003006001/(500000300000*Cout), 1000001/(500000300000*Cout)], [1000001/5000003000000, -2000001/5000003000000]]', 'b': '[[20/(5000003*Cout)], [1/5000003]]', 'c': '[[2000002/5000003, 1000001/5000003], [1000001/5000003, -2000001/5000003], [1000001/5000003, 3000002/5000003], [2/5000003, 1/5000003], [0, 0], [1, 0]]', 'd': '[[2000000/5000003], [1000000/5000003], [1000000/5000003], [5000000/5000003], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'Rb1', 'Ra1', 'Rb2', 'Ra2', 'Rb3', 'Ra3'], 'node_list': ['IN', 'OUT', 'IN_exact', '10', '5', '12', '0'], 'net_list': [['Sb0', '10', '5'], ['C0', '5', '12'], ['Sb1', 'OUT', '10'], ['Sb2', 'IN', '10'], ['Sb3', '0', '12']]}
['VIN - Sb - Sb - VOUT', 'VIN - Sb - Sb - C - Sb - GND', 'VOUT - Sb - Sb - C - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-Sb0', 'N-C0-Sb3']), ('Sb0', ['0', 'N-C0-Sb0']), ('Sb1', ['IN', 'N-Sb1-Sb2-Sb3']), ('Sb2', ['N-Sb1-Sb2-Sb3', 'OUT']), ('Sb3', ['N-C0-Sb3', 'N-Sb1-Sb2-Sb3'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1603/(2650*Cout), 11/(53*Cout)], [11/530, -21/530]]', 'b': '[[20/(53*Cout)], [1/53]]', 'c': '[[22/53, 11/53], [11/53, -21/53], [11/53, 32/53], [2/53, 1/53], [0, 0], [1, 0]]', 'd': '[[20/53], [10/53], [10/53], [50/53], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-10003006001/(500000300000*Cout), 1000001/(500000300000*Cout)], [1000001/5000003000000, -2000001/5000003000000]]', 'b': '[[20/(5000003*Cout)], [1/5000003]]', 'c': '[[2000002/5000003, 1000001/5000003], [1000001/5000003, -2000001/5000003], [1000001/5000003, 3000002/5000003], [2/5000003, 1/5000003], [0, 0], [1, 0]]', 'd': '[[2000000/5000003], [1000000/5000003], [1000000/5000003], [5000000/5000003], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'Rb1', 'Ra1', 'Rb2', 'Ra2', 'Rb3', 'Ra3'], 'node_list': ['IN', 'OUT', 'IN_exact', '10', '5', '12', '0'], 'net_list': [['Sb0', '10', '5'], ['C0', '5', '12'], ['Sb1', 'OUT', '10'], ['Sb2', 'IN', '10'], ['Sb3', '0', '12']]}
['VIN - Sb - Sb - VOUT', 'VIN - Sb - Sb - C - Sb - GND', 'VOUT - Sb - Sb - C - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-Sb0', 'N-C0-Sb3']), ('Sb0', ['0', 'N-C0-Sb0']), ('Sb1', ['IN', 'N-Sb1-Sb2-Sb3']), ('Sb2', ['N-Sb1-Sb2-Sb3', 'OUT']), ('Sb3', ['N-C0-Sb3', 'N-Sb1-Sb2-Sb3'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1603/(2650*Cout), 11/(53*Cout)], [11/530, -21/530]]', 'b': '[[20/(53*Cout)], [1/53]]', 'c': '[[22/53, 11/53], [11/53, -21/53], [11/53, 32/53], [2/53, 1/53], [0, 0], [1, 0]]', 'd': '[[20/53], [10/53], [10/53], [50/53], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-10003006001/(500000300000*Cout), 1000001/(500000300000*Cout)], [1000001/5000003000000, -2000001/5000003000000]]', 'b': '[[20/(5000003*Cout)], [1/5000003]]', 'c': '[[2000002/5000003, 1000001/5000003], [1000001/5000003, -2000001/5000003], [1000001/5000003, 3000002/5000003], [2/5000003, 1/5000003], [0, 0], [1, 0]]', 'd': '[[2000000/5000003], [1000000/5000003], [1000000/5000003], [5000000/5000003], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'Rb1', 'Ra1', 'Rb2', 'Ra2', 'Rb3', 'Ra3'], 'node_list': ['IN', 'OUT', 'IN_exact', '10', '5', '12', '0'], 'net_list': [['Sb0', '10', '5'], ['C0', '5', '12'], ['Sb1', 'OUT', '10'], ['Sb2', 'IN', '10'], ['Sb3', '0', '12']]}
['VIN - Sb - Sb - VOUT', 'VIN - Sb - Sb - C - Sb - GND', 'VOUT - Sb - Sb - C - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-Sb0', 'N-C0-Sb3']), ('Sb0', ['0', 'N-C0-Sb0']), ('Sb1', ['IN', 'N-Sb1-Sb2-Sb3']), ('Sb2', ['N-Sb1-Sb2-Sb3', 'OUT']), ('Sb3', ['N-C0-Sb3', 'N-Sb1-Sb2-Sb3'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1603/(2650*Cout), 11/(53*Cout)], [11/530, -21/530]]', 'b': '[[20/(53*Cout)], [1/53]]', 'c': '[[22/53, 11/53], [11/53, -21/53], [11/53, 32/53], [2/53, 1/53], [0, 0], [1, 0]]', 'd': '[[20/53], [10/53], [10/53], [50/53], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-10003006001/(500000300000*Cout), 1000001/(500000300000*Cout)], [1000001/5000003000000, -2000001/5000003000000]]', 'b': '[[20/(5000003*Cout)], [1/5000003]]', 'c': '[[2000002/5000003, 1000001/5000003], [1000001/5000003, -2000001/5000003], [1000001/5000003, 3000002/5000003], [2/5000003, 1/5000003], [0, 0], [1, 0]]', 'd': '[[2000000/5000003], [1000000/5000003], [1000000/5000003], [5000000/5000003], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'Rb1', 'Ra1', 'Rb2', 'Ra2', 'Rb3', 'Ra3'], 'node_list': ['IN', 'OUT', 'IN_exact', '10', '5', '12', '0'], 'net_list': [['Sb0', '10', '5'], ['C0', '5', '12'], ['Sb1', 'OUT', '10'], ['Sb2', 'IN', '10'], ['Sb3', '0', '12']]}
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - C - L - Sb - GND', 'VIN - Sb - L - Sb - GND', 'VIN - Sa - L - Sb - GND', 'VOUT - L - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'OUT']), ('L0', ['N-L0-Sb0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-L0-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/100, 1/100, 0], [-1/Cout, -501/(50*Cout), 10/Cout], [0, 1, -1100001/1000000]]', 'b': '[[0], [10/Cout], [-1]]', 'c': '[[1, 0, 0], [0, 1, -1], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000, 1/100, 0], [-1/Cout, -501/(50*Cout), 10/Cout], [0, 1, -1100001/1000000]]', 'b': '[[0], [10/Cout], [-1]]', 'c': '[[100000, 0, 0], [0, 1, -1], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Rb1', 'Ra1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['L0', 'OUT', '12'], ['C0', 'OUT', 'IN'], ['Sb1', '0', '12']]}
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - C - L - Sb - GND', 'VIN - Sb - L - Sb - GND', 'VIN - Sa - L - Sb - GND', 'VOUT - L - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'OUT']), ('L0', ['N-L0-Sb0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-L0-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/100, 1/100, 0], [-1/Cout, -501/(50*Cout), 10/Cout], [0, 1, -1100001/1000000]]', 'b': '[[0], [10/Cout], [-1]]', 'c': '[[1, 0, 0], [0, 1, -1], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000, 1/100, 0], [-1/Cout, -501/(50*Cout), 10/Cout], [0, 1, -1100001/1000000]]', 'b': '[[0], [10/Cout], [-1]]', 'c': '[[100000, 0, 0], [0, 1, -1], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Rb1', 'Ra1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['L0', 'OUT', '12'], ['C0', 'OUT', 'IN'], ['Sb1', '0', '12']]}
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - C - L - Sb - GND', 'VIN - Sb - L - Sb - GND', 'VIN - Sa - L - Sb - GND', 'VOUT - L - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'OUT']), ('L0', ['N-L0-Sb0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-L0-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/100, 1/100, 0], [-1/Cout, -501/(50*Cout), 10/Cout], [0, 1, -1100001/1000000]]', 'b': '[[0], [10/Cout], [-1]]', 'c': '[[1, 0, 0], [0, 1, -1], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000, 1/100, 0], [-1/Cout, -501/(50*Cout), 10/Cout], [0, 1, -1100001/1000000]]', 'b': '[[0], [10/Cout], [-1]]', 'c': '[[100000, 0, 0], [0, 1, -1], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Rb1', 'Ra1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['L0', 'OUT', '12'], ['C0', 'OUT', 'IN'], ['Sb1', '0', '12']]}
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - C - L - Sb - GND', 'VIN - Sb - L - Sb - GND', 'VIN - Sa - L - Sb - GND', 'VOUT - L - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'OUT']), ('L0', ['N-L0-Sb0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-L0-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/100, 1/100, 0], [-1/Cout, -501/(50*Cout), 10/Cout], [0, 1, -1100001/1000000]]', 'b': '[[0], [10/Cout], [-1]]', 'c': '[[1, 0, 0], [0, 1, -1], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000, 1/100, 0], [-1/Cout, -501/(50*Cout), 10/Cout], [0, 1, -1100001/1000000]]', 'b': '[[0], [10/Cout], [-1]]', 'c': '[[100000, 0, 0], [0, 1, -1], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Rb1', 'Ra1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['L0', 'OUT', '12'], ['C0', 'OUT', 'IN'], ['Sb1', '0', '12']]}
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - C - L - Sb - GND', 'VIN - Sb - L - Sb - GND', 'VIN - Sa - L - Sb - GND', 'VOUT - L - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'OUT']), ('L0', ['N-L0-Sb0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-L0-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/100, 1/100, 0], [-1/Cout, -501/(50*Cout), 10/Cout], [0, 1, -1100001/1000000]]', 'b': '[[0], [10/Cout], [-1]]', 'c': '[[1, 0, 0], [0, 1, -1], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000, 1/100, 0], [-1/Cout, -501/(50*Cout), 10/Cout], [0, 1, -1100001/1000000]]', 'b': '[[0], [10/Cout], [-1]]', 'c': '[[100000, 0, 0], [0, 1, -1], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Rb1', 'Ra1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['L0', 'OUT', '12'], ['C0', 'OUT', 'IN'], ['Sb1', '0', '12']]}
has to be unconnected
has to be unconnected
has to be unconnected
['VIN - Sa - L - VOUT', 'VIN - L - L - Sa - GND', 'VOUT - L - Sa - L - L - Sa - GND']

 PCC-36504
1
OrderedDict([('L0', ['N-L0-Sa1', 'OUT']), ('L1', ['N-L1-L2', 'N-L1-Sa0']), ('L2', ['IN', 'N-L1-L2']), ('Sa0', ['0', 'N-L1-Sa0']), ('Sa1', ['IN', 'N-L0-Sa1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-36504 violations

['VIN - Sa - L - VOUT', 'VIN - L - L - Sa - GND', 'VOUT - L - Sa - L - L - Sa - GND']

 PCC-36504
1
OrderedDict([('L0', ['N-L0-Sa1', 'OUT']), ('L1', ['N-L1-L2', 'N-L1-Sa0']), ('L2', ['IN', 'N-L1-L2']), ('Sa0', ['0', 'N-L1-Sa0']), ('Sa1', ['IN', 'N-L0-Sa1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sa - L - VOUT', 'VIN - L - L - Sa - GND', 'VOUT - L - Sa - L - L - Sa - GND']

 PCC-36504
1
OrderedDict([('L0', ['N-L0-Sa1', 'OUT']), ('L1', ['N-L1-L2', 'N-L1-Sa0']), ('L2', ['IN', 'N-L1-L2']), ('Sa0', ['0', 'N-L1-Sa0']), ('Sa1', ['IN', 'N-L0-Sa1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sa - L - VOUT', 'VIN - L - L - Sa - GND', 'VOUT - L - Sa - L - L - Sa - GND']

 PCC-36504
1
OrderedDict([('L0', ['N-L0-Sa1', 'OUT']), ('L1', ['N-L1-L2', 'N-L1-Sa0']), ('L2', ['IN', 'N-L1-L2']), ('Sa0', ['0', 'N-L1-Sa0']), ('Sa1', ['IN', 'N-L0-Sa1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sa - L - VOUT', 'VIN - L - L - Sa - GND', 'VOUT - L - Sa - L - L - Sa - GND']

 PCC-36504
1
OrderedDict([('L0', ['N-L0-Sa1', 'OUT']), ('L1', ['N-L1-L2', 'N-L1-Sa0']), ('L2', ['IN', 'N-L1-L2']), ('Sa0', ['0', 'N-L1-Sa0']), ('Sa1', ['IN', 'N-L0-Sa1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
has to be unconnected
['VIN - Sb - Sa - VOUT', 'VIN - L - L - GND', 'VIN - L - Sa - GND', 'VOUT - Sa - Sb - L - L - GND', 'VOUT - Sa - Sb - L - Sa - GND']

 PCC-36504
1
OrderedDict([('L0', ['IN', 'N-L0-L1-Sa0']), ('L1', ['0', 'N-L0-L1-Sa0']), ('Sa0', ['0', 'N-L0-L1-Sa0']), ('Sa1', ['N-Sa1-Sb0', 'OUT']), ('Sb0', ['IN', 'N-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000, -1000, 0], [-1000, -100001200001/100001100, 1/100001100], [0, -1/(1000011*Cout), -1000511/(50000550*Cout)]]', 'b': '[[0], [100001/10000110], [10/(1000011*Cout)]]', 'c': '[[100000, 100000, 0], [0, -100000/1000011, 11/1000011], [0, -100001/1000011, 1/1000011], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/100, -1/100, 0], [-1/100, -275003/25000275, 1/100001100], [0, -1/(1000011*Cout), -1000511/(50000550*Cout)]]', 'b': '[[0], [100001/10000110], [10/(1000011*Cout)]]', 'c': '[[1, 1, 0], [0, -1/1000011, 1000001/1000011], [0, -100001/1000011, 1/1000011], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [10/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '5', '0', '12'], 'net_list': [['Sa0', 'OUT', '5'], ['Sb0', '5', 'IN'], ['L0', '0', '12'], ['Sa1', '0', '12'], ['L1', 'IN', '12']]}
['VIN - Sb - Sa - VOUT', 'VIN - L - L - GND', 'VIN - L - Sa - GND', 'VOUT - Sa - Sb - L - L - GND', 'VOUT - Sa - Sb - L - Sa - GND']

 PCC-36504
1
OrderedDict([('L0', ['IN', 'N-L0-L1-Sa0']), ('L1', ['0', 'N-L0-L1-Sa0']), ('Sa0', ['0', 'N-L0-L1-Sa0']), ('Sa1', ['N-Sa1-Sb0', 'OUT']), ('Sb0', ['IN', 'N-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000, -1000, 0], [-1000, -100001200001/100001100, 1/100001100], [0, -1/(1000011*Cout), -1000511/(50000550*Cout)]]', 'b': '[[0], [100001/10000110], [10/(1000011*Cout)]]', 'c': '[[100000, 100000, 0], [0, -100000/1000011, 11/1000011], [0, -100001/1000011, 1/1000011], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/100, -1/100, 0], [-1/100, -275003/25000275, 1/100001100], [0, -1/(1000011*Cout), -1000511/(50000550*Cout)]]', 'b': '[[0], [100001/10000110], [10/(1000011*Cout)]]', 'c': '[[1, 1, 0], [0, -1/1000011, 1000001/1000011], [0, -100001/1000011, 1/1000011], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [10/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '5', '0', '12'], 'net_list': [['Sa0', 'OUT', '5'], ['Sb0', '5', 'IN'], ['L0', '0', '12'], ['Sa1', '0', '12'], ['L1', 'IN', '12']]}
['VIN - Sb - Sa - VOUT', 'VIN - L - L - GND', 'VIN - L - Sa - GND', 'VOUT - Sa - Sb - L - L - GND', 'VOUT - Sa - Sb - L - Sa - GND']

 PCC-36504
1
OrderedDict([('L0', ['IN', 'N-L0-L1-Sa0']), ('L1', ['0', 'N-L0-L1-Sa0']), ('Sa0', ['0', 'N-L0-L1-Sa0']), ('Sa1', ['N-Sa1-Sb0', 'OUT']), ('Sb0', ['IN', 'N-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000, -1000, 0], [-1000, -100001200001/100001100, 1/100001100], [0, -1/(1000011*Cout), -1000511/(50000550*Cout)]]', 'b': '[[0], [100001/10000110], [10/(1000011*Cout)]]', 'c': '[[100000, 100000, 0], [0, -100000/1000011, 11/1000011], [0, -100001/1000011, 1/1000011], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/100, -1/100, 0], [-1/100, -275003/25000275, 1/100001100], [0, -1/(1000011*Cout), -1000511/(50000550*Cout)]]', 'b': '[[0], [100001/10000110], [10/(1000011*Cout)]]', 'c': '[[1, 1, 0], [0, -1/1000011, 1000001/1000011], [0, -100001/1000011, 1/1000011], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [10/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '5', '0', '12'], 'net_list': [['Sa0', 'OUT', '5'], ['Sb0', '5', 'IN'], ['L0', '0', '12'], ['Sa1', '0', '12'], ['L1', 'IN', '12']]}
['VIN - Sb - Sa - VOUT', 'VIN - L - L - GND', 'VIN - L - Sa - GND', 'VOUT - Sa - Sb - L - L - GND', 'VOUT - Sa - Sb - L - Sa - GND']

 PCC-36504
1
OrderedDict([('L0', ['IN', 'N-L0-L1-Sa0']), ('L1', ['0', 'N-L0-L1-Sa0']), ('Sa0', ['0', 'N-L0-L1-Sa0']), ('Sa1', ['N-Sa1-Sb0', 'OUT']), ('Sb0', ['IN', 'N-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000, -1000, 0], [-1000, -100001200001/100001100, 1/100001100], [0, -1/(1000011*Cout), -1000511/(50000550*Cout)]]', 'b': '[[0], [100001/10000110], [10/(1000011*Cout)]]', 'c': '[[100000, 100000, 0], [0, -100000/1000011, 11/1000011], [0, -100001/1000011, 1/1000011], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/100, -1/100, 0], [-1/100, -275003/25000275, 1/100001100], [0, -1/(1000011*Cout), -1000511/(50000550*Cout)]]', 'b': '[[0], [100001/10000110], [10/(1000011*Cout)]]', 'c': '[[1, 1, 0], [0, -1/1000011, 1000001/1000011], [0, -100001/1000011, 1/1000011], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [10/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '5', '0', '12'], 'net_list': [['Sa0', 'OUT', '5'], ['Sb0', '5', 'IN'], ['L0', '0', '12'], ['Sa1', '0', '12'], ['L1', 'IN', '12']]}
['VIN - Sb - Sa - VOUT', 'VIN - L - L - GND', 'VIN - L - Sa - GND', 'VOUT - Sa - Sb - L - L - GND', 'VOUT - Sa - Sb - L - Sa - GND']

 PCC-36504
1
OrderedDict([('L0', ['IN', 'N-L0-L1-Sa0']), ('L1', ['0', 'N-L0-L1-Sa0']), ('Sa0', ['0', 'N-L0-L1-Sa0']), ('Sa1', ['N-Sa1-Sb0', 'OUT']), ('Sb0', ['IN', 'N-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000, -1000, 0], [-1000, -100001200001/100001100, 1/100001100], [0, -1/(1000011*Cout), -1000511/(50000550*Cout)]]', 'b': '[[0], [100001/10000110], [10/(1000011*Cout)]]', 'c': '[[100000, 100000, 0], [0, -100000/1000011, 11/1000011], [0, -100001/1000011, 1/1000011], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/100, -1/100, 0], [-1/100, -275003/25000275, 1/100001100], [0, -1/(1000011*Cout), -1000511/(50000550*Cout)]]', 'b': '[[0], [100001/10000110], [10/(1000011*Cout)]]', 'c': '[[1, 1, 0], [0, -1/1000011, 1000001/1000011], [0, -100001/1000011, 1/1000011], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [10/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '5', '0', '12'], 'net_list': [['Sa0', 'OUT', '5'], ['Sb0', '5', 'IN'], ['L0', '0', '12'], ['Sa1', '0', '12'], ['L1', 'IN', '12']]}
has to be unconnected
['VIN - Sb - L - VOUT', 'VIN - Sb - Sb - VOUT', 'VIN - Sa - L - VOUT', 'VIN - Sa - Sb - VOUT', 'VIN - Sb - L - GND', 'VIN - Sa - L - GND', 'VOUT - L - L - GND', 'VOUT - Sb - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-L1-Sa0-Sb0-Sb1']), ('L1', ['N-L0-L1-Sa0-Sb0-Sb1', 'OUT']), ('Sa0', ['IN', 'N-L0-L1-Sa0-Sb0-Sb1']), ('Sb0', ['N-L0-L1-Sa0-Sb0-Sb1', 'OUT']), ('Sb1', ['IN', 'N-L0-L1-Sa0-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/210001100, -1100001/210001100, 100001/21000110], [-1100001/210001100, -1100001/210001100, -1100001/210001100], [-1000010/(2100011*Cout), 1100001/(2100011*Cout), -52100511/(105000550*Cout)]]', 'b': '[[-100001/21000110], [-100001/21000110], [1000010/(2100011*Cout)]]', 'c': '[[1100001/2100011, 1100001/2100011, 1100001/2100011], [100001/2100011, 100001/2100011, 100001/2100011], [0, 0, 0], [0, 0, 1]]', 'd': '[[1000010/2100011], [2000010/2100011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001000/100002100001, -1100001000/100002100001, 1000010000/100002100001], [-1100001000/100002100001, -1100001000/100002100001, -1100001/10000210000100], [-100001000000/(100002100001*Cout), 1100001/(100002100001*Cout), -100052100501/(5000105000050*Cout)]]', 'b': '[[-1000010000/100002100001], [-1000010000/100002100001], [1000010/(100002100001*Cout)]]', 'c': '[[110000100000/100002100001, 110000100000/100002100001, 1100001/100002100001], [10000100000/100002100001, 10000100000/100002100001, 100001/100002100001], [0, 0, 0], [0, 0, 1]]', 'd': '[[100001000000/100002100001], [100002000000/100002100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'IN', '12'], ['Sb0', 'IN', '12'], ['L0', 'OUT', '12'], ['Sb1', 'OUT', '12'], ['L1', '0', '12']]}
['VIN - Sb - L - VOUT', 'VIN - Sb - Sb - VOUT', 'VIN - Sa - L - VOUT', 'VIN - Sa - Sb - VOUT', 'VIN - Sb - L - GND', 'VIN - Sa - L - GND', 'VOUT - L - L - GND', 'VOUT - Sb - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-L1-Sa0-Sb0-Sb1']), ('L1', ['N-L0-L1-Sa0-Sb0-Sb1', 'OUT']), ('Sa0', ['IN', 'N-L0-L1-Sa0-Sb0-Sb1']), ('Sb0', ['N-L0-L1-Sa0-Sb0-Sb1', 'OUT']), ('Sb1', ['IN', 'N-L0-L1-Sa0-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/210001100, -1100001/210001100, 100001/21000110], [-1100001/210001100, -1100001/210001100, -1100001/210001100], [-1000010/(2100011*Cout), 1100001/(2100011*Cout), -52100511/(105000550*Cout)]]', 'b': '[[-100001/21000110], [-100001/21000110], [1000010/(2100011*Cout)]]', 'c': '[[1100001/2100011, 1100001/2100011, 1100001/2100011], [100001/2100011, 100001/2100011, 100001/2100011], [0, 0, 0], [0, 0, 1]]', 'd': '[[1000010/2100011], [2000010/2100011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001000/100002100001, -1100001000/100002100001, 1000010000/100002100001], [-1100001000/100002100001, -1100001000/100002100001, -1100001/10000210000100], [-100001000000/(100002100001*Cout), 1100001/(100002100001*Cout), -100052100501/(5000105000050*Cout)]]', 'b': '[[-1000010000/100002100001], [-1000010000/100002100001], [1000010/(100002100001*Cout)]]', 'c': '[[110000100000/100002100001, 110000100000/100002100001, 1100001/100002100001], [10000100000/100002100001, 10000100000/100002100001, 100001/100002100001], [0, 0, 0], [0, 0, 1]]', 'd': '[[100001000000/100002100001], [100002000000/100002100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'IN', '12'], ['Sb0', 'IN', '12'], ['L0', 'OUT', '12'], ['Sb1', 'OUT', '12'], ['L1', '0', '12']]}
['VIN - Sb - L - VOUT', 'VIN - Sb - Sb - VOUT', 'VIN - Sa - L - VOUT', 'VIN - Sa - Sb - VOUT', 'VIN - Sb - L - GND', 'VIN - Sa - L - GND', 'VOUT - L - L - GND', 'VOUT - Sb - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-L1-Sa0-Sb0-Sb1']), ('L1', ['N-L0-L1-Sa0-Sb0-Sb1', 'OUT']), ('Sa0', ['IN', 'N-L0-L1-Sa0-Sb0-Sb1']), ('Sb0', ['N-L0-L1-Sa0-Sb0-Sb1', 'OUT']), ('Sb1', ['IN', 'N-L0-L1-Sa0-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/210001100, -1100001/210001100, 100001/21000110], [-1100001/210001100, -1100001/210001100, -1100001/210001100], [-1000010/(2100011*Cout), 1100001/(2100011*Cout), -52100511/(105000550*Cout)]]', 'b': '[[-100001/21000110], [-100001/21000110], [1000010/(2100011*Cout)]]', 'c': '[[1100001/2100011, 1100001/2100011, 1100001/2100011], [100001/2100011, 100001/2100011, 100001/2100011], [0, 0, 0], [0, 0, 1]]', 'd': '[[1000010/2100011], [2000010/2100011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001000/100002100001, -1100001000/100002100001, 1000010000/100002100001], [-1100001000/100002100001, -1100001000/100002100001, -1100001/10000210000100], [-100001000000/(100002100001*Cout), 1100001/(100002100001*Cout), -100052100501/(5000105000050*Cout)]]', 'b': '[[-1000010000/100002100001], [-1000010000/100002100001], [1000010/(100002100001*Cout)]]', 'c': '[[110000100000/100002100001, 110000100000/100002100001, 1100001/100002100001], [10000100000/100002100001, 10000100000/100002100001, 100001/100002100001], [0, 0, 0], [0, 0, 1]]', 'd': '[[100001000000/100002100001], [100002000000/100002100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'IN', '12'], ['Sb0', 'IN', '12'], ['L0', 'OUT', '12'], ['Sb1', 'OUT', '12'], ['L1', '0', '12']]}
['VIN - Sb - L - VOUT', 'VIN - Sb - Sb - VOUT', 'VIN - Sa - L - VOUT', 'VIN - Sa - Sb - VOUT', 'VIN - Sb - L - GND', 'VIN - Sa - L - GND', 'VOUT - L - L - GND', 'VOUT - Sb - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-L1-Sa0-Sb0-Sb1']), ('L1', ['N-L0-L1-Sa0-Sb0-Sb1', 'OUT']), ('Sa0', ['IN', 'N-L0-L1-Sa0-Sb0-Sb1']), ('Sb0', ['N-L0-L1-Sa0-Sb0-Sb1', 'OUT']), ('Sb1', ['IN', 'N-L0-L1-Sa0-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/210001100, -1100001/210001100, 100001/21000110], [-1100001/210001100, -1100001/210001100, -1100001/210001100], [-1000010/(2100011*Cout), 1100001/(2100011*Cout), -52100511/(105000550*Cout)]]', 'b': '[[-100001/21000110], [-100001/21000110], [1000010/(2100011*Cout)]]', 'c': '[[1100001/2100011, 1100001/2100011, 1100001/2100011], [100001/2100011, 100001/2100011, 100001/2100011], [0, 0, 0], [0, 0, 1]]', 'd': '[[1000010/2100011], [2000010/2100011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001000/100002100001, -1100001000/100002100001, 1000010000/100002100001], [-1100001000/100002100001, -1100001000/100002100001, -1100001/10000210000100], [-100001000000/(100002100001*Cout), 1100001/(100002100001*Cout), -100052100501/(5000105000050*Cout)]]', 'b': '[[-1000010000/100002100001], [-1000010000/100002100001], [1000010/(100002100001*Cout)]]', 'c': '[[110000100000/100002100001, 110000100000/100002100001, 1100001/100002100001], [10000100000/100002100001, 10000100000/100002100001, 100001/100002100001], [0, 0, 0], [0, 0, 1]]', 'd': '[[100001000000/100002100001], [100002000000/100002100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'IN', '12'], ['Sb0', 'IN', '12'], ['L0', 'OUT', '12'], ['Sb1', 'OUT', '12'], ['L1', '0', '12']]}
['VIN - Sb - L - VOUT', 'VIN - Sb - Sb - VOUT', 'VIN - Sa - L - VOUT', 'VIN - Sa - Sb - VOUT', 'VIN - Sb - L - GND', 'VIN - Sa - L - GND', 'VOUT - L - L - GND', 'VOUT - Sb - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-L1-Sa0-Sb0-Sb1']), ('L1', ['N-L0-L1-Sa0-Sb0-Sb1', 'OUT']), ('Sa0', ['IN', 'N-L0-L1-Sa0-Sb0-Sb1']), ('Sb0', ['N-L0-L1-Sa0-Sb0-Sb1', 'OUT']), ('Sb1', ['IN', 'N-L0-L1-Sa0-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/210001100, -1100001/210001100, 100001/21000110], [-1100001/210001100, -1100001/210001100, -1100001/210001100], [-1000010/(2100011*Cout), 1100001/(2100011*Cout), -52100511/(105000550*Cout)]]', 'b': '[[-100001/21000110], [-100001/21000110], [1000010/(2100011*Cout)]]', 'c': '[[1100001/2100011, 1100001/2100011, 1100001/2100011], [100001/2100011, 100001/2100011, 100001/2100011], [0, 0, 0], [0, 0, 1]]', 'd': '[[1000010/2100011], [2000010/2100011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001000/100002100001, -1100001000/100002100001, 1000010000/100002100001], [-1100001000/100002100001, -1100001000/100002100001, -1100001/10000210000100], [-100001000000/(100002100001*Cout), 1100001/(100002100001*Cout), -100052100501/(5000105000050*Cout)]]', 'b': '[[-1000010000/100002100001], [-1000010000/100002100001], [1000010/(100002100001*Cout)]]', 'c': '[[110000100000/100002100001, 110000100000/100002100001, 1100001/100002100001], [10000100000/100002100001, 10000100000/100002100001, 100001/100002100001], [0, 0, 0], [0, 0, 1]]', 'd': '[[100001000000/100002100001], [100002000000/100002100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'IN', '12'], ['Sb0', 'IN', '12'], ['L0', 'OUT', '12'], ['Sb1', 'OUT', '12'], ['L1', '0', '12']]}
has to be unconnected
['VIN - L - Sb - Sa - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - Sa - Sb - L - Sa - Sb - GND']

 PCC-36504
1
OrderedDict([('L0', ['IN', 'N-L0-Sb0']), ('Sa0', ['N-Sa0-Sb0', 'OUT']), ('Sa1', ['IN', 'N-Sa1-Sb1']), ('Sb0', ['N-L0-Sb0', 'N-Sa0-Sb0']), ('Sb1', ['0', 'N-Sa1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_6(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-25000550003/25000275, -1/100], [1/Cout, -1/(50*Cout)]]', 'b': '[[100001/10000110], [0]]', 'c': '[[100001, 1], [100000, 1], [-1/1000011, 0], [-100001/1000011, 0], [0, 0], [0, 1]]', 'd': '[[0], [0], [10/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_6(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-25000550003/25000275, -1/100], [1/Cout, -1/(50*Cout)]]', 'b': '[[100001/10000110], [0]]', 'c': '[[100001, 1], [1, 1], [-100000/1000011, 0], [-100001/1000011, 0], [0, 0], [0, 1]]', 'd': '[[0], [0], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '6', '0', '11', '12'], 'net_list': [['Sa0', 'IN', '6'], ['Sb0', '0', '6'], ['L0', 'IN', '11'], ['Sa1', 'OUT', '12'], ['Sb1', '11', '12']]}
['VIN - L - Sb - Sa - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - Sa - Sb - L - Sa - Sb - GND']

 PCC-36504
1
OrderedDict([('L0', ['IN', 'N-L0-Sb0']), ('Sa0', ['N-Sa0-Sb0', 'OUT']), ('Sa1', ['IN', 'N-Sa1-Sb1']), ('Sb0', ['N-L0-Sb0', 'N-Sa0-Sb0']), ('Sb1', ['0', 'N-Sa1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_6(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-25000550003/25000275, -1/100], [1/Cout, -1/(50*Cout)]]', 'b': '[[100001/10000110], [0]]', 'c': '[[100001, 1], [100000, 1], [-1/1000011, 0], [-100001/1000011, 0], [0, 0], [0, 1]]', 'd': '[[0], [0], [10/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_6(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-25000550003/25000275, -1/100], [1/Cout, -1/(50*Cout)]]', 'b': '[[100001/10000110], [0]]', 'c': '[[100001, 1], [1, 1], [-100000/1000011, 0], [-100001/1000011, 0], [0, 0], [0, 1]]', 'd': '[[0], [0], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '6', '0', '11', '12'], 'net_list': [['Sa0', 'IN', '6'], ['Sb0', '0', '6'], ['L0', 'IN', '11'], ['Sa1', 'OUT', '12'], ['Sb1', '11', '12']]}
['VIN - L - Sb - Sa - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - Sa - Sb - L - Sa - Sb - GND']

 PCC-36504
1
OrderedDict([('L0', ['IN', 'N-L0-Sb0']), ('Sa0', ['N-Sa0-Sb0', 'OUT']), ('Sa1', ['IN', 'N-Sa1-Sb1']), ('Sb0', ['N-L0-Sb0', 'N-Sa0-Sb0']), ('Sb1', ['0', 'N-Sa1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_6(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-25000550003/25000275, -1/100], [1/Cout, -1/(50*Cout)]]', 'b': '[[100001/10000110], [0]]', 'c': '[[100001, 1], [100000, 1], [-1/1000011, 0], [-100001/1000011, 0], [0, 0], [0, 1]]', 'd': '[[0], [0], [10/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_6(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-25000550003/25000275, -1/100], [1/Cout, -1/(50*Cout)]]', 'b': '[[100001/10000110], [0]]', 'c': '[[100001, 1], [1, 1], [-100000/1000011, 0], [-100001/1000011, 0], [0, 0], [0, 1]]', 'd': '[[0], [0], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '6', '0', '11', '12'], 'net_list': [['Sa0', 'IN', '6'], ['Sb0', '0', '6'], ['L0', 'IN', '11'], ['Sa1', 'OUT', '12'], ['Sb1', '11', '12']]}
['VIN - L - Sb - Sa - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - Sa - Sb - L - Sa - Sb - GND']

 PCC-36504
1
OrderedDict([('L0', ['IN', 'N-L0-Sb0']), ('Sa0', ['N-Sa0-Sb0', 'OUT']), ('Sa1', ['IN', 'N-Sa1-Sb1']), ('Sb0', ['N-L0-Sb0', 'N-Sa0-Sb0']), ('Sb1', ['0', 'N-Sa1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_6(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-25000550003/25000275, -1/100], [1/Cout, -1/(50*Cout)]]', 'b': '[[100001/10000110], [0]]', 'c': '[[100001, 1], [100000, 1], [-1/1000011, 0], [-100001/1000011, 0], [0, 0], [0, 1]]', 'd': '[[0], [0], [10/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_6(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-25000550003/25000275, -1/100], [1/Cout, -1/(50*Cout)]]', 'b': '[[100001/10000110], [0]]', 'c': '[[100001, 1], [1, 1], [-100000/1000011, 0], [-100001/1000011, 0], [0, 0], [0, 1]]', 'd': '[[0], [0], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '6', '0', '11', '12'], 'net_list': [['Sa0', 'IN', '6'], ['Sb0', '0', '6'], ['L0', 'IN', '11'], ['Sa1', 'OUT', '12'], ['Sb1', '11', '12']]}
['VIN - L - Sb - Sa - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - Sa - Sb - L - Sa - Sb - GND']

 PCC-36504
1
OrderedDict([('L0', ['IN', 'N-L0-Sb0']), ('Sa0', ['N-Sa0-Sb0', 'OUT']), ('Sa1', ['IN', 'N-Sa1-Sb1']), ('Sb0', ['N-L0-Sb0', 'N-Sa0-Sb0']), ('Sb1', ['0', 'N-Sa1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_6(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-25000550003/25000275, -1/100], [1/Cout, -1/(50*Cout)]]', 'b': '[[100001/10000110], [0]]', 'c': '[[100001, 1], [100000, 1], [-1/1000011, 0], [-100001/1000011, 0], [0, 0], [0, 1]]', 'd': '[[0], [0], [10/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_6(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-25000550003/25000275, -1/100], [1/Cout, -1/(50*Cout)]]', 'b': '[[100001/10000110], [0]]', 'c': '[[100001, 1], [1, 1], [-100000/1000011, 0], [-100001/1000011, 0], [0, 0], [0, 1]]', 'd': '[[0], [0], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '6', '0', '11', '12'], 'net_list': [['Sa0', 'IN', '6'], ['Sb0', '0', '6'], ['L0', 'IN', '11'], ['Sa1', 'OUT', '12'], ['Sb1', '11', '12']]}
has to be unconnected
has to be unconnected
has to be unconnected
has to be unconnected
['VIN - Sb - Sa - L - C - VOUT', 'VIN - L - C - VOUT', 'VIN - Sb - Sa - GND', 'VIN - L - L - GND', 'VOUT - C - L - Sb - Sa - GND', 'VOUT - C - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-L0-L1', 'OUT']), ('L0', ['IN', 'N-C0-L0-L1']), ('L1', ['0', 'N-C0-L0-L1']), ('Sa0', ['0', 'N-Sa0-Sb0']), ('Sb0', ['IN', 'N-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, -1/100, 1/100], [0, -100001/100001100, -1/100, 1/100], [1/Cout, 1/Cout, -1/(50*Cout), 0], [-1/10, -1/10, 0, 0]]', 'b': '[[0], [100001/10000110], [0], [0]]', 'c': '[[0, 0, 1, -1], [0, -100000/1000011, 0, 0], [0, -100001/1000011, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, -1/100, 1/100], [0, -100001/100001100, -1/100, 1/100], [1/Cout, 1/Cout, -1/(50*Cout), 0], [-1/10, -1/10, 0, 0]]', 'b': '[[0], [100001/10000110], [0], [0]]', 'c': '[[0, 0, 1, -1], [0, -1/1000011, 0, 0], [0, -100001/1000011, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [10/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '5', '12'], 'net_list': [['Sa0', '0', '5'], ['Sb0', '5', 'IN'], ['L0', '0', '12'], ['C0', 'OUT', '12'], ['L1', 'IN', '12']]}
['VIN - Sb - Sa - L - C - VOUT', 'VIN - L - C - VOUT', 'VIN - Sb - Sa - GND', 'VIN - L - L - GND', 'VOUT - C - L - Sb - Sa - GND', 'VOUT - C - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-L0-L1', 'OUT']), ('L0', ['IN', 'N-C0-L0-L1']), ('L1', ['0', 'N-C0-L0-L1']), ('Sa0', ['0', 'N-Sa0-Sb0']), ('Sb0', ['IN', 'N-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, -1/100, 1/100], [0, -100001/100001100, -1/100, 1/100], [1/Cout, 1/Cout, -1/(50*Cout), 0], [-1/10, -1/10, 0, 0]]', 'b': '[[0], [100001/10000110], [0], [0]]', 'c': '[[0, 0, 1, -1], [0, -100000/1000011, 0, 0], [0, -100001/1000011, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, -1/100, 1/100], [0, -100001/100001100, -1/100, 1/100], [1/Cout, 1/Cout, -1/(50*Cout), 0], [-1/10, -1/10, 0, 0]]', 'b': '[[0], [100001/10000110], [0], [0]]', 'c': '[[0, 0, 1, -1], [0, -1/1000011, 0, 0], [0, -100001/1000011, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [10/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '5', '12'], 'net_list': [['Sa0', '0', '5'], ['Sb0', '5', 'IN'], ['L0', '0', '12'], ['C0', 'OUT', '12'], ['L1', 'IN', '12']]}
['VIN - Sb - Sa - L - C - VOUT', 'VIN - L - C - VOUT', 'VIN - Sb - Sa - GND', 'VIN - L - L - GND', 'VOUT - C - L - Sb - Sa - GND', 'VOUT - C - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-L0-L1', 'OUT']), ('L0', ['IN', 'N-C0-L0-L1']), ('L1', ['0', 'N-C0-L0-L1']), ('Sa0', ['0', 'N-Sa0-Sb0']), ('Sb0', ['IN', 'N-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, -1/100, 1/100], [0, -100001/100001100, -1/100, 1/100], [1/Cout, 1/Cout, -1/(50*Cout), 0], [-1/10, -1/10, 0, 0]]', 'b': '[[0], [100001/10000110], [0], [0]]', 'c': '[[0, 0, 1, -1], [0, -100000/1000011, 0, 0], [0, -100001/1000011, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, -1/100, 1/100], [0, -100001/100001100, -1/100, 1/100], [1/Cout, 1/Cout, -1/(50*Cout), 0], [-1/10, -1/10, 0, 0]]', 'b': '[[0], [100001/10000110], [0], [0]]', 'c': '[[0, 0, 1, -1], [0, -1/1000011, 0, 0], [0, -100001/1000011, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [10/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '5', '12'], 'net_list': [['Sa0', '0', '5'], ['Sb0', '5', 'IN'], ['L0', '0', '12'], ['C0', 'OUT', '12'], ['L1', 'IN', '12']]}
['VIN - Sb - Sa - L - C - VOUT', 'VIN - L - C - VOUT', 'VIN - Sb - Sa - GND', 'VIN - L - L - GND', 'VOUT - C - L - Sb - Sa - GND', 'VOUT - C - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-L0-L1', 'OUT']), ('L0', ['IN', 'N-C0-L0-L1']), ('L1', ['0', 'N-C0-L0-L1']), ('Sa0', ['0', 'N-Sa0-Sb0']), ('Sb0', ['IN', 'N-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, -1/100, 1/100], [0, -100001/100001100, -1/100, 1/100], [1/Cout, 1/Cout, -1/(50*Cout), 0], [-1/10, -1/10, 0, 0]]', 'b': '[[0], [100001/10000110], [0], [0]]', 'c': '[[0, 0, 1, -1], [0, -100000/1000011, 0, 0], [0, -100001/1000011, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, -1/100, 1/100], [0, -100001/100001100, -1/100, 1/100], [1/Cout, 1/Cout, -1/(50*Cout), 0], [-1/10, -1/10, 0, 0]]', 'b': '[[0], [100001/10000110], [0], [0]]', 'c': '[[0, 0, 1, -1], [0, -1/1000011, 0, 0], [0, -100001/1000011, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [10/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '5', '12'], 'net_list': [['Sa0', '0', '5'], ['Sb0', '5', 'IN'], ['L0', '0', '12'], ['C0', 'OUT', '12'], ['L1', 'IN', '12']]}
['VIN - Sb - Sa - L - C - VOUT', 'VIN - L - C - VOUT', 'VIN - Sb - Sa - GND', 'VIN - L - L - GND', 'VOUT - C - L - Sb - Sa - GND', 'VOUT - C - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-L0-L1', 'OUT']), ('L0', ['IN', 'N-C0-L0-L1']), ('L1', ['0', 'N-C0-L0-L1']), ('Sa0', ['0', 'N-Sa0-Sb0']), ('Sb0', ['IN', 'N-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, -1/100, 1/100], [0, -100001/100001100, -1/100, 1/100], [1/Cout, 1/Cout, -1/(50*Cout), 0], [-1/10, -1/10, 0, 0]]', 'b': '[[0], [100001/10000110], [0], [0]]', 'c': '[[0, 0, 1, -1], [0, -100000/1000011, 0, 0], [0, -100001/1000011, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, -1/100, 1/100], [0, -100001/100001100, -1/100, 1/100], [1/Cout, 1/Cout, -1/(50*Cout), 0], [-1/10, -1/10, 0, 0]]', 'b': '[[0], [100001/10000110], [0], [0]]', 'c': '[[0, 0, 1, -1], [0, -1/1000011, 0, 0], [0, -100001/1000011, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [10/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '5', '12'], 'net_list': [['Sa0', '0', '5'], ['Sb0', '5', 'IN'], ['L0', '0', '12'], ['C0', 'OUT', '12'], ['L1', 'IN', '12']]}
has to be unconnected
has to be unconnected
has to be unconnected
has to be unconnected
has to be unconnected
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - Sb - VOUT', 'VIN - C - Sb - L - GND', 'VIN - Sa - Sb - L - GND', 'VIN - C - L - GND', 'VOUT - C - C - L - GND', 'VOUT - Sb - L - GND', 'VOUT - Sa - C - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'N-C0-L0-Sb0']), ('C1', ['IN', 'OUT']), ('L0', ['0', 'N-C0-L0-Sb0']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['N-C0-L0-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, 1/100, 1/100], [1/Cout, -501/(50*Cout), 10/Cout, 0], [-1/10, 1, -1100001/1000000, -1/10], [-1/10, 0, -1/10, -1/10]]', 'b': '[[0], [10/Cout], [-1], [0]]', 'c': '[[0, 1, -1, -1], [0, 1, -1, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, 1/100, 1/100], [1/Cout, -501/(50*Cout), 10/Cout, 0], [-1/10, 1, -1100001/1000000, -1/1000000], [-1/10, 0, -1/1000000, -1/1000000]]', 'b': '[[0], [10/Cout], [-1], [0]]', 'c': '[[0, 1, -1, -1], [0, 1, -1, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', '12'], ['L0', '0', '12'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '12']]}
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - Sb - VOUT', 'VIN - C - Sb - L - GND', 'VIN - Sa - Sb - L - GND', 'VIN - C - L - GND', 'VOUT - C - C - L - GND', 'VOUT - Sb - L - GND', 'VOUT - Sa - C - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'N-C0-L0-Sb0']), ('C1', ['IN', 'OUT']), ('L0', ['0', 'N-C0-L0-Sb0']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['N-C0-L0-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, 1/100, 1/100], [1/Cout, -501/(50*Cout), 10/Cout, 0], [-1/10, 1, -1100001/1000000, -1/10], [-1/10, 0, -1/10, -1/10]]', 'b': '[[0], [10/Cout], [-1], [0]]', 'c': '[[0, 1, -1, -1], [0, 1, -1, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, 1/100, 1/100], [1/Cout, -501/(50*Cout), 10/Cout, 0], [-1/10, 1, -1100001/1000000, -1/1000000], [-1/10, 0, -1/1000000, -1/1000000]]', 'b': '[[0], [10/Cout], [-1], [0]]', 'c': '[[0, 1, -1, -1], [0, 1, -1, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', '12'], ['L0', '0', '12'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '12']]}
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - Sb - VOUT', 'VIN - C - Sb - L - GND', 'VIN - Sa - Sb - L - GND', 'VIN - C - L - GND', 'VOUT - C - C - L - GND', 'VOUT - Sb - L - GND', 'VOUT - Sa - C - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'N-C0-L0-Sb0']), ('C1', ['IN', 'OUT']), ('L0', ['0', 'N-C0-L0-Sb0']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['N-C0-L0-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, 1/100, 1/100], [1/Cout, -501/(50*Cout), 10/Cout, 0], [-1/10, 1, -1100001/1000000, -1/10], [-1/10, 0, -1/10, -1/10]]', 'b': '[[0], [10/Cout], [-1], [0]]', 'c': '[[0, 1, -1, -1], [0, 1, -1, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, 1/100, 1/100], [1/Cout, -501/(50*Cout), 10/Cout, 0], [-1/10, 1, -1100001/1000000, -1/1000000], [-1/10, 0, -1/1000000, -1/1000000]]', 'b': '[[0], [10/Cout], [-1], [0]]', 'c': '[[0, 1, -1, -1], [0, 1, -1, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', '12'], ['L0', '0', '12'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '12']]}
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - Sb - VOUT', 'VIN - C - Sb - L - GND', 'VIN - Sa - Sb - L - GND', 'VIN - C - L - GND', 'VOUT - C - C - L - GND', 'VOUT - Sb - L - GND', 'VOUT - Sa - C - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'N-C0-L0-Sb0']), ('C1', ['IN', 'OUT']), ('L0', ['0', 'N-C0-L0-Sb0']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['N-C0-L0-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, 1/100, 1/100], [1/Cout, -501/(50*Cout), 10/Cout, 0], [-1/10, 1, -1100001/1000000, -1/10], [-1/10, 0, -1/10, -1/10]]', 'b': '[[0], [10/Cout], [-1], [0]]', 'c': '[[0, 1, -1, -1], [0, 1, -1, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, 1/100, 1/100], [1/Cout, -501/(50*Cout), 10/Cout, 0], [-1/10, 1, -1100001/1000000, -1/1000000], [-1/10, 0, -1/1000000, -1/1000000]]', 'b': '[[0], [10/Cout], [-1], [0]]', 'c': '[[0, 1, -1, -1], [0, 1, -1, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', '12'], ['L0', '0', '12'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '12']]}
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - Sb - VOUT', 'VIN - C - Sb - L - GND', 'VIN - Sa - Sb - L - GND', 'VIN - C - L - GND', 'VOUT - C - C - L - GND', 'VOUT - Sb - L - GND', 'VOUT - Sa - C - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'N-C0-L0-Sb0']), ('C1', ['IN', 'OUT']), ('L0', ['0', 'N-C0-L0-Sb0']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['N-C0-L0-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, 1/100, 1/100], [1/Cout, -501/(50*Cout), 10/Cout, 0], [-1/10, 1, -1100001/1000000, -1/10], [-1/10, 0, -1/10, -1/10]]', 'b': '[[0], [10/Cout], [-1], [0]]', 'c': '[[0, 1, -1, -1], [0, 1, -1, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, 1/100, 1/100], [1/Cout, -501/(50*Cout), 10/Cout, 0], [-1/10, 1, -1100001/1000000, -1/1000000], [-1/10, 0, -1/1000000, -1/1000000]]', 'b': '[[0], [10/Cout], [-1], [0]]', 'c': '[[0, 1, -1, -1], [0, 1, -1, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', '12'], ['L0', '0', '12'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '12']]}
['VIN - C - VOUT', 'VIN - C - Sa - Sb - GND', 'VIN - C - Sa - L - GND', 'VOUT - C - C - Sa - Sb - GND', 'VOUT - C - C - Sa - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'N-C0-Sa0']), ('C1', ['IN', 'OUT']), ('L0', ['0', 'N-L0-Sa0-Sb0']), ('Sa0', ['N-C0-Sa0', 'N-L0-Sa0-Sb0']), ('Sb0', ['0', 'N-L0-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_11(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, 1/10000100, 1/10000100, 1/10000100], [-1/(100001*Cout), -50100551/(5000050*Cout), -1000011/(100001*Cout), -1/(100001*Cout)], [-1/1000010, -1000011/1000010, -1000011/1000010, -1/1000010], [-1/1000010, -1/1000010, -1/1000010, -1/1000010]]', 'b': '[[0], [10/Cout], [1], [0]]', 'c': '[[0, 1, 1, 1], [-100000/100001, 1/100001, 1/100001, 1/100001], [0, 1, 1, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_11(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, 1000/100001, 1000/100001, 1000/100001], [-100000/(100001*Cout), -50100551/(5000050*Cout), -1000011/(100001*Cout), -1/(100001*Cout)], [-10000/100001, -1000011/1000010, -1000011/1000010, -1/1000010], [-10000/100001, -1/1000010, -1/1000010, -1/1000010]]', 'b': '[[0], [10/Cout], [1], [0]]', 'c': '[[0, 1, 1, 1], [-100000/100001, 100000/100001, 100000/100001, 100000/100001], [0, 1, 1, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '7', '11', '0'], 'net_list': [['Sa0', '7', '11'], ['Sb0', '0', '7'], ['L0', '7', '0'], ['C0', 'IN', 'OUT'], ['C1', '11', 'IN']]}
['VIN - C - VOUT', 'VIN - C - Sa - Sb - GND', 'VIN - C - Sa - L - GND', 'VOUT - C - C - Sa - Sb - GND', 'VOUT - C - C - Sa - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'N-C0-Sa0']), ('C1', ['IN', 'OUT']), ('L0', ['0', 'N-L0-Sa0-Sb0']), ('Sa0', ['N-C0-Sa0', 'N-L0-Sa0-Sb0']), ('Sb0', ['0', 'N-L0-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_11(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, 1/10000100, 1/10000100, 1/10000100], [-1/(100001*Cout), -50100551/(5000050*Cout), -1000011/(100001*Cout), -1/(100001*Cout)], [-1/1000010, -1000011/1000010, -1000011/1000010, -1/1000010], [-1/1000010, -1/1000010, -1/1000010, -1/1000010]]', 'b': '[[0], [10/Cout], [1], [0]]', 'c': '[[0, 1, 1, 1], [-100000/100001, 1/100001, 1/100001, 1/100001], [0, 1, 1, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_11(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, 1000/100001, 1000/100001, 1000/100001], [-100000/(100001*Cout), -50100551/(5000050*Cout), -1000011/(100001*Cout), -1/(100001*Cout)], [-10000/100001, -1000011/1000010, -1000011/1000010, -1/1000010], [-10000/100001, -1/1000010, -1/1000010, -1/1000010]]', 'b': '[[0], [10/Cout], [1], [0]]', 'c': '[[0, 1, 1, 1], [-100000/100001, 100000/100001, 100000/100001, 100000/100001], [0, 1, 1, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '7', '11', '0'], 'net_list': [['Sa0', '7', '11'], ['Sb0', '0', '7'], ['L0', '7', '0'], ['C0', 'IN', 'OUT'], ['C1', '11', 'IN']]}
['VIN - C - VOUT', 'VIN - C - Sa - Sb - GND', 'VIN - C - Sa - L - GND', 'VOUT - C - C - Sa - Sb - GND', 'VOUT - C - C - Sa - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'N-C0-Sa0']), ('C1', ['IN', 'OUT']), ('L0', ['0', 'N-L0-Sa0-Sb0']), ('Sa0', ['N-C0-Sa0', 'N-L0-Sa0-Sb0']), ('Sb0', ['0', 'N-L0-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_11(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, 1/10000100, 1/10000100, 1/10000100], [-1/(100001*Cout), -50100551/(5000050*Cout), -1000011/(100001*Cout), -1/(100001*Cout)], [-1/1000010, -1000011/1000010, -1000011/1000010, -1/1000010], [-1/1000010, -1/1000010, -1/1000010, -1/1000010]]', 'b': '[[0], [10/Cout], [1], [0]]', 'c': '[[0, 1, 1, 1], [-100000/100001, 1/100001, 1/100001, 1/100001], [0, 1, 1, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_11(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, 1000/100001, 1000/100001, 1000/100001], [-100000/(100001*Cout), -50100551/(5000050*Cout), -1000011/(100001*Cout), -1/(100001*Cout)], [-10000/100001, -1000011/1000010, -1000011/1000010, -1/1000010], [-10000/100001, -1/1000010, -1/1000010, -1/1000010]]', 'b': '[[0], [10/Cout], [1], [0]]', 'c': '[[0, 1, 1, 1], [-100000/100001, 100000/100001, 100000/100001, 100000/100001], [0, 1, 1, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '7', '11', '0'], 'net_list': [['Sa0', '7', '11'], ['Sb0', '0', '7'], ['L0', '7', '0'], ['C0', 'IN', 'OUT'], ['C1', '11', 'IN']]}
['VIN - C - VOUT', 'VIN - C - Sa - Sb - GND', 'VIN - C - Sa - L - GND', 'VOUT - C - C - Sa - Sb - GND', 'VOUT - C - C - Sa - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'N-C0-Sa0']), ('C1', ['IN', 'OUT']), ('L0', ['0', 'N-L0-Sa0-Sb0']), ('Sa0', ['N-C0-Sa0', 'N-L0-Sa0-Sb0']), ('Sb0', ['0', 'N-L0-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_11(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, 1/10000100, 1/10000100, 1/10000100], [-1/(100001*Cout), -50100551/(5000050*Cout), -1000011/(100001*Cout), -1/(100001*Cout)], [-1/1000010, -1000011/1000010, -1000011/1000010, -1/1000010], [-1/1000010, -1/1000010, -1/1000010, -1/1000010]]', 'b': '[[0], [10/Cout], [1], [0]]', 'c': '[[0, 1, 1, 1], [-100000/100001, 1/100001, 1/100001, 1/100001], [0, 1, 1, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_11(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, 1000/100001, 1000/100001, 1000/100001], [-100000/(100001*Cout), -50100551/(5000050*Cout), -1000011/(100001*Cout), -1/(100001*Cout)], [-10000/100001, -1000011/1000010, -1000011/1000010, -1/1000010], [-10000/100001, -1/1000010, -1/1000010, -1/1000010]]', 'b': '[[0], [10/Cout], [1], [0]]', 'c': '[[0, 1, 1, 1], [-100000/100001, 100000/100001, 100000/100001, 100000/100001], [0, 1, 1, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '7', '11', '0'], 'net_list': [['Sa0', '7', '11'], ['Sb0', '0', '7'], ['L0', '7', '0'], ['C0', 'IN', 'OUT'], ['C1', '11', 'IN']]}
['VIN - C - VOUT', 'VIN - C - Sa - Sb - GND', 'VIN - C - Sa - L - GND', 'VOUT - C - C - Sa - Sb - GND', 'VOUT - C - C - Sa - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'N-C0-Sa0']), ('C1', ['IN', 'OUT']), ('L0', ['0', 'N-L0-Sa0-Sb0']), ('Sa0', ['N-C0-Sa0', 'N-L0-Sa0-Sb0']), ('Sb0', ['0', 'N-L0-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_11(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, 1/10000100, 1/10000100, 1/10000100], [-1/(100001*Cout), -50100551/(5000050*Cout), -1000011/(100001*Cout), -1/(100001*Cout)], [-1/1000010, -1000011/1000010, -1000011/1000010, -1/1000010], [-1/1000010, -1/1000010, -1/1000010, -1/1000010]]', 'b': '[[0], [10/Cout], [1], [0]]', 'c': '[[0, 1, 1, 1], [-100000/100001, 1/100001, 1/100001, 1/100001], [0, 1, 1, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_11(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, 1000/100001, 1000/100001, 1000/100001], [-100000/(100001*Cout), -50100551/(5000050*Cout), -1000011/(100001*Cout), -1/(100001*Cout)], [-10000/100001, -1000011/1000010, -1000011/1000010, -1/1000010], [-10000/100001, -1/1000010, -1/1000010, -1/1000010]]', 'b': '[[0], [10/Cout], [1], [0]]', 'c': '[[0, 1, 1, 1], [-100000/100001, 100000/100001, 100000/100001, 100000/100001], [0, 1, 1, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '7', '11', '0'], 'net_list': [['Sa0', '7', '11'], ['Sb0', '0', '7'], ['L0', '7', '0'], ['C0', 'IN', 'OUT'], ['C1', '11', 'IN']]}
has to be unconnected
has to be unconnected
['VIN - Sa - Sb - VOUT', 'VIN - Sa - Sb - VOUT', 'VIN - Sa - Sa - C - GND', 'VOUT - Sb - Sa - C - GND', 'VOUT - Sb - Sa - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-Sa0']), ('Sa0', ['N-C0-Sa0', 'N-Sa0-Sa1-Sb0-Sb1']), ('Sa1', ['IN', 'N-Sa0-Sa1-Sb0-Sb1']), ('Sb0', ['N-Sa0-Sa1-Sb0-Sb1', 'OUT']), ('Sb1', ['N-Sa0-Sa1-Sb0-Sb1', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)]]', 'y': '[[v_11(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-200202200101/(10000110000050*Cout), -2000002/(200002200001*Cout)], [-1000001/1000011000005, -1000006/1000011000005]]', 'b': '[[2000000/(200002200001*Cout)], [-1/200002200001]]', 'c': '[[200000200000/200002200001, -1000001/200002200001], [0, -1], [200000/200002200001, -1/200002200001], [0, 0], [1, 0]]', 'd': '[[1000000/200002200001], [0], [200002000000/200002200001], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)]]', 'y': '[[v_11(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1051061/(52500550*Cout), -11/(1050011*Cout)], [-11/10500110, -500011/10500110]]', 'b': '[[10/(1050011*Cout)], [-50000/1050011]]', 'c': '[[11/1050011, -550000/1050011], [0, -1], [1/1050011, -50000/1050011], [0, 0], [1, 0]]', 'd': '[[500000/1050011], [0], [1000010/1050011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '0', '9'], 'net_list': [['Sa0', 'IN', '11'], ['Sb0', 'OUT', '11'], ['C0', '0', '9'], ['Sa1', '9', '11'], ['Sb1', '11', 'OUT']]}
['VIN - Sa - Sb - VOUT', 'VIN - Sa - Sb - VOUT', 'VIN - Sa - Sa - C - GND', 'VOUT - Sb - Sa - C - GND', 'VOUT - Sb - Sa - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-Sa0']), ('Sa0', ['N-C0-Sa0', 'N-Sa0-Sa1-Sb0-Sb1']), ('Sa1', ['IN', 'N-Sa0-Sa1-Sb0-Sb1']), ('Sb0', ['N-Sa0-Sa1-Sb0-Sb1', 'OUT']), ('Sb1', ['N-Sa0-Sa1-Sb0-Sb1', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)]]', 'y': '[[v_11(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-200202200101/(10000110000050*Cout), -2000002/(200002200001*Cout)], [-1000001/1000011000005, -1000006/1000011000005]]', 'b': '[[2000000/(200002200001*Cout)], [-1/200002200001]]', 'c': '[[200000200000/200002200001, -1000001/200002200001], [0, -1], [200000/200002200001, -1/200002200001], [0, 0], [1, 0]]', 'd': '[[1000000/200002200001], [0], [200002000000/200002200001], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)]]', 'y': '[[v_11(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1051061/(52500550*Cout), -11/(1050011*Cout)], [-11/10500110, -500011/10500110]]', 'b': '[[10/(1050011*Cout)], [-50000/1050011]]', 'c': '[[11/1050011, -550000/1050011], [0, -1], [1/1050011, -50000/1050011], [0, 0], [1, 0]]', 'd': '[[500000/1050011], [0], [1000010/1050011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '0', '9'], 'net_list': [['Sa0', 'IN', '11'], ['Sb0', 'OUT', '11'], ['C0', '0', '9'], ['Sa1', '9', '11'], ['Sb1', '11', 'OUT']]}
['VIN - Sa - Sb - VOUT', 'VIN - Sa - Sb - VOUT', 'VIN - Sa - Sa - C - GND', 'VOUT - Sb - Sa - C - GND', 'VOUT - Sb - Sa - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-Sa0']), ('Sa0', ['N-C0-Sa0', 'N-Sa0-Sa1-Sb0-Sb1']), ('Sa1', ['IN', 'N-Sa0-Sa1-Sb0-Sb1']), ('Sb0', ['N-Sa0-Sa1-Sb0-Sb1', 'OUT']), ('Sb1', ['N-Sa0-Sa1-Sb0-Sb1', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)]]', 'y': '[[v_11(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-200202200101/(10000110000050*Cout), -2000002/(200002200001*Cout)], [-1000001/1000011000005, -1000006/1000011000005]]', 'b': '[[2000000/(200002200001*Cout)], [-1/200002200001]]', 'c': '[[200000200000/200002200001, -1000001/200002200001], [0, -1], [200000/200002200001, -1/200002200001], [0, 0], [1, 0]]', 'd': '[[1000000/200002200001], [0], [200002000000/200002200001], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)]]', 'y': '[[v_11(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1051061/(52500550*Cout), -11/(1050011*Cout)], [-11/10500110, -500011/10500110]]', 'b': '[[10/(1050011*Cout)], [-50000/1050011]]', 'c': '[[11/1050011, -550000/1050011], [0, -1], [1/1050011, -50000/1050011], [0, 0], [1, 0]]', 'd': '[[500000/1050011], [0], [1000010/1050011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '0', '9'], 'net_list': [['Sa0', 'IN', '11'], ['Sb0', 'OUT', '11'], ['C0', '0', '9'], ['Sa1', '9', '11'], ['Sb1', '11', 'OUT']]}
['VIN - Sa - Sb - VOUT', 'VIN - Sa - Sb - VOUT', 'VIN - Sa - Sa - C - GND', 'VOUT - Sb - Sa - C - GND', 'VOUT - Sb - Sa - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-Sa0']), ('Sa0', ['N-C0-Sa0', 'N-Sa0-Sa1-Sb0-Sb1']), ('Sa1', ['IN', 'N-Sa0-Sa1-Sb0-Sb1']), ('Sb0', ['N-Sa0-Sa1-Sb0-Sb1', 'OUT']), ('Sb1', ['N-Sa0-Sa1-Sb0-Sb1', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)]]', 'y': '[[v_11(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-200202200101/(10000110000050*Cout), -2000002/(200002200001*Cout)], [-1000001/1000011000005, -1000006/1000011000005]]', 'b': '[[2000000/(200002200001*Cout)], [-1/200002200001]]', 'c': '[[200000200000/200002200001, -1000001/200002200001], [0, -1], [200000/200002200001, -1/200002200001], [0, 0], [1, 0]]', 'd': '[[1000000/200002200001], [0], [200002000000/200002200001], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)]]', 'y': '[[v_11(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1051061/(52500550*Cout), -11/(1050011*Cout)], [-11/10500110, -500011/10500110]]', 'b': '[[10/(1050011*Cout)], [-50000/1050011]]', 'c': '[[11/1050011, -550000/1050011], [0, -1], [1/1050011, -50000/1050011], [0, 0], [1, 0]]', 'd': '[[500000/1050011], [0], [1000010/1050011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '0', '9'], 'net_list': [['Sa0', 'IN', '11'], ['Sb0', 'OUT', '11'], ['C0', '0', '9'], ['Sa1', '9', '11'], ['Sb1', '11', 'OUT']]}
['VIN - Sa - Sb - VOUT', 'VIN - Sa - Sb - VOUT', 'VIN - Sa - Sa - C - GND', 'VOUT - Sb - Sa - C - GND', 'VOUT - Sb - Sa - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-Sa0']), ('Sa0', ['N-C0-Sa0', 'N-Sa0-Sa1-Sb0-Sb1']), ('Sa1', ['IN', 'N-Sa0-Sa1-Sb0-Sb1']), ('Sb0', ['N-Sa0-Sa1-Sb0-Sb1', 'OUT']), ('Sb1', ['N-Sa0-Sa1-Sb0-Sb1', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)]]', 'y': '[[v_11(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-200202200101/(10000110000050*Cout), -2000002/(200002200001*Cout)], [-1000001/1000011000005, -1000006/1000011000005]]', 'b': '[[2000000/(200002200001*Cout)], [-1/200002200001]]', 'c': '[[200000200000/200002200001, -1000001/200002200001], [0, -1], [200000/200002200001, -1/200002200001], [0, 0], [1, 0]]', 'd': '[[1000000/200002200001], [0], [200002000000/200002200001], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)]]', 'y': '[[v_11(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1051061/(52500550*Cout), -11/(1050011*Cout)], [-11/10500110, -500011/10500110]]', 'b': '[[10/(1050011*Cout)], [-50000/1050011]]', 'c': '[[11/1050011, -550000/1050011], [0, -1], [1/1050011, -50000/1050011], [0, 0], [1, 0]]', 'd': '[[500000/1050011], [0], [1000010/1050011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '0', '9'], 'net_list': [['Sa0', 'IN', '11'], ['Sb0', 'OUT', '11'], ['C0', '0', '9'], ['Sa1', '9', '11'], ['Sb1', '11', 'OUT']]}
has to be unconnected
has to be unconnected
['VIN - C - Sb - C - VOUT', 'VIN - C - Sa - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VIN - Sb - C - Sb - GND', 'VIN - Sb - C - Sa - GND', 'VOUT - C - Sb - GND', 'VOUT - C - Sa - GND', 'VOUT - Sb - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-Sa0-Sb1', 'OUT']), ('C1', ['0', 'IN']), ('Sa0', ['0', 'N-C0-Sa0-Sb1']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-C0-Sa0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-202001/(100000*Cout), -1/Cout, 100001/(100000*Cout)], [-1/10, -11/10, 0], [100001/1000000, 0, -100001/1000000]]', 'b': '[[0], [-1], [0]]', 'c': '[[1, 0, -1], [0, -1, 0], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-51001/(50000*Cout), -1/(100000*Cout), 100001/(100000*Cout)], [-1/1000000, -1000001/1000000, 0], [100001/1000000, 0, -100001/1000000]]', 'b': '[[0], [-1], [0]]', 'c': '[[1, 0, -1], [0, -1, 0], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Rb1', 'Ra1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', '12', '0'], ['Sb0', '0', '12'], ['C0', '0', 'IN'], ['Sb1', 'IN', 'OUT'], ['C1', 'OUT', '12']]}
['VIN - C - Sb - C - VOUT', 'VIN - C - Sa - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VIN - Sb - C - Sb - GND', 'VIN - Sb - C - Sa - GND', 'VOUT - C - Sb - GND', 'VOUT - C - Sa - GND', 'VOUT - Sb - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-Sa0-Sb1', 'OUT']), ('C1', ['0', 'IN']), ('Sa0', ['0', 'N-C0-Sa0-Sb1']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-C0-Sa0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-202001/(100000*Cout), -1/Cout, 100001/(100000*Cout)], [-1/10, -11/10, 0], [100001/1000000, 0, -100001/1000000]]', 'b': '[[0], [-1], [0]]', 'c': '[[1, 0, -1], [0, -1, 0], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-51001/(50000*Cout), -1/(100000*Cout), 100001/(100000*Cout)], [-1/1000000, -1000001/1000000, 0], [100001/1000000, 0, -100001/1000000]]', 'b': '[[0], [-1], [0]]', 'c': '[[1, 0, -1], [0, -1, 0], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Rb1', 'Ra1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', '12', '0'], ['Sb0', '0', '12'], ['C0', '0', 'IN'], ['Sb1', 'IN', 'OUT'], ['C1', 'OUT', '12']]}
['VIN - C - Sb - C - VOUT', 'VIN - C - Sa - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VIN - Sb - C - Sb - GND', 'VIN - Sb - C - Sa - GND', 'VOUT - C - Sb - GND', 'VOUT - C - Sa - GND', 'VOUT - Sb - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-Sa0-Sb1', 'OUT']), ('C1', ['0', 'IN']), ('Sa0', ['0', 'N-C0-Sa0-Sb1']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-C0-Sa0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-202001/(100000*Cout), -1/Cout, 100001/(100000*Cout)], [-1/10, -11/10, 0], [100001/1000000, 0, -100001/1000000]]', 'b': '[[0], [-1], [0]]', 'c': '[[1, 0, -1], [0, -1, 0], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-51001/(50000*Cout), -1/(100000*Cout), 100001/(100000*Cout)], [-1/1000000, -1000001/1000000, 0], [100001/1000000, 0, -100001/1000000]]', 'b': '[[0], [-1], [0]]', 'c': '[[1, 0, -1], [0, -1, 0], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Rb1', 'Ra1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', '12', '0'], ['Sb0', '0', '12'], ['C0', '0', 'IN'], ['Sb1', 'IN', 'OUT'], ['C1', 'OUT', '12']]}
['VIN - C - Sb - C - VOUT', 'VIN - C - Sa - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VIN - Sb - C - Sb - GND', 'VIN - Sb - C - Sa - GND', 'VOUT - C - Sb - GND', 'VOUT - C - Sa - GND', 'VOUT - Sb - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-Sa0-Sb1', 'OUT']), ('C1', ['0', 'IN']), ('Sa0', ['0', 'N-C0-Sa0-Sb1']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-C0-Sa0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-202001/(100000*Cout), -1/Cout, 100001/(100000*Cout)], [-1/10, -11/10, 0], [100001/1000000, 0, -100001/1000000]]', 'b': '[[0], [-1], [0]]', 'c': '[[1, 0, -1], [0, -1, 0], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-51001/(50000*Cout), -1/(100000*Cout), 100001/(100000*Cout)], [-1/1000000, -1000001/1000000, 0], [100001/1000000, 0, -100001/1000000]]', 'b': '[[0], [-1], [0]]', 'c': '[[1, 0, -1], [0, -1, 0], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Rb1', 'Ra1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', '12', '0'], ['Sb0', '0', '12'], ['C0', '0', 'IN'], ['Sb1', 'IN', 'OUT'], ['C1', 'OUT', '12']]}
['VIN - C - Sb - C - VOUT', 'VIN - C - Sa - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VIN - Sb - C - Sb - GND', 'VIN - Sb - C - Sa - GND', 'VOUT - C - Sb - GND', 'VOUT - C - Sa - GND', 'VOUT - Sb - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-Sa0-Sb1', 'OUT']), ('C1', ['0', 'IN']), ('Sa0', ['0', 'N-C0-Sa0-Sb1']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-C0-Sa0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-202001/(100000*Cout), -1/Cout, 100001/(100000*Cout)], [-1/10, -11/10, 0], [100001/1000000, 0, -100001/1000000]]', 'b': '[[0], [-1], [0]]', 'c': '[[1, 0, -1], [0, -1, 0], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-51001/(50000*Cout), -1/(100000*Cout), 100001/(100000*Cout)], [-1/1000000, -1000001/1000000, 0], [100001/1000000, 0, -100001/1000000]]', 'b': '[[0], [-1], [0]]', 'c': '[[1, 0, -1], [0, -1, 0], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Rb1', 'Ra1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', '12', '0'], ['Sb0', '0', '12'], ['C0', '0', 'IN'], ['Sb1', 'IN', 'OUT'], ['C1', 'OUT', '12']]}
has to be unconnected
has to be unconnected
['VIN - L - C - VOUT', 'VIN - L - L - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - L - Sa - Sb - GND', 'VOUT - L - L - Sa - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-L0-L1', 'OUT']), ('L0', ['N-C0-L0-L1', 'OUT']), ('L1', ['IN', 'N-C0-L0-L1']), ('Sa0', ['IN', 'N-Sa0-Sb0']), ('Sb0', ['0', 'N-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_6(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001/100001100, 0, -1/100, 1/100], [0, 0, 0, 1/100], [1/Cout, 0, -1/(50*Cout), 0], [-1/10, -1/10, 0, 0]]', 'b': '[[100001/10000110], [0], [0], [0]]', 'c': '[[0, 0, 1, -1], [-1/1000011, 0, 0, 0], [-100001/1000011, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [10/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_6(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001/100001100, 0, -1/100, 1/100], [0, 0, 0, 1/100], [1/Cout, 0, -1/(50*Cout), 0], [-1/10, -1/10, 0, 0]]', 'b': '[[100001/10000110], [0], [0], [0]]', 'c': '[[0, 0, 1, -1], [-100000/1000011, 0, 0, 0], [-100001/1000011, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '6', '0', '12'], 'net_list': [['Sa0', 'IN', '6'], ['Sb0', '0', '6'], ['L0', 'IN', '12'], ['C0', 'OUT', '12'], ['L1', 'OUT', '12']]}
['VIN - L - C - VOUT', 'VIN - L - L - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - L - Sa - Sb - GND', 'VOUT - L - L - Sa - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-L0-L1', 'OUT']), ('L0', ['N-C0-L0-L1', 'OUT']), ('L1', ['IN', 'N-C0-L0-L1']), ('Sa0', ['IN', 'N-Sa0-Sb0']), ('Sb0', ['0', 'N-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_6(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001/100001100, 0, -1/100, 1/100], [0, 0, 0, 1/100], [1/Cout, 0, -1/(50*Cout), 0], [-1/10, -1/10, 0, 0]]', 'b': '[[100001/10000110], [0], [0], [0]]', 'c': '[[0, 0, 1, -1], [-1/1000011, 0, 0, 0], [-100001/1000011, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [10/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_6(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001/100001100, 0, -1/100, 1/100], [0, 0, 0, 1/100], [1/Cout, 0, -1/(50*Cout), 0], [-1/10, -1/10, 0, 0]]', 'b': '[[100001/10000110], [0], [0], [0]]', 'c': '[[0, 0, 1, -1], [-100000/1000011, 0, 0, 0], [-100001/1000011, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '6', '0', '12'], 'net_list': [['Sa0', 'IN', '6'], ['Sb0', '0', '6'], ['L0', 'IN', '12'], ['C0', 'OUT', '12'], ['L1', 'OUT', '12']]}
['VIN - L - C - VOUT', 'VIN - L - L - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - L - Sa - Sb - GND', 'VOUT - L - L - Sa - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-L0-L1', 'OUT']), ('L0', ['N-C0-L0-L1', 'OUT']), ('L1', ['IN', 'N-C0-L0-L1']), ('Sa0', ['IN', 'N-Sa0-Sb0']), ('Sb0', ['0', 'N-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_6(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001/100001100, 0, -1/100, 1/100], [0, 0, 0, 1/100], [1/Cout, 0, -1/(50*Cout), 0], [-1/10, -1/10, 0, 0]]', 'b': '[[100001/10000110], [0], [0], [0]]', 'c': '[[0, 0, 1, -1], [-1/1000011, 0, 0, 0], [-100001/1000011, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [10/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_6(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001/100001100, 0, -1/100, 1/100], [0, 0, 0, 1/100], [1/Cout, 0, -1/(50*Cout), 0], [-1/10, -1/10, 0, 0]]', 'b': '[[100001/10000110], [0], [0], [0]]', 'c': '[[0, 0, 1, -1], [-100000/1000011, 0, 0, 0], [-100001/1000011, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '6', '0', '12'], 'net_list': [['Sa0', 'IN', '6'], ['Sb0', '0', '6'], ['L0', 'IN', '12'], ['C0', 'OUT', '12'], ['L1', 'OUT', '12']]}
['VIN - L - C - VOUT', 'VIN - L - L - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - L - Sa - Sb - GND', 'VOUT - L - L - Sa - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-L0-L1', 'OUT']), ('L0', ['N-C0-L0-L1', 'OUT']), ('L1', ['IN', 'N-C0-L0-L1']), ('Sa0', ['IN', 'N-Sa0-Sb0']), ('Sb0', ['0', 'N-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_6(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001/100001100, 0, -1/100, 1/100], [0, 0, 0, 1/100], [1/Cout, 0, -1/(50*Cout), 0], [-1/10, -1/10, 0, 0]]', 'b': '[[100001/10000110], [0], [0], [0]]', 'c': '[[0, 0, 1, -1], [-1/1000011, 0, 0, 0], [-100001/1000011, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [10/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_6(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001/100001100, 0, -1/100, 1/100], [0, 0, 0, 1/100], [1/Cout, 0, -1/(50*Cout), 0], [-1/10, -1/10, 0, 0]]', 'b': '[[100001/10000110], [0], [0], [0]]', 'c': '[[0, 0, 1, -1], [-100000/1000011, 0, 0, 0], [-100001/1000011, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '6', '0', '12'], 'net_list': [['Sa0', 'IN', '6'], ['Sb0', '0', '6'], ['L0', 'IN', '12'], ['C0', 'OUT', '12'], ['L1', 'OUT', '12']]}
['VIN - L - C - VOUT', 'VIN - L - L - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - L - Sa - Sb - GND', 'VOUT - L - L - Sa - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-L0-L1', 'OUT']), ('L0', ['N-C0-L0-L1', 'OUT']), ('L1', ['IN', 'N-C0-L0-L1']), ('Sa0', ['IN', 'N-Sa0-Sb0']), ('Sb0', ['0', 'N-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_6(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001/100001100, 0, -1/100, 1/100], [0, 0, 0, 1/100], [1/Cout, 0, -1/(50*Cout), 0], [-1/10, -1/10, 0, 0]]', 'b': '[[100001/10000110], [0], [0], [0]]', 'c': '[[0, 0, 1, -1], [-1/1000011, 0, 0, 0], [-100001/1000011, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [10/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_6(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001/100001100, 0, -1/100, 1/100], [0, 0, 0, 1/100], [1/Cout, 0, -1/(50*Cout), 0], [-1/10, -1/10, 0, 0]]', 'b': '[[100001/10000110], [0], [0], [0]]', 'c': '[[0, 0, 1, -1], [-100000/1000011, 0, 0, 0], [-100001/1000011, 0, 0, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '6', '0', '12'], 'net_list': [['Sa0', 'IN', '6'], ['Sb0', '0', '6'], ['L0', 'IN', '12'], ['C0', 'OUT', '12'], ['L1', 'OUT', '12']]}
has to be unconnected
has to be unconnected
['VIN - Sa - L - VOUT', 'VIN - Sa - L - VOUT', 'VIN - Sb - VOUT', 'VIN - Sa - Sb - GND', 'VIN - Sb - L - Sb - GND', 'VIN - Sb - L - Sb - GND', 'VOUT - L - Sb - GND', 'VOUT - L - Sb - GND', 'VOUT - Sb - Sa - Sb - GND']

 PCC-36504
1
OrderedDict([('L0', ['N-L0-L1-Sa0-Sb1', 'OUT']), ('L1', ['N-L0-L1-Sa0-Sb1', 'OUT']), ('Sa0', ['IN', 'N-L0-L1-Sa0-Sb1']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-L0-L1-Sa0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/110001200, -1100001/110001200, 1100011/110001200], [-1100001/110001200, -1100001/110001200, 1100011/110001200], [-1100011/(1100012*Cout), -1100011/(1100012*Cout), -25550281/(27500300*Cout)]]', 'b': '[[-1/11000120], [-1/11000120], [500005/(550006*Cout)]]', 'c': '[[1100001/1100012, 1100001/1100012, 1/1100012], [1/1100012, 1/1100012, 100001/1100012], [0, 0, 0], [0, 0, 1]]', 'd': '[[5/550006], [500005/550006], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001000/100001200001, -1100001000/100001200001, 100001100001/10000120000100], [-1100001000/100001200001, -1100001000/100001200001, 100001100001/10000120000100], [-100001100001/(100001200001*Cout), -100001100001/(100001200001*Cout), -100051200551/(5000060000050*Cout)]]', 'b': '[[-1000000000/100001200001], [-1000000000/100001200001], [1000010/(100001200001*Cout)]]', 'c': '[[110000100000/100001200001, 110000100000/100001200001, 100000/100001200001], [10000000000/100001200001, 10000000000/100001200001, 100001/100001200001], [0, 0, 0], [0, 0, 1]]', 'd': '[[100000000000/100001200001], [100001000000/100001200001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', '12', 'IN'], ['Sb0', '0', '12'], ['L0', 'OUT', '12'], ['Sb1', 'IN', 'OUT'], ['L1', 'OUT', '12']]}
['VIN - Sa - L - VOUT', 'VIN - Sa - L - VOUT', 'VIN - Sb - VOUT', 'VIN - Sa - Sb - GND', 'VIN - Sb - L - Sb - GND', 'VIN - Sb - L - Sb - GND', 'VOUT - L - Sb - GND', 'VOUT - L - Sb - GND', 'VOUT - Sb - Sa - Sb - GND']

 PCC-36504
1
OrderedDict([('L0', ['N-L0-L1-Sa0-Sb1', 'OUT']), ('L1', ['N-L0-L1-Sa0-Sb1', 'OUT']), ('Sa0', ['IN', 'N-L0-L1-Sa0-Sb1']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-L0-L1-Sa0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/110001200, -1100001/110001200, 1100011/110001200], [-1100001/110001200, -1100001/110001200, 1100011/110001200], [-1100011/(1100012*Cout), -1100011/(1100012*Cout), -25550281/(27500300*Cout)]]', 'b': '[[-1/11000120], [-1/11000120], [500005/(550006*Cout)]]', 'c': '[[1100001/1100012, 1100001/1100012, 1/1100012], [1/1100012, 1/1100012, 100001/1100012], [0, 0, 0], [0, 0, 1]]', 'd': '[[5/550006], [500005/550006], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001000/100001200001, -1100001000/100001200001, 100001100001/10000120000100], [-1100001000/100001200001, -1100001000/100001200001, 100001100001/10000120000100], [-100001100001/(100001200001*Cout), -100001100001/(100001200001*Cout), -100051200551/(5000060000050*Cout)]]', 'b': '[[-1000000000/100001200001], [-1000000000/100001200001], [1000010/(100001200001*Cout)]]', 'c': '[[110000100000/100001200001, 110000100000/100001200001, 100000/100001200001], [10000000000/100001200001, 10000000000/100001200001, 100001/100001200001], [0, 0, 0], [0, 0, 1]]', 'd': '[[100000000000/100001200001], [100001000000/100001200001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', '12', 'IN'], ['Sb0', '0', '12'], ['L0', 'OUT', '12'], ['Sb1', 'IN', 'OUT'], ['L1', 'OUT', '12']]}
['VIN - Sa - L - VOUT', 'VIN - Sa - L - VOUT', 'VIN - Sb - VOUT', 'VIN - Sa - Sb - GND', 'VIN - Sb - L - Sb - GND', 'VIN - Sb - L - Sb - GND', 'VOUT - L - Sb - GND', 'VOUT - L - Sb - GND', 'VOUT - Sb - Sa - Sb - GND']

 PCC-36504
1
OrderedDict([('L0', ['N-L0-L1-Sa0-Sb1', 'OUT']), ('L1', ['N-L0-L1-Sa0-Sb1', 'OUT']), ('Sa0', ['IN', 'N-L0-L1-Sa0-Sb1']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-L0-L1-Sa0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/110001200, -1100001/110001200, 1100011/110001200], [-1100001/110001200, -1100001/110001200, 1100011/110001200], [-1100011/(1100012*Cout), -1100011/(1100012*Cout), -25550281/(27500300*Cout)]]', 'b': '[[-1/11000120], [-1/11000120], [500005/(550006*Cout)]]', 'c': '[[1100001/1100012, 1100001/1100012, 1/1100012], [1/1100012, 1/1100012, 100001/1100012], [0, 0, 0], [0, 0, 1]]', 'd': '[[5/550006], [500005/550006], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001000/100001200001, -1100001000/100001200001, 100001100001/10000120000100], [-1100001000/100001200001, -1100001000/100001200001, 100001100001/10000120000100], [-100001100001/(100001200001*Cout), -100001100001/(100001200001*Cout), -100051200551/(5000060000050*Cout)]]', 'b': '[[-1000000000/100001200001], [-1000000000/100001200001], [1000010/(100001200001*Cout)]]', 'c': '[[110000100000/100001200001, 110000100000/100001200001, 100000/100001200001], [10000000000/100001200001, 10000000000/100001200001, 100001/100001200001], [0, 0, 0], [0, 0, 1]]', 'd': '[[100000000000/100001200001], [100001000000/100001200001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', '12', 'IN'], ['Sb0', '0', '12'], ['L0', 'OUT', '12'], ['Sb1', 'IN', 'OUT'], ['L1', 'OUT', '12']]}
['VIN - Sa - L - VOUT', 'VIN - Sa - L - VOUT', 'VIN - Sb - VOUT', 'VIN - Sa - Sb - GND', 'VIN - Sb - L - Sb - GND', 'VIN - Sb - L - Sb - GND', 'VOUT - L - Sb - GND', 'VOUT - L - Sb - GND', 'VOUT - Sb - Sa - Sb - GND']

 PCC-36504
1
OrderedDict([('L0', ['N-L0-L1-Sa0-Sb1', 'OUT']), ('L1', ['N-L0-L1-Sa0-Sb1', 'OUT']), ('Sa0', ['IN', 'N-L0-L1-Sa0-Sb1']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-L0-L1-Sa0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/110001200, -1100001/110001200, 1100011/110001200], [-1100001/110001200, -1100001/110001200, 1100011/110001200], [-1100011/(1100012*Cout), -1100011/(1100012*Cout), -25550281/(27500300*Cout)]]', 'b': '[[-1/11000120], [-1/11000120], [500005/(550006*Cout)]]', 'c': '[[1100001/1100012, 1100001/1100012, 1/1100012], [1/1100012, 1/1100012, 100001/1100012], [0, 0, 0], [0, 0, 1]]', 'd': '[[5/550006], [500005/550006], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001000/100001200001, -1100001000/100001200001, 100001100001/10000120000100], [-1100001000/100001200001, -1100001000/100001200001, 100001100001/10000120000100], [-100001100001/(100001200001*Cout), -100001100001/(100001200001*Cout), -100051200551/(5000060000050*Cout)]]', 'b': '[[-1000000000/100001200001], [-1000000000/100001200001], [1000010/(100001200001*Cout)]]', 'c': '[[110000100000/100001200001, 110000100000/100001200001, 100000/100001200001], [10000000000/100001200001, 10000000000/100001200001, 100001/100001200001], [0, 0, 0], [0, 0, 1]]', 'd': '[[100000000000/100001200001], [100001000000/100001200001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', '12', 'IN'], ['Sb0', '0', '12'], ['L0', 'OUT', '12'], ['Sb1', 'IN', 'OUT'], ['L1', 'OUT', '12']]}
['VIN - Sa - L - VOUT', 'VIN - Sa - L - VOUT', 'VIN - Sb - VOUT', 'VIN - Sa - Sb - GND', 'VIN - Sb - L - Sb - GND', 'VIN - Sb - L - Sb - GND', 'VOUT - L - Sb - GND', 'VOUT - L - Sb - GND', 'VOUT - Sb - Sa - Sb - GND']

 PCC-36504
1
OrderedDict([('L0', ['N-L0-L1-Sa0-Sb1', 'OUT']), ('L1', ['N-L0-L1-Sa0-Sb1', 'OUT']), ('Sa0', ['IN', 'N-L0-L1-Sa0-Sb1']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-L0-L1-Sa0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/110001200, -1100001/110001200, 1100011/110001200], [-1100001/110001200, -1100001/110001200, 1100011/110001200], [-1100011/(1100012*Cout), -1100011/(1100012*Cout), -25550281/(27500300*Cout)]]', 'b': '[[-1/11000120], [-1/11000120], [500005/(550006*Cout)]]', 'c': '[[1100001/1100012, 1100001/1100012, 1/1100012], [1/1100012, 1/1100012, 100001/1100012], [0, 0, 0], [0, 0, 1]]', 'd': '[[5/550006], [500005/550006], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001000/100001200001, -1100001000/100001200001, 100001100001/10000120000100], [-1100001000/100001200001, -1100001000/100001200001, 100001100001/10000120000100], [-100001100001/(100001200001*Cout), -100001100001/(100001200001*Cout), -100051200551/(5000060000050*Cout)]]', 'b': '[[-1000000000/100001200001], [-1000000000/100001200001], [1000010/(100001200001*Cout)]]', 'c': '[[110000100000/100001200001, 110000100000/100001200001, 100000/100001200001], [10000000000/100001200001, 10000000000/100001200001, 100001/100001200001], [0, 0, 0], [0, 0, 1]]', 'd': '[[100000000000/100001200001], [100001000000/100001200001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', '12', 'IN'], ['Sb0', '0', '12'], ['L0', 'OUT', '12'], ['Sb1', 'IN', 'OUT'], ['L1', 'OUT', '12']]}
['VIN - Sb - Sa - VOUT', 'VIN - Sb - L - VOUT', 'VIN - Sb - Sb - Sa - GND', 'VOUT - Sa - Sb - Sa - GND', 'VOUT - L - Sb - Sa - GND']

 PCC-36504
1
OrderedDict([('L0', ['N-L0-Sa1-Sb0-Sb1', 'OUT']), ('Sa0', ['0', 'N-Sa0-Sb0']), ('Sa1', ['N-L0-Sa1-Sb0-Sb1', 'OUT']), ('Sb0', ['N-L0-Sa1-Sb0-Sb1', 'N-Sa0-Sb0']), ('Sb1', ['IN', 'N-L0-Sa1-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001000/9091200001, 90911000/9091200001], [-9091100000/(9091200001*Cout), -9095745551/(454560000050*Cout)]]', 'b': '[[-90910000/9091200001], [90910/(9091200001*Cout)]]', 'c': '[[10000100000/9091200001, 100001/9091200001], [10000000000/9091200001, 100000/9091200001], [909100000/9091200001, 9091/9091200001], [0, 0], [0, 1]]', 'd': '[[9091000000/9091200001], [100000000000/100003200011], [100003000010/100003200011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001100001/10000310001200, 2000011/10000310001200], [-2000011/(100003100012*Cout), -50051550281/(2500077500300*Cout)]]', 'b': '[[-100001/1000031000120], [500005/(50001550006*Cout)]]', 'c': '[[100001100001/100003100012, 100001100001/100003100012], [1000001/100003100012, 1000001/100003100012], [100001/100003100012, 100001/100003100012], [0, 0], [0, 1]]', 'd': '[[500005/50001550006], [5/50001550006], [50001500005/50001550006], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '0', '12'], 'net_list': [['Sa0', 'OUT', '11'], ['Sb0', 'IN', '11'], ['L0', 'OUT', '11'], ['Sa1', '0', '12'], ['Sb1', '11', '12']]}
['VIN - Sb - Sa - VOUT', 'VIN - Sb - L - VOUT', 'VIN - Sb - Sb - Sa - GND', 'VOUT - Sa - Sb - Sa - GND', 'VOUT - L - Sb - Sa - GND']

 PCC-36504
1
OrderedDict([('L0', ['N-L0-Sa1-Sb0-Sb1', 'OUT']), ('Sa0', ['0', 'N-Sa0-Sb0']), ('Sa1', ['N-L0-Sa1-Sb0-Sb1', 'OUT']), ('Sb0', ['N-L0-Sa1-Sb0-Sb1', 'N-Sa0-Sb0']), ('Sb1', ['IN', 'N-L0-Sa1-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001000/9091200001, 90911000/9091200001], [-9091100000/(9091200001*Cout), -9095745551/(454560000050*Cout)]]', 'b': '[[-90910000/9091200001], [90910/(9091200001*Cout)]]', 'c': '[[10000100000/9091200001, 100001/9091200001], [10000000000/9091200001, 100000/9091200001], [909100000/9091200001, 9091/9091200001], [0, 0], [0, 1]]', 'd': '[[9091000000/9091200001], [100000000000/100003200011], [100003000010/100003200011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001100001/10000310001200, 2000011/10000310001200], [-2000011/(100003100012*Cout), -50051550281/(2500077500300*Cout)]]', 'b': '[[-100001/1000031000120], [500005/(50001550006*Cout)]]', 'c': '[[100001100001/100003100012, 100001100001/100003100012], [1000001/100003100012, 1000001/100003100012], [100001/100003100012, 100001/100003100012], [0, 0], [0, 1]]', 'd': '[[500005/50001550006], [5/50001550006], [50001500005/50001550006], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '0', '12'], 'net_list': [['Sa0', 'OUT', '11'], ['Sb0', 'IN', '11'], ['L0', 'OUT', '11'], ['Sa1', '0', '12'], ['Sb1', '11', '12']]}
['VIN - Sb - Sa - VOUT', 'VIN - Sb - L - VOUT', 'VIN - Sb - Sb - Sa - GND', 'VOUT - Sa - Sb - Sa - GND', 'VOUT - L - Sb - Sa - GND']

 PCC-36504
1
OrderedDict([('L0', ['N-L0-Sa1-Sb0-Sb1', 'OUT']), ('Sa0', ['0', 'N-Sa0-Sb0']), ('Sa1', ['N-L0-Sa1-Sb0-Sb1', 'OUT']), ('Sb0', ['N-L0-Sa1-Sb0-Sb1', 'N-Sa0-Sb0']), ('Sb1', ['IN', 'N-L0-Sa1-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001000/9091200001, 90911000/9091200001], [-9091100000/(9091200001*Cout), -9095745551/(454560000050*Cout)]]', 'b': '[[-90910000/9091200001], [90910/(9091200001*Cout)]]', 'c': '[[10000100000/9091200001, 100001/9091200001], [10000000000/9091200001, 100000/9091200001], [909100000/9091200001, 9091/9091200001], [0, 0], [0, 1]]', 'd': '[[9091000000/9091200001], [100000000000/100003200011], [100003000010/100003200011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001100001/10000310001200, 2000011/10000310001200], [-2000011/(100003100012*Cout), -50051550281/(2500077500300*Cout)]]', 'b': '[[-100001/1000031000120], [500005/(50001550006*Cout)]]', 'c': '[[100001100001/100003100012, 100001100001/100003100012], [1000001/100003100012, 1000001/100003100012], [100001/100003100012, 100001/100003100012], [0, 0], [0, 1]]', 'd': '[[500005/50001550006], [5/50001550006], [50001500005/50001550006], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '0', '12'], 'net_list': [['Sa0', 'OUT', '11'], ['Sb0', 'IN', '11'], ['L0', 'OUT', '11'], ['Sa1', '0', '12'], ['Sb1', '11', '12']]}
['VIN - Sb - Sa - VOUT', 'VIN - Sb - L - VOUT', 'VIN - Sb - Sb - Sa - GND', 'VOUT - Sa - Sb - Sa - GND', 'VOUT - L - Sb - Sa - GND']

 PCC-36504
1
OrderedDict([('L0', ['N-L0-Sa1-Sb0-Sb1', 'OUT']), ('Sa0', ['0', 'N-Sa0-Sb0']), ('Sa1', ['N-L0-Sa1-Sb0-Sb1', 'OUT']), ('Sb0', ['N-L0-Sa1-Sb0-Sb1', 'N-Sa0-Sb0']), ('Sb1', ['IN', 'N-L0-Sa1-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001000/9091200001, 90911000/9091200001], [-9091100000/(9091200001*Cout), -9095745551/(454560000050*Cout)]]', 'b': '[[-90910000/9091200001], [90910/(9091200001*Cout)]]', 'c': '[[10000100000/9091200001, 100001/9091200001], [10000000000/9091200001, 100000/9091200001], [909100000/9091200001, 9091/9091200001], [0, 0], [0, 1]]', 'd': '[[9091000000/9091200001], [100000000000/100003200011], [100003000010/100003200011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001100001/10000310001200, 2000011/10000310001200], [-2000011/(100003100012*Cout), -50051550281/(2500077500300*Cout)]]', 'b': '[[-100001/1000031000120], [500005/(50001550006*Cout)]]', 'c': '[[100001100001/100003100012, 100001100001/100003100012], [1000001/100003100012, 1000001/100003100012], [100001/100003100012, 100001/100003100012], [0, 0], [0, 1]]', 'd': '[[500005/50001550006], [5/50001550006], [50001500005/50001550006], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '0', '12'], 'net_list': [['Sa0', 'OUT', '11'], ['Sb0', 'IN', '11'], ['L0', 'OUT', '11'], ['Sa1', '0', '12'], ['Sb1', '11', '12']]}
['VIN - Sb - Sa - VOUT', 'VIN - Sb - L - VOUT', 'VIN - Sb - Sb - Sa - GND', 'VOUT - Sa - Sb - Sa - GND', 'VOUT - L - Sb - Sa - GND']

 PCC-36504
1
OrderedDict([('L0', ['N-L0-Sa1-Sb0-Sb1', 'OUT']), ('Sa0', ['0', 'N-Sa0-Sb0']), ('Sa1', ['N-L0-Sa1-Sb0-Sb1', 'OUT']), ('Sb0', ['N-L0-Sa1-Sb0-Sb1', 'N-Sa0-Sb0']), ('Sb1', ['IN', 'N-L0-Sa1-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001000/9091200001, 90911000/9091200001], [-9091100000/(9091200001*Cout), -9095745551/(454560000050*Cout)]]', 'b': '[[-90910000/9091200001], [90910/(9091200001*Cout)]]', 'c': '[[10000100000/9091200001, 100001/9091200001], [10000000000/9091200001, 100000/9091200001], [909100000/9091200001, 9091/9091200001], [0, 0], [0, 1]]', 'd': '[[9091000000/9091200001], [100000000000/100003200011], [100003000010/100003200011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001100001/10000310001200, 2000011/10000310001200], [-2000011/(100003100012*Cout), -50051550281/(2500077500300*Cout)]]', 'b': '[[-100001/1000031000120], [500005/(50001550006*Cout)]]', 'c': '[[100001100001/100003100012, 100001100001/100003100012], [1000001/100003100012, 1000001/100003100012], [100001/100003100012, 100001/100003100012], [0, 0], [0, 1]]', 'd': '[[500005/50001550006], [5/50001550006], [50001500005/50001550006], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '0', '12'], 'net_list': [['Sa0', 'OUT', '11'], ['Sb0', 'IN', '11'], ['L0', 'OUT', '11'], ['Sa1', '0', '12'], ['Sb1', '11', '12']]}
has to be unconnected
has to be unconnected
has to be unconnected
['VIN - C - Sa - VOUT', 'VIN - C - Sa - VOUT', 'VIN - Sa - Sa - VOUT', 'VIN - C - Sb - GND', 'VIN - C - Sb - GND', 'VIN - Sa - Sb - GND', 'VOUT - Sa - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'N-C0-C1-Sa0-Sa1-Sb0']), ('C1', ['IN', 'N-C0-C1-Sa0-Sa1-Sb0']), ('Sa0', ['IN', 'N-C0-C1-Sa0-Sa1-Sb0']), ('Sa1', ['N-C0-C1-Sa0-Sa1-Sb0', 'OUT']), ('Sb0', ['0', 'N-C0-C1-Sa0-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-36504 violations

['VIN - C - Sa - VOUT', 'VIN - C - Sa - VOUT', 'VIN - Sa - Sa - VOUT', 'VIN - C - Sb - GND', 'VIN - C - Sb - GND', 'VIN - Sa - Sb - GND', 'VOUT - Sa - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'N-C0-C1-Sa0-Sa1-Sb0']), ('C1', ['IN', 'N-C0-C1-Sa0-Sa1-Sb0']), ('Sa0', ['IN', 'N-C0-C1-Sa0-Sa1-Sb0']), ('Sa1', ['N-C0-C1-Sa0-Sa1-Sb0', 'OUT']), ('Sb0', ['0', 'N-C0-C1-Sa0-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - C - Sa - VOUT', 'VIN - C - Sa - VOUT', 'VIN - Sa - Sa - VOUT', 'VIN - C - Sb - GND', 'VIN - C - Sb - GND', 'VIN - Sa - Sb - GND', 'VOUT - Sa - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'N-C0-C1-Sa0-Sa1-Sb0']), ('C1', ['IN', 'N-C0-C1-Sa0-Sa1-Sb0']), ('Sa0', ['IN', 'N-C0-C1-Sa0-Sa1-Sb0']), ('Sa1', ['N-C0-C1-Sa0-Sa1-Sb0', 'OUT']), ('Sb0', ['0', 'N-C0-C1-Sa0-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - C - Sa - VOUT', 'VIN - C - Sa - VOUT', 'VIN - Sa - Sa - VOUT', 'VIN - C - Sb - GND', 'VIN - C - Sb - GND', 'VIN - Sa - Sb - GND', 'VOUT - Sa - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'N-C0-C1-Sa0-Sa1-Sb0']), ('C1', ['IN', 'N-C0-C1-Sa0-Sa1-Sb0']), ('Sa0', ['IN', 'N-C0-C1-Sa0-Sa1-Sb0']), ('Sa1', ['N-C0-C1-Sa0-Sa1-Sb0', 'OUT']), ('Sb0', ['0', 'N-C0-C1-Sa0-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - C - Sa - VOUT', 'VIN - C - Sa - VOUT', 'VIN - Sa - Sa - VOUT', 'VIN - C - Sb - GND', 'VIN - C - Sb - GND', 'VIN - Sa - Sb - GND', 'VOUT - Sa - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'N-C0-C1-Sa0-Sa1-Sb0']), ('C1', ['IN', 'N-C0-C1-Sa0-Sa1-Sb0']), ('Sa0', ['IN', 'N-C0-C1-Sa0-Sa1-Sb0']), ('Sa1', ['N-C0-C1-Sa0-Sa1-Sb0', 'OUT']), ('Sb0', ['0', 'N-C0-C1-Sa0-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sa - VOUT', 'VIN - L - Sa - Sb - VOUT', 'VIN - Sa - Sb - Sa - Sb - GND', 'VIN - L - Sb - GND', 'VOUT - Sb - Sa - Sb - GND', 'VOUT - Sa - L - Sb - GND']

 PCC-36504
1
OrderedDict([('L0', ['IN', 'N-L0-Sa0-Sb0']), ('Sa0', ['N-L0-Sa0-Sb0', 'N-Sa0-Sb1']), ('Sa1', ['IN', 'OUT']), ('Sb0', ['0', 'N-L0-Sa0-Sb0']), ('Sb1', ['N-Sa0-Sb1', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-110001300001/10000210000200, -899999/10000210000200], [899999/(100002100002*Cout), -25025525263/(1250026250025*Cout)]]', 'b': '[[10000/1000001], [10/(1000001*Cout)]]', 'c': '[[100001/100002, 1/100002], [1/100002, 100001/100002], [-100000/1000001, 1/1000001], [0, 0], [0, 1]]', 'd': '[[0], [0], [1000000/1000001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-110001300001/220001100, -899999/220001100], [899999/(2200011*Cout), -102201061/(110000550*Cout)]]', 'b': '[[1/110], [10/(11*Cout)]]', 'c': '[[10000100000/200001, 100000/200001], [10000000000/200001, 100001/200001], [-1/11, 1/11], [0, 0], [0, 1]]', 'd': '[[0], [0], [10/11], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '9', '12', '0'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', '9'], ['L0', 'IN', '12'], ['Sa1', '9', '12'], ['Sb1', '0', '12']]}
['VIN - Sa - VOUT', 'VIN - L - Sa - Sb - VOUT', 'VIN - Sa - Sb - Sa - Sb - GND', 'VIN - L - Sb - GND', 'VOUT - Sb - Sa - Sb - GND', 'VOUT - Sa - L - Sb - GND']

 PCC-36504
1
OrderedDict([('L0', ['IN', 'N-L0-Sa0-Sb0']), ('Sa0', ['N-L0-Sa0-Sb0', 'N-Sa0-Sb1']), ('Sa1', ['IN', 'OUT']), ('Sb0', ['0', 'N-L0-Sa0-Sb0']), ('Sb1', ['N-Sa0-Sb1', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-110001300001/10000210000200, -899999/10000210000200], [899999/(100002100002*Cout), -25025525263/(1250026250025*Cout)]]', 'b': '[[10000/1000001], [10/(1000001*Cout)]]', 'c': '[[100001/100002, 1/100002], [1/100002, 100001/100002], [-100000/1000001, 1/1000001], [0, 0], [0, 1]]', 'd': '[[0], [0], [1000000/1000001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-110001300001/220001100, -899999/220001100], [899999/(2200011*Cout), -102201061/(110000550*Cout)]]', 'b': '[[1/110], [10/(11*Cout)]]', 'c': '[[10000100000/200001, 100000/200001], [10000000000/200001, 100001/200001], [-1/11, 1/11], [0, 0], [0, 1]]', 'd': '[[0], [0], [10/11], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '9', '12', '0'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', '9'], ['L0', 'IN', '12'], ['Sa1', '9', '12'], ['Sb1', '0', '12']]}
['VIN - Sa - VOUT', 'VIN - L - Sa - Sb - VOUT', 'VIN - Sa - Sb - Sa - Sb - GND', 'VIN - L - Sb - GND', 'VOUT - Sb - Sa - Sb - GND', 'VOUT - Sa - L - Sb - GND']

 PCC-36504
1
OrderedDict([('L0', ['IN', 'N-L0-Sa0-Sb0']), ('Sa0', ['N-L0-Sa0-Sb0', 'N-Sa0-Sb1']), ('Sa1', ['IN', 'OUT']), ('Sb0', ['0', 'N-L0-Sa0-Sb0']), ('Sb1', ['N-Sa0-Sb1', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-110001300001/10000210000200, -899999/10000210000200], [899999/(100002100002*Cout), -25025525263/(1250026250025*Cout)]]', 'b': '[[10000/1000001], [10/(1000001*Cout)]]', 'c': '[[100001/100002, 1/100002], [1/100002, 100001/100002], [-100000/1000001, 1/1000001], [0, 0], [0, 1]]', 'd': '[[0], [0], [1000000/1000001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-110001300001/220001100, -899999/220001100], [899999/(2200011*Cout), -102201061/(110000550*Cout)]]', 'b': '[[1/110], [10/(11*Cout)]]', 'c': '[[10000100000/200001, 100000/200001], [10000000000/200001, 100001/200001], [-1/11, 1/11], [0, 0], [0, 1]]', 'd': '[[0], [0], [10/11], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '9', '12', '0'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', '9'], ['L0', 'IN', '12'], ['Sa1', '9', '12'], ['Sb1', '0', '12']]}
['VIN - Sa - VOUT', 'VIN - L - Sa - Sb - VOUT', 'VIN - Sa - Sb - Sa - Sb - GND', 'VIN - L - Sb - GND', 'VOUT - Sb - Sa - Sb - GND', 'VOUT - Sa - L - Sb - GND']

 PCC-36504
1
OrderedDict([('L0', ['IN', 'N-L0-Sa0-Sb0']), ('Sa0', ['N-L0-Sa0-Sb0', 'N-Sa0-Sb1']), ('Sa1', ['IN', 'OUT']), ('Sb0', ['0', 'N-L0-Sa0-Sb0']), ('Sb1', ['N-Sa0-Sb1', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-110001300001/10000210000200, -899999/10000210000200], [899999/(100002100002*Cout), -25025525263/(1250026250025*Cout)]]', 'b': '[[10000/1000001], [10/(1000001*Cout)]]', 'c': '[[100001/100002, 1/100002], [1/100002, 100001/100002], [-100000/1000001, 1/1000001], [0, 0], [0, 1]]', 'd': '[[0], [0], [1000000/1000001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-110001300001/220001100, -899999/220001100], [899999/(2200011*Cout), -102201061/(110000550*Cout)]]', 'b': '[[1/110], [10/(11*Cout)]]', 'c': '[[10000100000/200001, 100000/200001], [10000000000/200001, 100001/200001], [-1/11, 1/11], [0, 0], [0, 1]]', 'd': '[[0], [0], [10/11], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '9', '12', '0'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', '9'], ['L0', 'IN', '12'], ['Sa1', '9', '12'], ['Sb1', '0', '12']]}
['VIN - Sa - VOUT', 'VIN - L - Sa - Sb - VOUT', 'VIN - Sa - Sb - Sa - Sb - GND', 'VIN - L - Sb - GND', 'VOUT - Sb - Sa - Sb - GND', 'VOUT - Sa - L - Sb - GND']

 PCC-36504
1
OrderedDict([('L0', ['IN', 'N-L0-Sa0-Sb0']), ('Sa0', ['N-L0-Sa0-Sb0', 'N-Sa0-Sb1']), ('Sa1', ['IN', 'OUT']), ('Sb0', ['0', 'N-L0-Sa0-Sb0']), ('Sb1', ['N-Sa0-Sb1', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-110001300001/10000210000200, -899999/10000210000200], [899999/(100002100002*Cout), -25025525263/(1250026250025*Cout)]]', 'b': '[[10000/1000001], [10/(1000001*Cout)]]', 'c': '[[100001/100002, 1/100002], [1/100002, 100001/100002], [-100000/1000001, 1/1000001], [0, 0], [0, 1]]', 'd': '[[0], [0], [1000000/1000001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-110001300001/220001100, -899999/220001100], [899999/(2200011*Cout), -102201061/(110000550*Cout)]]', 'b': '[[1/110], [10/(11*Cout)]]', 'c': '[[10000100000/200001, 100000/200001], [10000000000/200001, 100001/200001], [-1/11, 1/11], [0, 0], [0, 1]]', 'd': '[[0], [0], [10/11], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '9', '12', '0'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', '9'], ['L0', 'IN', '12'], ['Sa1', '9', '12'], ['Sb1', '0', '12']]}
has to be unconnected
['VIN - Sb - VOUT', 'VIN - Sa - C - VOUT', 'VIN - Sa - L - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - C - GND', 'VIN - Sa - L - C - GND', 'VOUT - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'OUT']), ('C1', ['N-C1-L0-Sa0', 'OUT']), ('L0', ['N-C1-L0-Sa0', 'OUT']), ('Sa0', ['IN', 'N-C1-L0-Sa0']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-36504 violations

['VIN - Sb - VOUT', 'VIN - Sa - C - VOUT', 'VIN - Sa - L - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - C - GND', 'VIN - Sa - L - C - GND', 'VOUT - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'OUT']), ('C1', ['N-C1-L0-Sa0', 'OUT']), ('L0', ['N-C1-L0-Sa0', 'OUT']), ('Sa0', ['IN', 'N-C1-L0-Sa0']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sa - C - VOUT', 'VIN - Sa - L - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - C - GND', 'VIN - Sa - L - C - GND', 'VOUT - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'OUT']), ('C1', ['N-C1-L0-Sa0', 'OUT']), ('L0', ['N-C1-L0-Sa0', 'OUT']), ('Sa0', ['IN', 'N-C1-L0-Sa0']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sa - C - VOUT', 'VIN - Sa - L - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - C - GND', 'VIN - Sa - L - C - GND', 'VOUT - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'OUT']), ('C1', ['N-C1-L0-Sa0', 'OUT']), ('L0', ['N-C1-L0-Sa0', 'OUT']), ('Sa0', ['IN', 'N-C1-L0-Sa0']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sa - C - VOUT', 'VIN - Sa - L - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - C - GND', 'VIN - Sa - L - C - GND', 'VOUT - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'OUT']), ('C1', ['N-C1-L0-Sa0', 'OUT']), ('L0', ['N-C1-L0-Sa0', 'OUT']), ('Sa0', ['IN', 'N-C1-L0-Sa0']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sa - C - Sa - VOUT', 'VIN - Sb - Sa - L - GND', 'VIN - Sa - C - L - GND', 'VOUT - Sb - Sa - C - L - GND', 'VOUT - Sa - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-L0-Sa0', 'N-C0-Sa1']), ('L0', ['0', 'N-C0-L0-Sa0']), ('Sa0', ['N-C0-L0-Sa0', 'OUT']), ('Sa1', ['IN', 'N-C0-Sa1']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001000/2200001, -1200001/220000100, 11000/2200001], [1200001/(2200001*Cout), -102200501/(110000050*Cout), -10/(2200001*Cout)], [-110000/2200001, -1/2200001, -11/22000010]]', 'b': '[[-10000/2200001], [2000010/(2200001*Cout)], [1/2200001]]', 'c': '[[110000100000/2200001, 1200001/2200001, -1100000/2200001], [110000100000/2200001, 1200001/2200001, 1100001/2200001], [100000/2200001, 200001/2200001, 1/2200001], [0, 0, 0], [0, 1, 0]]', 'd': '[[1000000/2200001], [1000000/2200001], [2000000/2200001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/210000200, -550001/105000100, 1000001/210000200], [550001/(1050001*Cout), -26050501/(52500050*Cout), -500000/(1050001*Cout)], [-1000001/21000020, -50000/1050001, -1000001/21000020]]', 'b': '[[-5000/1050001], [500010/(1050001*Cout)], [50000/1050001]]', 'c': '[[1100001/2100002, 550001/1050001, -1000001/2100002], [1100001/2100002, 550001/1050001, 1100001/2100002], [50000/1050001, 50001/1050001, 50000/1050001], [0, 0, 0], [0, 1, 0]]', 'd': '[[500000/1050001], [500000/1050001], [1000000/1050001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '9', '0', '12'], 'net_list': [['Sa0', '9', 'IN'], ['Sb0', 'IN', 'OUT'], ['L0', '0', '12'], ['C0', '9', '12'], ['Sa1', 'OUT', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - C - Sa - VOUT', 'VIN - Sb - Sa - L - GND', 'VIN - Sa - C - L - GND', 'VOUT - Sb - Sa - C - L - GND', 'VOUT - Sa - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-L0-Sa0', 'N-C0-Sa1']), ('L0', ['0', 'N-C0-L0-Sa0']), ('Sa0', ['N-C0-L0-Sa0', 'OUT']), ('Sa1', ['IN', 'N-C0-Sa1']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001000/2200001, -1200001/220000100, 11000/2200001], [1200001/(2200001*Cout), -102200501/(110000050*Cout), -10/(2200001*Cout)], [-110000/2200001, -1/2200001, -11/22000010]]', 'b': '[[-10000/2200001], [2000010/(2200001*Cout)], [1/2200001]]', 'c': '[[110000100000/2200001, 1200001/2200001, -1100000/2200001], [110000100000/2200001, 1200001/2200001, 1100001/2200001], [100000/2200001, 200001/2200001, 1/2200001], [0, 0, 0], [0, 1, 0]]', 'd': '[[1000000/2200001], [1000000/2200001], [2000000/2200001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/210000200, -550001/105000100, 1000001/210000200], [550001/(1050001*Cout), -26050501/(52500050*Cout), -500000/(1050001*Cout)], [-1000001/21000020, -50000/1050001, -1000001/21000020]]', 'b': '[[-5000/1050001], [500010/(1050001*Cout)], [50000/1050001]]', 'c': '[[1100001/2100002, 550001/1050001, -1000001/2100002], [1100001/2100002, 550001/1050001, 1100001/2100002], [50000/1050001, 50001/1050001, 50000/1050001], [0, 0, 0], [0, 1, 0]]', 'd': '[[500000/1050001], [500000/1050001], [1000000/1050001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '9', '0', '12'], 'net_list': [['Sa0', '9', 'IN'], ['Sb0', 'IN', 'OUT'], ['L0', '0', '12'], ['C0', '9', '12'], ['Sa1', 'OUT', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - C - Sa - VOUT', 'VIN - Sb - Sa - L - GND', 'VIN - Sa - C - L - GND', 'VOUT - Sb - Sa - C - L - GND', 'VOUT - Sa - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-L0-Sa0', 'N-C0-Sa1']), ('L0', ['0', 'N-C0-L0-Sa0']), ('Sa0', ['N-C0-L0-Sa0', 'OUT']), ('Sa1', ['IN', 'N-C0-Sa1']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001000/2200001, -1200001/220000100, 11000/2200001], [1200001/(2200001*Cout), -102200501/(110000050*Cout), -10/(2200001*Cout)], [-110000/2200001, -1/2200001, -11/22000010]]', 'b': '[[-10000/2200001], [2000010/(2200001*Cout)], [1/2200001]]', 'c': '[[110000100000/2200001, 1200001/2200001, -1100000/2200001], [110000100000/2200001, 1200001/2200001, 1100001/2200001], [100000/2200001, 200001/2200001, 1/2200001], [0, 0, 0], [0, 1, 0]]', 'd': '[[1000000/2200001], [1000000/2200001], [2000000/2200001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/210000200, -550001/105000100, 1000001/210000200], [550001/(1050001*Cout), -26050501/(52500050*Cout), -500000/(1050001*Cout)], [-1000001/21000020, -50000/1050001, -1000001/21000020]]', 'b': '[[-5000/1050001], [500010/(1050001*Cout)], [50000/1050001]]', 'c': '[[1100001/2100002, 550001/1050001, -1000001/2100002], [1100001/2100002, 550001/1050001, 1100001/2100002], [50000/1050001, 50001/1050001, 50000/1050001], [0, 0, 0], [0, 1, 0]]', 'd': '[[500000/1050001], [500000/1050001], [1000000/1050001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '9', '0', '12'], 'net_list': [['Sa0', '9', 'IN'], ['Sb0', 'IN', 'OUT'], ['L0', '0', '12'], ['C0', '9', '12'], ['Sa1', 'OUT', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - C - Sa - VOUT', 'VIN - Sb - Sa - L - GND', 'VIN - Sa - C - L - GND', 'VOUT - Sb - Sa - C - L - GND', 'VOUT - Sa - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-L0-Sa0', 'N-C0-Sa1']), ('L0', ['0', 'N-C0-L0-Sa0']), ('Sa0', ['N-C0-L0-Sa0', 'OUT']), ('Sa1', ['IN', 'N-C0-Sa1']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001000/2200001, -1200001/220000100, 11000/2200001], [1200001/(2200001*Cout), -102200501/(110000050*Cout), -10/(2200001*Cout)], [-110000/2200001, -1/2200001, -11/22000010]]', 'b': '[[-10000/2200001], [2000010/(2200001*Cout)], [1/2200001]]', 'c': '[[110000100000/2200001, 1200001/2200001, -1100000/2200001], [110000100000/2200001, 1200001/2200001, 1100001/2200001], [100000/2200001, 200001/2200001, 1/2200001], [0, 0, 0], [0, 1, 0]]', 'd': '[[1000000/2200001], [1000000/2200001], [2000000/2200001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/210000200, -550001/105000100, 1000001/210000200], [550001/(1050001*Cout), -26050501/(52500050*Cout), -500000/(1050001*Cout)], [-1000001/21000020, -50000/1050001, -1000001/21000020]]', 'b': '[[-5000/1050001], [500010/(1050001*Cout)], [50000/1050001]]', 'c': '[[1100001/2100002, 550001/1050001, -1000001/2100002], [1100001/2100002, 550001/1050001, 1100001/2100002], [50000/1050001, 50001/1050001, 50000/1050001], [0, 0, 0], [0, 1, 0]]', 'd': '[[500000/1050001], [500000/1050001], [1000000/1050001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '9', '0', '12'], 'net_list': [['Sa0', '9', 'IN'], ['Sb0', 'IN', 'OUT'], ['L0', '0', '12'], ['C0', '9', '12'], ['Sa1', 'OUT', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - C - Sa - VOUT', 'VIN - Sb - Sa - L - GND', 'VIN - Sa - C - L - GND', 'VOUT - Sb - Sa - C - L - GND', 'VOUT - Sa - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-L0-Sa0', 'N-C0-Sa1']), ('L0', ['0', 'N-C0-L0-Sa0']), ('Sa0', ['N-C0-L0-Sa0', 'OUT']), ('Sa1', ['IN', 'N-C0-Sa1']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001000/2200001, -1200001/220000100, 11000/2200001], [1200001/(2200001*Cout), -102200501/(110000050*Cout), -10/(2200001*Cout)], [-110000/2200001, -1/2200001, -11/22000010]]', 'b': '[[-10000/2200001], [2000010/(2200001*Cout)], [1/2200001]]', 'c': '[[110000100000/2200001, 1200001/2200001, -1100000/2200001], [110000100000/2200001, 1200001/2200001, 1100001/2200001], [100000/2200001, 200001/2200001, 1/2200001], [0, 0, 0], [0, 1, 0]]', 'd': '[[1000000/2200001], [1000000/2200001], [2000000/2200001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/210000200, -550001/105000100, 1000001/210000200], [550001/(1050001*Cout), -26050501/(52500050*Cout), -500000/(1050001*Cout)], [-1000001/21000020, -50000/1050001, -1000001/21000020]]', 'b': '[[-5000/1050001], [500010/(1050001*Cout)], [50000/1050001]]', 'c': '[[1100001/2100002, 550001/1050001, -1000001/2100002], [1100001/2100002, 550001/1050001, 1100001/2100002], [50000/1050001, 50001/1050001, 50000/1050001], [0, 0, 0], [0, 1, 0]]', 'd': '[[500000/1050001], [500000/1050001], [1000000/1050001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '9', '0', '12'], 'net_list': [['Sa0', '9', 'IN'], ['Sb0', 'IN', 'OUT'], ['L0', '0', '12'], ['C0', '9', '12'], ['Sa1', 'OUT', '12']]}
has to be unconnected
total action num is: 2 update:  2 by selecting:  0
<Synchronized wrapper for c_int(42)>
root offset is:  1
has to be unconnected
has to be unconnected
['VIN - L - Sb - L - VOUT', 'VIN - L - L - C - L - VOUT', 'VIN - L - Sb - C - GND', 'VIN - L - L - GND', 'VOUT - L - C - GND', 'VOUT - L - Sb - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-L2-Sb0']), ('L0', ['IN', 'N-L0-L1-Sb0']), ('L1', ['0', 'N-L0-L1-Sb0']), ('L2', ['N-C0-L2-Sb0', 'OUT']), ('Sb0', ['N-C0-L2-Sb0', 'N-L0-L1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, 1/100, 1/100], [0, -1/100, -1/100, 0, 1/100], [0, -1/100, -11/1000, 0, 1/100], [-1/Cout, 0, 0, -1/(50*Cout), 0], [-1/10, -1/10, -1/10, 0, 0]]', 'b': '[[0], [0], [1/100], [0], [0]]', 'c': '[[0, 1, 1, 0, -1], [0, 0, 0, 0, -1], [0, 0, -1/10, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 1, 0]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, 1/100, 1/100], [0, -1000, -1000, 0, 1/100], [0, -1000, -1000001/1000, 0, 1/100], [-1/Cout, 0, 0, -1/(50*Cout), 0], [-1/10, -1/10, -1/10, 0, 0]]', 'b': '[[0], [0], [1/100], [0], [0]]', 'c': '[[0, 100000, 100000, 0, -1], [0, 0, 0, 0, -1], [0, 0, -1/10, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 1, 0]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'L1', 'L2'], 'node_list': ['IN', 'OUT', 'IN_exact', '8', '12', '0'], 'net_list': [['Sb0', '8', '12'], ['L0', 'OUT', '8'], ['C0', '0', '8'], ['L1', '0', '12'], ['L2', 'IN', '12']]}
['VIN - L - Sb - L - VOUT', 'VIN - L - L - C - L - VOUT', 'VIN - L - Sb - C - GND', 'VIN - L - L - GND', 'VOUT - L - C - GND', 'VOUT - L - Sb - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-L2-Sb0']), ('L0', ['IN', 'N-L0-L1-Sb0']), ('L1', ['0', 'N-L0-L1-Sb0']), ('L2', ['N-C0-L2-Sb0', 'OUT']), ('Sb0', ['N-C0-L2-Sb0', 'N-L0-L1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, 1/100, 1/100], [0, -1/100, -1/100, 0, 1/100], [0, -1/100, -11/1000, 0, 1/100], [-1/Cout, 0, 0, -1/(50*Cout), 0], [-1/10, -1/10, -1/10, 0, 0]]', 'b': '[[0], [0], [1/100], [0], [0]]', 'c': '[[0, 1, 1, 0, -1], [0, 0, 0, 0, -1], [0, 0, -1/10, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 1, 0]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, 1/100, 1/100], [0, -1000, -1000, 0, 1/100], [0, -1000, -1000001/1000, 0, 1/100], [-1/Cout, 0, 0, -1/(50*Cout), 0], [-1/10, -1/10, -1/10, 0, 0]]', 'b': '[[0], [0], [1/100], [0], [0]]', 'c': '[[0, 100000, 100000, 0, -1], [0, 0, 0, 0, -1], [0, 0, -1/10, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 1, 0]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'L1', 'L2'], 'node_list': ['IN', 'OUT', 'IN_exact', '8', '12', '0'], 'net_list': [['Sb0', '8', '12'], ['L0', 'OUT', '8'], ['C0', '0', '8'], ['L1', '0', '12'], ['L2', 'IN', '12']]}
['VIN - L - Sb - L - VOUT', 'VIN - L - L - C - L - VOUT', 'VIN - L - Sb - C - GND', 'VIN - L - L - GND', 'VOUT - L - C - GND', 'VOUT - L - Sb - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-L2-Sb0']), ('L0', ['IN', 'N-L0-L1-Sb0']), ('L1', ['0', 'N-L0-L1-Sb0']), ('L2', ['N-C0-L2-Sb0', 'OUT']), ('Sb0', ['N-C0-L2-Sb0', 'N-L0-L1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, 1/100, 1/100], [0, -1/100, -1/100, 0, 1/100], [0, -1/100, -11/1000, 0, 1/100], [-1/Cout, 0, 0, -1/(50*Cout), 0], [-1/10, -1/10, -1/10, 0, 0]]', 'b': '[[0], [0], [1/100], [0], [0]]', 'c': '[[0, 1, 1, 0, -1], [0, 0, 0, 0, -1], [0, 0, -1/10, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 1, 0]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, 1/100, 1/100], [0, -1000, -1000, 0, 1/100], [0, -1000, -1000001/1000, 0, 1/100], [-1/Cout, 0, 0, -1/(50*Cout), 0], [-1/10, -1/10, -1/10, 0, 0]]', 'b': '[[0], [0], [1/100], [0], [0]]', 'c': '[[0, 100000, 100000, 0, -1], [0, 0, 0, 0, -1], [0, 0, -1/10, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 1, 0]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'L1', 'L2'], 'node_list': ['IN', 'OUT', 'IN_exact', '8', '12', '0'], 'net_list': [['Sb0', '8', '12'], ['L0', 'OUT', '8'], ['C0', '0', '8'], ['L1', '0', '12'], ['L2', 'IN', '12']]}
['VIN - L - Sb - L - VOUT', 'VIN - L - L - C - L - VOUT', 'VIN - L - Sb - C - GND', 'VIN - L - L - GND', 'VOUT - L - C - GND', 'VOUT - L - Sb - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-L2-Sb0']), ('L0', ['IN', 'N-L0-L1-Sb0']), ('L1', ['0', 'N-L0-L1-Sb0']), ('L2', ['N-C0-L2-Sb0', 'OUT']), ('Sb0', ['N-C0-L2-Sb0', 'N-L0-L1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, 1/100, 1/100], [0, -1/100, -1/100, 0, 1/100], [0, -1/100, -11/1000, 0, 1/100], [-1/Cout, 0, 0, -1/(50*Cout), 0], [-1/10, -1/10, -1/10, 0, 0]]', 'b': '[[0], [0], [1/100], [0], [0]]', 'c': '[[0, 1, 1, 0, -1], [0, 0, 0, 0, -1], [0, 0, -1/10, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 1, 0]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, 1/100, 1/100], [0, -1000, -1000, 0, 1/100], [0, -1000, -1000001/1000, 0, 1/100], [-1/Cout, 0, 0, -1/(50*Cout), 0], [-1/10, -1/10, -1/10, 0, 0]]', 'b': '[[0], [0], [1/100], [0], [0]]', 'c': '[[0, 100000, 100000, 0, -1], [0, 0, 0, 0, -1], [0, 0, -1/10, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 1, 0]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'L1', 'L2'], 'node_list': ['IN', 'OUT', 'IN_exact', '8', '12', '0'], 'net_list': [['Sb0', '8', '12'], ['L0', 'OUT', '8'], ['C0', '0', '8'], ['L1', '0', '12'], ['L2', 'IN', '12']]}
['VIN - L - Sb - L - VOUT', 'VIN - L - L - C - L - VOUT', 'VIN - L - Sb - C - GND', 'VIN - L - L - GND', 'VOUT - L - C - GND', 'VOUT - L - Sb - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-L2-Sb0']), ('L0', ['IN', 'N-L0-L1-Sb0']), ('L1', ['0', 'N-L0-L1-Sb0']), ('L2', ['N-C0-L2-Sb0', 'OUT']), ('Sb0', ['N-C0-L2-Sb0', 'N-L0-L1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, 1/100, 1/100], [0, -1/100, -1/100, 0, 1/100], [0, -1/100, -11/1000, 0, 1/100], [-1/Cout, 0, 0, -1/(50*Cout), 0], [-1/10, -1/10, -1/10, 0, 0]]', 'b': '[[0], [0], [1/100], [0], [0]]', 'c': '[[0, 1, 1, 0, -1], [0, 0, 0, 0, -1], [0, 0, -1/10, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 1, 0]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, 1/100, 1/100], [0, -1000, -1000, 0, 1/100], [0, -1000, -1000001/1000, 0, 1/100], [-1/Cout, 0, 0, -1/(50*Cout), 0], [-1/10, -1/10, -1/10, 0, 0]]', 'b': '[[0], [0], [1/100], [0], [0]]', 'c': '[[0, 100000, 100000, 0, -1], [0, 0, 0, 0, -1], [0, 0, -1/10, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 1, 0]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'L1', 'L2'], 'node_list': ['IN', 'OUT', 'IN_exact', '8', '12', '0'], 'net_list': [['Sb0', '8', '12'], ['L0', 'OUT', '8'], ['C0', '0', '8'], ['L1', '0', '12'], ['L2', 'IN', '12']]}
['VIN - Sb - L - VOUT', 'VIN - Sb - Sb - VOUT', 'VIN - C - VOUT', 'VIN - Sb - L - C - GND', 'VIN - Sb - Sb - C - GND', 'VIN - C - C - GND', 'VOUT - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'OUT']), ('C1', ['0', 'OUT']), ('L0', ['N-L0-Sb0-Sb1', 'OUT']), ('Sb0', ['N-L0-Sb0-Sb1', 'OUT']), ('Sb1', ['IN', 'N-L0-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-36504 violations

['VIN - Sb - L - VOUT', 'VIN - Sb - Sb - VOUT', 'VIN - C - VOUT', 'VIN - Sb - L - C - GND', 'VIN - Sb - Sb - C - GND', 'VIN - C - C - GND', 'VOUT - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'OUT']), ('C1', ['0', 'OUT']), ('L0', ['N-L0-Sb0-Sb1', 'OUT']), ('Sb0', ['N-L0-Sb0-Sb1', 'OUT']), ('Sb1', ['IN', 'N-L0-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - L - VOUT', 'VIN - Sb - Sb - VOUT', 'VIN - C - VOUT', 'VIN - Sb - L - C - GND', 'VIN - Sb - Sb - C - GND', 'VIN - C - C - GND', 'VOUT - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'OUT']), ('C1', ['0', 'OUT']), ('L0', ['N-L0-Sb0-Sb1', 'OUT']), ('Sb0', ['N-L0-Sb0-Sb1', 'OUT']), ('Sb1', ['IN', 'N-L0-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - L - VOUT', 'VIN - Sb - Sb - VOUT', 'VIN - C - VOUT', 'VIN - Sb - L - C - GND', 'VIN - Sb - Sb - C - GND', 'VIN - C - C - GND', 'VOUT - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'OUT']), ('C1', ['0', 'OUT']), ('L0', ['N-L0-Sb0-Sb1', 'OUT']), ('Sb0', ['N-L0-Sb0-Sb1', 'OUT']), ('Sb1', ['IN', 'N-L0-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - L - VOUT', 'VIN - Sb - Sb - VOUT', 'VIN - C - VOUT', 'VIN - Sb - L - C - GND', 'VIN - Sb - Sb - C - GND', 'VIN - C - C - GND', 'VOUT - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'OUT']), ('C1', ['0', 'OUT']), ('L0', ['N-L0-Sb0-Sb1', 'OUT']), ('Sb0', ['N-L0-Sb0-Sb1', 'OUT']), ('Sb1', ['IN', 'N-L0-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
has to be unconnected
has to be unconnected
has to be unconnected
has to be unconnected
has to be unconnected
has to be unconnected
has to be unconnected
['VIN - C - VOUT', 'VIN - C - Sb - L - GND', 'VIN - C - L - L - GND', 'VIN - C - L - L - GND', 'VOUT - Sb - L - GND', 'VOUT - L - L - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'OUT']), ('L0', ['0', 'N-L0-L1-L2-Sb0']), ('L1', ['N-L0-L1-L2-Sb0', 'OUT']), ('L2', ['N-L0-L1-L2-Sb0', 'OUT']), ('Sb0', ['N-L0-L1-L2-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/100, -1/100, -1/100, 0, 0], [-1/100, -1/100, -1/100, -1/100, 0], [-1/100, -1/100, -1/100, 0, 0], [0, 1/Cout, 0, -501/(50*Cout), -10/Cout], [0, 0, 0, -1, -1]]', 'b': '[[0], [0], [0], [10/Cout], [1]]', 'c': '[[1, 1, 1, 1, 0], [0, 0, 0, 1, 1], [0, 0, 0, 0, 0], [0, 0, 0, 1, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000, -1000, -1000, 0, 0], [-1000, -1000, -1000, -1/100, 0], [-1000, -1000, -1000, 0, 0], [0, 1/Cout, 0, -501/(50*Cout), -10/Cout], [0, 0, 0, -1, -1]]', 'b': '[[0], [0], [0], [10/Cout], [1]]', 'c': '[[100000, 100000, 100000, 1, 0], [0, 0, 0, 1, 1], [0, 0, 0, 0, 0], [0, 0, 0, 1, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'L1', 'L2'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sb0', 'OUT', '12'], ['L0', 'OUT', '12'], ['C0', 'IN', 'OUT'], ['L1', '0', '12'], ['L2', 'OUT', '12']]}
['VIN - C - VOUT', 'VIN - C - Sb - L - GND', 'VIN - C - L - L - GND', 'VIN - C - L - L - GND', 'VOUT - Sb - L - GND', 'VOUT - L - L - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'OUT']), ('L0', ['0', 'N-L0-L1-L2-Sb0']), ('L1', ['N-L0-L1-L2-Sb0', 'OUT']), ('L2', ['N-L0-L1-L2-Sb0', 'OUT']), ('Sb0', ['N-L0-L1-L2-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/100, -1/100, -1/100, 0, 0], [-1/100, -1/100, -1/100, -1/100, 0], [-1/100, -1/100, -1/100, 0, 0], [0, 1/Cout, 0, -501/(50*Cout), -10/Cout], [0, 0, 0, -1, -1]]', 'b': '[[0], [0], [0], [10/Cout], [1]]', 'c': '[[1, 1, 1, 1, 0], [0, 0, 0, 1, 1], [0, 0, 0, 0, 0], [0, 0, 0, 1, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000, -1000, -1000, 0, 0], [-1000, -1000, -1000, -1/100, 0], [-1000, -1000, -1000, 0, 0], [0, 1/Cout, 0, -501/(50*Cout), -10/Cout], [0, 0, 0, -1, -1]]', 'b': '[[0], [0], [0], [10/Cout], [1]]', 'c': '[[100000, 100000, 100000, 1, 0], [0, 0, 0, 1, 1], [0, 0, 0, 0, 0], [0, 0, 0, 1, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'L1', 'L2'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sb0', 'OUT', '12'], ['L0', 'OUT', '12'], ['C0', 'IN', 'OUT'], ['L1', '0', '12'], ['L2', 'OUT', '12']]}
['VIN - C - VOUT', 'VIN - C - Sb - L - GND', 'VIN - C - L - L - GND', 'VIN - C - L - L - GND', 'VOUT - Sb - L - GND', 'VOUT - L - L - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'OUT']), ('L0', ['0', 'N-L0-L1-L2-Sb0']), ('L1', ['N-L0-L1-L2-Sb0', 'OUT']), ('L2', ['N-L0-L1-L2-Sb0', 'OUT']), ('Sb0', ['N-L0-L1-L2-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/100, -1/100, -1/100, 0, 0], [-1/100, -1/100, -1/100, -1/100, 0], [-1/100, -1/100, -1/100, 0, 0], [0, 1/Cout, 0, -501/(50*Cout), -10/Cout], [0, 0, 0, -1, -1]]', 'b': '[[0], [0], [0], [10/Cout], [1]]', 'c': '[[1, 1, 1, 1, 0], [0, 0, 0, 1, 1], [0, 0, 0, 0, 0], [0, 0, 0, 1, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000, -1000, -1000, 0, 0], [-1000, -1000, -1000, -1/100, 0], [-1000, -1000, -1000, 0, 0], [0, 1/Cout, 0, -501/(50*Cout), -10/Cout], [0, 0, 0, -1, -1]]', 'b': '[[0], [0], [0], [10/Cout], [1]]', 'c': '[[100000, 100000, 100000, 1, 0], [0, 0, 0, 1, 1], [0, 0, 0, 0, 0], [0, 0, 0, 1, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'L1', 'L2'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sb0', 'OUT', '12'], ['L0', 'OUT', '12'], ['C0', 'IN', 'OUT'], ['L1', '0', '12'], ['L2', 'OUT', '12']]}
['VIN - C - VOUT', 'VIN - C - Sb - L - GND', 'VIN - C - L - L - GND', 'VIN - C - L - L - GND', 'VOUT - Sb - L - GND', 'VOUT - L - L - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'OUT']), ('L0', ['0', 'N-L0-L1-L2-Sb0']), ('L1', ['N-L0-L1-L2-Sb0', 'OUT']), ('L2', ['N-L0-L1-L2-Sb0', 'OUT']), ('Sb0', ['N-L0-L1-L2-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/100, -1/100, -1/100, 0, 0], [-1/100, -1/100, -1/100, -1/100, 0], [-1/100, -1/100, -1/100, 0, 0], [0, 1/Cout, 0, -501/(50*Cout), -10/Cout], [0, 0, 0, -1, -1]]', 'b': '[[0], [0], [0], [10/Cout], [1]]', 'c': '[[1, 1, 1, 1, 0], [0, 0, 0, 1, 1], [0, 0, 0, 0, 0], [0, 0, 0, 1, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000, -1000, -1000, 0, 0], [-1000, -1000, -1000, -1/100, 0], [-1000, -1000, -1000, 0, 0], [0, 1/Cout, 0, -501/(50*Cout), -10/Cout], [0, 0, 0, -1, -1]]', 'b': '[[0], [0], [0], [10/Cout], [1]]', 'c': '[[100000, 100000, 100000, 1, 0], [0, 0, 0, 1, 1], [0, 0, 0, 0, 0], [0, 0, 0, 1, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'L1', 'L2'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sb0', 'OUT', '12'], ['L0', 'OUT', '12'], ['C0', 'IN', 'OUT'], ['L1', '0', '12'], ['L2', 'OUT', '12']]}
['VIN - C - VOUT', 'VIN - C - Sb - L - GND', 'VIN - C - L - L - GND', 'VIN - C - L - L - GND', 'VOUT - Sb - L - GND', 'VOUT - L - L - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'OUT']), ('L0', ['0', 'N-L0-L1-L2-Sb0']), ('L1', ['N-L0-L1-L2-Sb0', 'OUT']), ('L2', ['N-L0-L1-L2-Sb0', 'OUT']), ('Sb0', ['N-L0-L1-L2-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/100, -1/100, -1/100, 0, 0], [-1/100, -1/100, -1/100, -1/100, 0], [-1/100, -1/100, -1/100, 0, 0], [0, 1/Cout, 0, -501/(50*Cout), -10/Cout], [0, 0, 0, -1, -1]]', 'b': '[[0], [0], [0], [10/Cout], [1]]', 'c': '[[1, 1, 1, 1, 0], [0, 0, 0, 1, 1], [0, 0, 0, 0, 0], [0, 0, 0, 1, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000, -1000, -1000, 0, 0], [-1000, -1000, -1000, -1/100, 0], [-1000, -1000, -1000, 0, 0], [0, 1/Cout, 0, -501/(50*Cout), -10/Cout], [0, 0, 0, -1, -1]]', 'b': '[[0], [0], [0], [10/Cout], [1]]', 'c': '[[100000, 100000, 100000, 1, 0], [0, 0, 0, 1, 1], [0, 0, 0, 0, 0], [0, 0, 0, 1, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'L1', 'L2'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sb0', 'OUT', '12'], ['L0', 'OUT', '12'], ['C0', 'IN', 'OUT'], ['L1', '0', '12'], ['L2', 'OUT', '12']]}
['VIN - Sb - C - Sb - VOUT', 'VIN - Sb - C - VOUT', 'VIN - Sb - C - L - GND', 'VIN - Sb - C - Sb - L - GND', 'VOUT - Sb - L - GND', 'VOUT - C - C - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-C1-Sb0', 'OUT']), ('C1', ['N-C0-C1-Sb0', 'N-C1-L0-Sb1']), ('L0', ['0', 'N-C1-L0-Sb1']), ('Sb0', ['IN', 'N-C0-C1-Sb0']), ('Sb1', ['N-C1-L0-Sb1', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, -1/100, 1/100], [1/Cout, -511/(550*Cout), 0, 10/(11*Cout)], [1/10, 0, -1/10, 1/10], [-1/10, 1/11, 1/10, -21/110]]', 'b': '[[0], [10/(11*Cout)], [0], [-1/11]]', 'c': '[[0, 1, 0, -1], [0, 1, 1, -1], [0, 1/11, 0, -1/11], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [10/11], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, -1/100, 1/100], [1/Cout, -1000501/(50000050*Cout), 0, 10/(1000001*Cout)], [1/10, 0, -1/1000000, 1/1000000], [-1/10, 1/1000001, 1/1000000, -2000001/1000001000000]]', 'b': '[[0], [10/(1000001*Cout)], [0], [-1/1000001]]', 'c': '[[0, 1, 0, -1], [0, 1, 1, -1], [0, 1/1000001, 0, -1/1000001], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1000000/1000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'Rb1', 'Ra1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '7', '0', '12'], 'net_list': [['Sb0', 'OUT', '7'], ['L0', '0', '7'], ['C0', '7', '12'], ['Sb1', 'IN', '12'], ['C1', 'OUT', '12']]}
['VIN - Sb - C - Sb - VOUT', 'VIN - Sb - C - VOUT', 'VIN - Sb - C - L - GND', 'VIN - Sb - C - Sb - L - GND', 'VOUT - Sb - L - GND', 'VOUT - C - C - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-C1-Sb0', 'OUT']), ('C1', ['N-C0-C1-Sb0', 'N-C1-L0-Sb1']), ('L0', ['0', 'N-C1-L0-Sb1']), ('Sb0', ['IN', 'N-C0-C1-Sb0']), ('Sb1', ['N-C1-L0-Sb1', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, -1/100, 1/100], [1/Cout, -511/(550*Cout), 0, 10/(11*Cout)], [1/10, 0, -1/10, 1/10], [-1/10, 1/11, 1/10, -21/110]]', 'b': '[[0], [10/(11*Cout)], [0], [-1/11]]', 'c': '[[0, 1, 0, -1], [0, 1, 1, -1], [0, 1/11, 0, -1/11], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [10/11], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, -1/100, 1/100], [1/Cout, -1000501/(50000050*Cout), 0, 10/(1000001*Cout)], [1/10, 0, -1/1000000, 1/1000000], [-1/10, 1/1000001, 1/1000000, -2000001/1000001000000]]', 'b': '[[0], [10/(1000001*Cout)], [0], [-1/1000001]]', 'c': '[[0, 1, 0, -1], [0, 1, 1, -1], [0, 1/1000001, 0, -1/1000001], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1000000/1000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'Rb1', 'Ra1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '7', '0', '12'], 'net_list': [['Sb0', 'OUT', '7'], ['L0', '0', '7'], ['C0', '7', '12'], ['Sb1', 'IN', '12'], ['C1', 'OUT', '12']]}
['VIN - Sb - C - Sb - VOUT', 'VIN - Sb - C - VOUT', 'VIN - Sb - C - L - GND', 'VIN - Sb - C - Sb - L - GND', 'VOUT - Sb - L - GND', 'VOUT - C - C - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-C1-Sb0', 'OUT']), ('C1', ['N-C0-C1-Sb0', 'N-C1-L0-Sb1']), ('L0', ['0', 'N-C1-L0-Sb1']), ('Sb0', ['IN', 'N-C0-C1-Sb0']), ('Sb1', ['N-C1-L0-Sb1', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, -1/100, 1/100], [1/Cout, -511/(550*Cout), 0, 10/(11*Cout)], [1/10, 0, -1/10, 1/10], [-1/10, 1/11, 1/10, -21/110]]', 'b': '[[0], [10/(11*Cout)], [0], [-1/11]]', 'c': '[[0, 1, 0, -1], [0, 1, 1, -1], [0, 1/11, 0, -1/11], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [10/11], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, -1/100, 1/100], [1/Cout, -1000501/(50000050*Cout), 0, 10/(1000001*Cout)], [1/10, 0, -1/1000000, 1/1000000], [-1/10, 1/1000001, 1/1000000, -2000001/1000001000000]]', 'b': '[[0], [10/(1000001*Cout)], [0], [-1/1000001]]', 'c': '[[0, 1, 0, -1], [0, 1, 1, -1], [0, 1/1000001, 0, -1/1000001], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1000000/1000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'Rb1', 'Ra1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '7', '0', '12'], 'net_list': [['Sb0', 'OUT', '7'], ['L0', '0', '7'], ['C0', '7', '12'], ['Sb1', 'IN', '12'], ['C1', 'OUT', '12']]}
['VIN - Sb - C - Sb - VOUT', 'VIN - Sb - C - VOUT', 'VIN - Sb - C - L - GND', 'VIN - Sb - C - Sb - L - GND', 'VOUT - Sb - L - GND', 'VOUT - C - C - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-C1-Sb0', 'OUT']), ('C1', ['N-C0-C1-Sb0', 'N-C1-L0-Sb1']), ('L0', ['0', 'N-C1-L0-Sb1']), ('Sb0', ['IN', 'N-C0-C1-Sb0']), ('Sb1', ['N-C1-L0-Sb1', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, -1/100, 1/100], [1/Cout, -511/(550*Cout), 0, 10/(11*Cout)], [1/10, 0, -1/10, 1/10], [-1/10, 1/11, 1/10, -21/110]]', 'b': '[[0], [10/(11*Cout)], [0], [-1/11]]', 'c': '[[0, 1, 0, -1], [0, 1, 1, -1], [0, 1/11, 0, -1/11], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [10/11], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, -1/100, 1/100], [1/Cout, -1000501/(50000050*Cout), 0, 10/(1000001*Cout)], [1/10, 0, -1/1000000, 1/1000000], [-1/10, 1/1000001, 1/1000000, -2000001/1000001000000]]', 'b': '[[0], [10/(1000001*Cout)], [0], [-1/1000001]]', 'c': '[[0, 1, 0, -1], [0, 1, 1, -1], [0, 1/1000001, 0, -1/1000001], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1000000/1000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'Rb1', 'Ra1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '7', '0', '12'], 'net_list': [['Sb0', 'OUT', '7'], ['L0', '0', '7'], ['C0', '7', '12'], ['Sb1', 'IN', '12'], ['C1', 'OUT', '12']]}
['VIN - Sb - C - Sb - VOUT', 'VIN - Sb - C - VOUT', 'VIN - Sb - C - L - GND', 'VIN - Sb - C - Sb - L - GND', 'VOUT - Sb - L - GND', 'VOUT - C - C - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-C1-Sb0', 'OUT']), ('C1', ['N-C0-C1-Sb0', 'N-C1-L0-Sb1']), ('L0', ['0', 'N-C1-L0-Sb1']), ('Sb0', ['IN', 'N-C0-C1-Sb0']), ('Sb1', ['N-C1-L0-Sb1', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, -1/100, 1/100], [1/Cout, -511/(550*Cout), 0, 10/(11*Cout)], [1/10, 0, -1/10, 1/10], [-1/10, 1/11, 1/10, -21/110]]', 'b': '[[0], [10/(11*Cout)], [0], [-1/11]]', 'c': '[[0, 1, 0, -1], [0, 1, 1, -1], [0, 1/11, 0, -1/11], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [10/11], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, -1/100, 1/100], [1/Cout, -1000501/(50000050*Cout), 0, 10/(1000001*Cout)], [1/10, 0, -1/1000000, 1/1000000], [-1/10, 1/1000001, 1/1000000, -2000001/1000001000000]]', 'b': '[[0], [10/(1000001*Cout)], [0], [-1/1000001]]', 'c': '[[0, 1, 0, -1], [0, 1, 1, -1], [0, 1/1000001, 0, -1/1000001], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1000000/1000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'Rb1', 'Ra1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '7', '0', '12'], 'net_list': [['Sb0', 'OUT', '7'], ['L0', '0', '7'], ['C0', '7', '12'], ['Sb1', 'IN', '12'], ['C1', 'OUT', '12']]}
['VIN - C - Sb - L - L - VOUT', 'VIN - C - L - VOUT', 'VIN - C - Sb - GND', 'VIN - C - L - GND', 'VOUT - L - C - C - Sb - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'N-C0-L0-L1']), ('C1', ['IN', 'N-C1-Sb0']), ('L0', ['N-C0-L0-L1', 'OUT']), ('L1', ['0', 'N-C0-L0-L1']), ('Sb0', ['0', 'N-C1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/1100, -1/1100, 0, 1/1100, 1/100], [-1/1100, -1/1100, 1/100, 1/1100, 1/100], [0, -1/Cout, -1/(50*Cout), 0, 0], [-1/110, -1/110, 0, -1/11, 0], [-1/10, -1/10, 0, 0, 0]]', 'b': '[[-1/110], [-1/110], [0], [-1/11], [0]]', 'c': '[[1/11, 1/11, 0, -1/11, -1], [1/11, 1/11, 0, 10/11, 0], [1/11, 1/11, 0, -1/11, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[10/11], [10/11], [10/11], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1000001, -1000/1000001, 0, 1/100000100, 1/100], [-1000/1000001, -1000/1000001, 1/100, 1/100000100, 1/100], [0, -1/Cout, -1/(50*Cout), 0, 0], [-1/10000010, -1/10000010, 0, -1/1000001, 0], [-1/10, -1/10, 0, 0, 0]]', 'b': '[[-10000/1000001], [-10000/1000001], [0], [-1/1000001], [0]]', 'c': '[[100000/1000001, 100000/1000001, 0, -1/1000001, -1], [100000/1000001, 100000/1000001, 0, 1000000/1000001, 0], [100000/1000001, 100000/1000001, 0, -1/1000001, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[1000000/1000001], [1000000/1000001], [1000000/1000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'L1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '7', '12'], 'net_list': [['Sb0', '0', '7'], ['L0', '0', '12'], ['C0', '7', 'IN'], ['L1', 'OUT', '12'], ['C1', 'IN', '12']]}
['VIN - C - Sb - L - L - VOUT', 'VIN - C - L - VOUT', 'VIN - C - Sb - GND', 'VIN - C - L - GND', 'VOUT - L - C - C - Sb - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'N-C0-L0-L1']), ('C1', ['IN', 'N-C1-Sb0']), ('L0', ['N-C0-L0-L1', 'OUT']), ('L1', ['0', 'N-C0-L0-L1']), ('Sb0', ['0', 'N-C1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/1100, -1/1100, 0, 1/1100, 1/100], [-1/1100, -1/1100, 1/100, 1/1100, 1/100], [0, -1/Cout, -1/(50*Cout), 0, 0], [-1/110, -1/110, 0, -1/11, 0], [-1/10, -1/10, 0, 0, 0]]', 'b': '[[-1/110], [-1/110], [0], [-1/11], [0]]', 'c': '[[1/11, 1/11, 0, -1/11, -1], [1/11, 1/11, 0, 10/11, 0], [1/11, 1/11, 0, -1/11, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[10/11], [10/11], [10/11], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1000001, -1000/1000001, 0, 1/100000100, 1/100], [-1000/1000001, -1000/1000001, 1/100, 1/100000100, 1/100], [0, -1/Cout, -1/(50*Cout), 0, 0], [-1/10000010, -1/10000010, 0, -1/1000001, 0], [-1/10, -1/10, 0, 0, 0]]', 'b': '[[-10000/1000001], [-10000/1000001], [0], [-1/1000001], [0]]', 'c': '[[100000/1000001, 100000/1000001, 0, -1/1000001, -1], [100000/1000001, 100000/1000001, 0, 1000000/1000001, 0], [100000/1000001, 100000/1000001, 0, -1/1000001, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[1000000/1000001], [1000000/1000001], [1000000/1000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'L1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '7', '12'], 'net_list': [['Sb0', '0', '7'], ['L0', '0', '12'], ['C0', '7', 'IN'], ['L1', 'OUT', '12'], ['C1', 'IN', '12']]}
['VIN - C - Sb - L - L - VOUT', 'VIN - C - L - VOUT', 'VIN - C - Sb - GND', 'VIN - C - L - GND', 'VOUT - L - C - C - Sb - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'N-C0-L0-L1']), ('C1', ['IN', 'N-C1-Sb0']), ('L0', ['N-C0-L0-L1', 'OUT']), ('L1', ['0', 'N-C0-L0-L1']), ('Sb0', ['0', 'N-C1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/1100, -1/1100, 0, 1/1100, 1/100], [-1/1100, -1/1100, 1/100, 1/1100, 1/100], [0, -1/Cout, -1/(50*Cout), 0, 0], [-1/110, -1/110, 0, -1/11, 0], [-1/10, -1/10, 0, 0, 0]]', 'b': '[[-1/110], [-1/110], [0], [-1/11], [0]]', 'c': '[[1/11, 1/11, 0, -1/11, -1], [1/11, 1/11, 0, 10/11, 0], [1/11, 1/11, 0, -1/11, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[10/11], [10/11], [10/11], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1000001, -1000/1000001, 0, 1/100000100, 1/100], [-1000/1000001, -1000/1000001, 1/100, 1/100000100, 1/100], [0, -1/Cout, -1/(50*Cout), 0, 0], [-1/10000010, -1/10000010, 0, -1/1000001, 0], [-1/10, -1/10, 0, 0, 0]]', 'b': '[[-10000/1000001], [-10000/1000001], [0], [-1/1000001], [0]]', 'c': '[[100000/1000001, 100000/1000001, 0, -1/1000001, -1], [100000/1000001, 100000/1000001, 0, 1000000/1000001, 0], [100000/1000001, 100000/1000001, 0, -1/1000001, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[1000000/1000001], [1000000/1000001], [1000000/1000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'L1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '7', '12'], 'net_list': [['Sb0', '0', '7'], ['L0', '0', '12'], ['C0', '7', 'IN'], ['L1', 'OUT', '12'], ['C1', 'IN', '12']]}
['VIN - C - Sb - L - L - VOUT', 'VIN - C - L - VOUT', 'VIN - C - Sb - GND', 'VIN - C - L - GND', 'VOUT - L - C - C - Sb - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'N-C0-L0-L1']), ('C1', ['IN', 'N-C1-Sb0']), ('L0', ['N-C0-L0-L1', 'OUT']), ('L1', ['0', 'N-C0-L0-L1']), ('Sb0', ['0', 'N-C1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/1100, -1/1100, 0, 1/1100, 1/100], [-1/1100, -1/1100, 1/100, 1/1100, 1/100], [0, -1/Cout, -1/(50*Cout), 0, 0], [-1/110, -1/110, 0, -1/11, 0], [-1/10, -1/10, 0, 0, 0]]', 'b': '[[-1/110], [-1/110], [0], [-1/11], [0]]', 'c': '[[1/11, 1/11, 0, -1/11, -1], [1/11, 1/11, 0, 10/11, 0], [1/11, 1/11, 0, -1/11, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[10/11], [10/11], [10/11], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1000001, -1000/1000001, 0, 1/100000100, 1/100], [-1000/1000001, -1000/1000001, 1/100, 1/100000100, 1/100], [0, -1/Cout, -1/(50*Cout), 0, 0], [-1/10000010, -1/10000010, 0, -1/1000001, 0], [-1/10, -1/10, 0, 0, 0]]', 'b': '[[-10000/1000001], [-10000/1000001], [0], [-1/1000001], [0]]', 'c': '[[100000/1000001, 100000/1000001, 0, -1/1000001, -1], [100000/1000001, 100000/1000001, 0, 1000000/1000001, 0], [100000/1000001, 100000/1000001, 0, -1/1000001, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[1000000/1000001], [1000000/1000001], [1000000/1000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'L1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '7', '12'], 'net_list': [['Sb0', '0', '7'], ['L0', '0', '12'], ['C0', '7', 'IN'], ['L1', 'OUT', '12'], ['C1', 'IN', '12']]}
['VIN - C - Sb - L - L - VOUT', 'VIN - C - L - VOUT', 'VIN - C - Sb - GND', 'VIN - C - L - GND', 'VOUT - L - C - C - Sb - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'N-C0-L0-L1']), ('C1', ['IN', 'N-C1-Sb0']), ('L0', ['N-C0-L0-L1', 'OUT']), ('L1', ['0', 'N-C0-L0-L1']), ('Sb0', ['0', 'N-C1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/1100, -1/1100, 0, 1/1100, 1/100], [-1/1100, -1/1100, 1/100, 1/1100, 1/100], [0, -1/Cout, -1/(50*Cout), 0, 0], [-1/110, -1/110, 0, -1/11, 0], [-1/10, -1/10, 0, 0, 0]]', 'b': '[[-1/110], [-1/110], [0], [-1/11], [0]]', 'c': '[[1/11, 1/11, 0, -1/11, -1], [1/11, 1/11, 0, 10/11, 0], [1/11, 1/11, 0, -1/11, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[10/11], [10/11], [10/11], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1000001, -1000/1000001, 0, 1/100000100, 1/100], [-1000/1000001, -1000/1000001, 1/100, 1/100000100, 1/100], [0, -1/Cout, -1/(50*Cout), 0, 0], [-1/10000010, -1/10000010, 0, -1/1000001, 0], [-1/10, -1/10, 0, 0, 0]]', 'b': '[[-10000/1000001], [-10000/1000001], [0], [-1/1000001], [0]]', 'c': '[[100000/1000001, 100000/1000001, 0, -1/1000001, -1], [100000/1000001, 100000/1000001, 0, 1000000/1000001, 0], [100000/1000001, 100000/1000001, 0, -1/1000001, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[1000000/1000001], [1000000/1000001], [1000000/1000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'L1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '7', '12'], 'net_list': [['Sb0', '0', '7'], ['L0', '0', '12'], ['C0', '7', 'IN'], ['L1', 'OUT', '12'], ['C1', 'IN', '12']]}
has to be unconnected
has to be unconnected
has to be unconnected
has to be unconnected
['VIN - Sb - VOUT', 'VIN - Sb - C - Sb - GND', 'VIN - Sb - C - L - GND', 'VIN - Sb - L - Sb - GND', 'VIN - Sb - L - L - GND', 'VOUT - C - Sb - GND', 'VOUT - C - L - GND', 'VOUT - L - Sb - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-L0-L1-Sb1', 'OUT']), ('L0', ['N-C0-L0-L1-Sb1', 'OUT']), ('L1', ['0', 'N-C0-L0-L1-Sb1']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-C0-L0-L1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, -1/100, -1/100], [0, 0, 0, -1/100], [1/Cout, 0, -1061/(550*Cout), -1/Cout], [1/10, 1/10, -1/10, -1/10]]', 'b': '[[0], [0], [10/(11*Cout)], [0]]', 'c': '[[0, 0, 1, 1], [0, 0, 1/11, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [10/11], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, -1/100, -1/100], [0, 0, 0, -1/100], [1/Cout, 0, -2002002001/(100000100000*Cout), -1/(100000*Cout)], [1/10, 1/10, -1/1000000, -1/1000000]]', 'b': '[[0], [0], [10/(1000001*Cout)], [0]]', 'c': '[[0, 0, 1, 1], [0, 0, 1/1000001, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sb0', '0', '12'], ['L0', '0', '12'], ['C0', '12', 'OUT'], ['Sb1', 'IN', 'OUT'], ['L1', 'OUT', '12']]}
['VIN - Sb - VOUT', 'VIN - Sb - C - Sb - GND', 'VIN - Sb - C - L - GND', 'VIN - Sb - L - Sb - GND', 'VIN - Sb - L - L - GND', 'VOUT - C - Sb - GND', 'VOUT - C - L - GND', 'VOUT - L - Sb - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-L0-L1-Sb1', 'OUT']), ('L0', ['N-C0-L0-L1-Sb1', 'OUT']), ('L1', ['0', 'N-C0-L0-L1-Sb1']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-C0-L0-L1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, -1/100, -1/100], [0, 0, 0, -1/100], [1/Cout, 0, -1061/(550*Cout), -1/Cout], [1/10, 1/10, -1/10, -1/10]]', 'b': '[[0], [0], [10/(11*Cout)], [0]]', 'c': '[[0, 0, 1, 1], [0, 0, 1/11, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [10/11], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, -1/100, -1/100], [0, 0, 0, -1/100], [1/Cout, 0, -2002002001/(100000100000*Cout), -1/(100000*Cout)], [1/10, 1/10, -1/1000000, -1/1000000]]', 'b': '[[0], [0], [10/(1000001*Cout)], [0]]', 'c': '[[0, 0, 1, 1], [0, 0, 1/1000001, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sb0', '0', '12'], ['L0', '0', '12'], ['C0', '12', 'OUT'], ['Sb1', 'IN', 'OUT'], ['L1', 'OUT', '12']]}
['VIN - Sb - VOUT', 'VIN - Sb - C - Sb - GND', 'VIN - Sb - C - L - GND', 'VIN - Sb - L - Sb - GND', 'VIN - Sb - L - L - GND', 'VOUT - C - Sb - GND', 'VOUT - C - L - GND', 'VOUT - L - Sb - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-L0-L1-Sb1', 'OUT']), ('L0', ['N-C0-L0-L1-Sb1', 'OUT']), ('L1', ['0', 'N-C0-L0-L1-Sb1']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-C0-L0-L1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, -1/100, -1/100], [0, 0, 0, -1/100], [1/Cout, 0, -1061/(550*Cout), -1/Cout], [1/10, 1/10, -1/10, -1/10]]', 'b': '[[0], [0], [10/(11*Cout)], [0]]', 'c': '[[0, 0, 1, 1], [0, 0, 1/11, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [10/11], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, -1/100, -1/100], [0, 0, 0, -1/100], [1/Cout, 0, -2002002001/(100000100000*Cout), -1/(100000*Cout)], [1/10, 1/10, -1/1000000, -1/1000000]]', 'b': '[[0], [0], [10/(1000001*Cout)], [0]]', 'c': '[[0, 0, 1, 1], [0, 0, 1/1000001, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sb0', '0', '12'], ['L0', '0', '12'], ['C0', '12', 'OUT'], ['Sb1', 'IN', 'OUT'], ['L1', 'OUT', '12']]}
['VIN - Sb - VOUT', 'VIN - Sb - C - Sb - GND', 'VIN - Sb - C - L - GND', 'VIN - Sb - L - Sb - GND', 'VIN - Sb - L - L - GND', 'VOUT - C - Sb - GND', 'VOUT - C - L - GND', 'VOUT - L - Sb - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-L0-L1-Sb1', 'OUT']), ('L0', ['N-C0-L0-L1-Sb1', 'OUT']), ('L1', ['0', 'N-C0-L0-L1-Sb1']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-C0-L0-L1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, -1/100, -1/100], [0, 0, 0, -1/100], [1/Cout, 0, -1061/(550*Cout), -1/Cout], [1/10, 1/10, -1/10, -1/10]]', 'b': '[[0], [0], [10/(11*Cout)], [0]]', 'c': '[[0, 0, 1, 1], [0, 0, 1/11, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [10/11], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, -1/100, -1/100], [0, 0, 0, -1/100], [1/Cout, 0, -2002002001/(100000100000*Cout), -1/(100000*Cout)], [1/10, 1/10, -1/1000000, -1/1000000]]', 'b': '[[0], [0], [10/(1000001*Cout)], [0]]', 'c': '[[0, 0, 1, 1], [0, 0, 1/1000001, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sb0', '0', '12'], ['L0', '0', '12'], ['C0', '12', 'OUT'], ['Sb1', 'IN', 'OUT'], ['L1', 'OUT', '12']]}
['VIN - Sb - VOUT', 'VIN - Sb - C - Sb - GND', 'VIN - Sb - C - L - GND', 'VIN - Sb - L - Sb - GND', 'VIN - Sb - L - L - GND', 'VOUT - C - Sb - GND', 'VOUT - C - L - GND', 'VOUT - L - Sb - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['N-C0-L0-L1-Sb1', 'OUT']), ('L0', ['N-C0-L0-L1-Sb1', 'OUT']), ('L1', ['0', 'N-C0-L0-L1-Sb1']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-C0-L0-L1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, -1/100, -1/100], [0, 0, 0, -1/100], [1/Cout, 0, -1061/(550*Cout), -1/Cout], [1/10, 1/10, -1/10, -1/10]]', 'b': '[[0], [0], [10/(11*Cout)], [0]]', 'c': '[[0, 0, 1, 1], [0, 0, 1/11, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [10/11], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, -1/100, -1/100], [0, 0, 0, -1/100], [1/Cout, 0, -2002002001/(100000100000*Cout), -1/(100000*Cout)], [1/10, 1/10, -1/1000000, -1/1000000]]', 'b': '[[0], [0], [10/(1000001*Cout)], [0]]', 'c': '[[0, 0, 1, 1], [0, 0, 1/1000001, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sb0', '0', '12'], ['L0', '0', '12'], ['C0', '12', 'OUT'], ['Sb1', 'IN', 'OUT'], ['L1', 'OUT', '12']]}
['VIN - Sb - L - VOUT', 'VIN - Sb - Sb - L - GND', 'VIN - Sb - Sb - L - GND', 'VOUT - L - Sb - L - GND', 'VOUT - L - Sb - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-L1-Sb0']), ('L1', ['0', 'N-L0-L1-Sb0']), ('L2', ['N-L2-Sb0-Sb1', 'OUT']), ('Sb0', ['N-L0-L1-Sb0', 'N-L2-Sb0-Sb1']), ('Sb1', ['IN', 'N-L2-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-11/1000, 11/1000, -11/1000, 1/100], [11/1000, -21/1000, 21/1000, 0], [-11/1000, 21/1000, -21/1000, 0], [-1/Cout, 0, 0, -1/(50*Cout)]]', 'b': '[[-1/100], [1/100], [-1/100], [0]]', 'c': '[[11/10, -21/10, 21/10, 0], [11/10, -11/10, 11/10, 0], [1/10, -1/10, 1/10, 0], [0, 0, 0, 0], [0, 0, 0, 1]]', 'd': '[[1], [1], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000001/1000, 1000001/1000, -1000001/1000, 1/100], [1000001/1000, -2000001/1000, 2000001/1000, 0], [-1000001/1000, 2000001/1000, -2000001/1000, 0], [-1/Cout, 0, 0, -1/(50*Cout)]]', 'b': '[[-1/100], [1/100], [-1/100], [0]]', 'c': '[[1000001/10, -2000001/10, 2000001/10, 0], [1000001/10, -1000001/10, 1000001/10, 0], [1/10, -1/10, 1/10, 0], [0, 0, 0, 0], [0, 0, 0, 1]]', 'd': '[[1], [1], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'Rb1', 'Ra1', 'L1', 'L2'], 'node_list': ['IN', 'OUT', 'IN_exact', '7', '12', '0'], 'net_list': [['Sb0', 'IN', '7'], ['L0', 'OUT', '7'], ['Sb1', '7', '12'], ['L1', '12', '0'], ['L2', '0', '12']]}
['VIN - Sb - L - VOUT', 'VIN - Sb - Sb - L - GND', 'VIN - Sb - Sb - L - GND', 'VOUT - L - Sb - L - GND', 'VOUT - L - Sb - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-L1-Sb0']), ('L1', ['0', 'N-L0-L1-Sb0']), ('L2', ['N-L2-Sb0-Sb1', 'OUT']), ('Sb0', ['N-L0-L1-Sb0', 'N-L2-Sb0-Sb1']), ('Sb1', ['IN', 'N-L2-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-11/1000, 11/1000, -11/1000, 1/100], [11/1000, -21/1000, 21/1000, 0], [-11/1000, 21/1000, -21/1000, 0], [-1/Cout, 0, 0, -1/(50*Cout)]]', 'b': '[[-1/100], [1/100], [-1/100], [0]]', 'c': '[[11/10, -21/10, 21/10, 0], [11/10, -11/10, 11/10, 0], [1/10, -1/10, 1/10, 0], [0, 0, 0, 0], [0, 0, 0, 1]]', 'd': '[[1], [1], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000001/1000, 1000001/1000, -1000001/1000, 1/100], [1000001/1000, -2000001/1000, 2000001/1000, 0], [-1000001/1000, 2000001/1000, -2000001/1000, 0], [-1/Cout, 0, 0, -1/(50*Cout)]]', 'b': '[[-1/100], [1/100], [-1/100], [0]]', 'c': '[[1000001/10, -2000001/10, 2000001/10, 0], [1000001/10, -1000001/10, 1000001/10, 0], [1/10, -1/10, 1/10, 0], [0, 0, 0, 0], [0, 0, 0, 1]]', 'd': '[[1], [1], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'Rb1', 'Ra1', 'L1', 'L2'], 'node_list': ['IN', 'OUT', 'IN_exact', '7', '12', '0'], 'net_list': [['Sb0', 'IN', '7'], ['L0', 'OUT', '7'], ['Sb1', '7', '12'], ['L1', '12', '0'], ['L2', '0', '12']]}
['VIN - Sb - L - VOUT', 'VIN - Sb - Sb - L - GND', 'VIN - Sb - Sb - L - GND', 'VOUT - L - Sb - L - GND', 'VOUT - L - Sb - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-L1-Sb0']), ('L1', ['0', 'N-L0-L1-Sb0']), ('L2', ['N-L2-Sb0-Sb1', 'OUT']), ('Sb0', ['N-L0-L1-Sb0', 'N-L2-Sb0-Sb1']), ('Sb1', ['IN', 'N-L2-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-11/1000, 11/1000, -11/1000, 1/100], [11/1000, -21/1000, 21/1000, 0], [-11/1000, 21/1000, -21/1000, 0], [-1/Cout, 0, 0, -1/(50*Cout)]]', 'b': '[[-1/100], [1/100], [-1/100], [0]]', 'c': '[[11/10, -21/10, 21/10, 0], [11/10, -11/10, 11/10, 0], [1/10, -1/10, 1/10, 0], [0, 0, 0, 0], [0, 0, 0, 1]]', 'd': '[[1], [1], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000001/1000, 1000001/1000, -1000001/1000, 1/100], [1000001/1000, -2000001/1000, 2000001/1000, 0], [-1000001/1000, 2000001/1000, -2000001/1000, 0], [-1/Cout, 0, 0, -1/(50*Cout)]]', 'b': '[[-1/100], [1/100], [-1/100], [0]]', 'c': '[[1000001/10, -2000001/10, 2000001/10, 0], [1000001/10, -1000001/10, 1000001/10, 0], [1/10, -1/10, 1/10, 0], [0, 0, 0, 0], [0, 0, 0, 1]]', 'd': '[[1], [1], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'Rb1', 'Ra1', 'L1', 'L2'], 'node_list': ['IN', 'OUT', 'IN_exact', '7', '12', '0'], 'net_list': [['Sb0', 'IN', '7'], ['L0', 'OUT', '7'], ['Sb1', '7', '12'], ['L1', '12', '0'], ['L2', '0', '12']]}
['VIN - Sb - L - VOUT', 'VIN - Sb - Sb - L - GND', 'VIN - Sb - Sb - L - GND', 'VOUT - L - Sb - L - GND', 'VOUT - L - Sb - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-L1-Sb0']), ('L1', ['0', 'N-L0-L1-Sb0']), ('L2', ['N-L2-Sb0-Sb1', 'OUT']), ('Sb0', ['N-L0-L1-Sb0', 'N-L2-Sb0-Sb1']), ('Sb1', ['IN', 'N-L2-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-11/1000, 11/1000, -11/1000, 1/100], [11/1000, -21/1000, 21/1000, 0], [-11/1000, 21/1000, -21/1000, 0], [-1/Cout, 0, 0, -1/(50*Cout)]]', 'b': '[[-1/100], [1/100], [-1/100], [0]]', 'c': '[[11/10, -21/10, 21/10, 0], [11/10, -11/10, 11/10, 0], [1/10, -1/10, 1/10, 0], [0, 0, 0, 0], [0, 0, 0, 1]]', 'd': '[[1], [1], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000001/1000, 1000001/1000, -1000001/1000, 1/100], [1000001/1000, -2000001/1000, 2000001/1000, 0], [-1000001/1000, 2000001/1000, -2000001/1000, 0], [-1/Cout, 0, 0, -1/(50*Cout)]]', 'b': '[[-1/100], [1/100], [-1/100], [0]]', 'c': '[[1000001/10, -2000001/10, 2000001/10, 0], [1000001/10, -1000001/10, 1000001/10, 0], [1/10, -1/10, 1/10, 0], [0, 0, 0, 0], [0, 0, 0, 1]]', 'd': '[[1], [1], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'Rb1', 'Ra1', 'L1', 'L2'], 'node_list': ['IN', 'OUT', 'IN_exact', '7', '12', '0'], 'net_list': [['Sb0', 'IN', '7'], ['L0', 'OUT', '7'], ['Sb1', '7', '12'], ['L1', '12', '0'], ['L2', '0', '12']]}
['VIN - Sb - L - VOUT', 'VIN - Sb - Sb - L - GND', 'VIN - Sb - Sb - L - GND', 'VOUT - L - Sb - L - GND', 'VOUT - L - Sb - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-L1-Sb0']), ('L1', ['0', 'N-L0-L1-Sb0']), ('L2', ['N-L2-Sb0-Sb1', 'OUT']), ('Sb0', ['N-L0-L1-Sb0', 'N-L2-Sb0-Sb1']), ('Sb1', ['IN', 'N-L2-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-11/1000, 11/1000, -11/1000, 1/100], [11/1000, -21/1000, 21/1000, 0], [-11/1000, 21/1000, -21/1000, 0], [-1/Cout, 0, 0, -1/(50*Cout)]]', 'b': '[[-1/100], [1/100], [-1/100], [0]]', 'c': '[[11/10, -21/10, 21/10, 0], [11/10, -11/10, 11/10, 0], [1/10, -1/10, 1/10, 0], [0, 0, 0, 0], [0, 0, 0, 1]]', 'd': '[[1], [1], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000001/1000, 1000001/1000, -1000001/1000, 1/100], [1000001/1000, -2000001/1000, 2000001/1000, 0], [-1000001/1000, 2000001/1000, -2000001/1000, 0], [-1/Cout, 0, 0, -1/(50*Cout)]]', 'b': '[[-1/100], [1/100], [-1/100], [0]]', 'c': '[[1000001/10, -2000001/10, 2000001/10, 0], [1000001/10, -1000001/10, 1000001/10, 0], [1/10, -1/10, 1/10, 0], [0, 0, 0, 0], [0, 0, 0, 1]]', 'd': '[[1], [1], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'Rb1', 'Ra1', 'L1', 'L2'], 'node_list': ['IN', 'OUT', 'IN_exact', '7', '12', '0'], 'net_list': [['Sb0', 'IN', '7'], ['L0', 'OUT', '7'], ['Sb1', '7', '12'], ['L1', '12', '0'], ['L2', '0', '12']]}
['VIN - Sb - VOUT', 'VIN - L - C - L - GND', 'VIN - L - C - C - GND', 'VOUT - Sb - L - C - L - GND', 'VOUT - Sb - L - C - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-C1-L0']), ('C1', ['N-C0-C1-L0', 'N-C1-L1']), ('L0', ['0', 'N-C0-C1-L0']), ('L1', ['IN', 'N-C1-L1']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/1100, 0, 1/1100, -1/100, 1/100], [0, 0, 0, 0, -1/100], [-1/(11*Cout), 0, -511/(550*Cout), 0, 0], [1/10, 0, 0, 0, 0], [-1/10, 1/10, 0, 0, 0]]', 'b': '[[1/110], [0], [10/(11*Cout)], [0], [0]]', 'c': '[[0, 0, 0, 0, -1], [0, 0, 0, 1, -1], [-1/11, 0, 1/11, 0, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[0], [0], [10/11], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1000001, 0, 1/100000100, -1/100, 1/100], [0, 0, 0, 0, -1/100], [-1/(1000001*Cout), 0, -1000501/(50000050*Cout), 0, 0], [1/10, 0, 0, 0, 0], [-1/10, 1/10, 0, 0, 0]]', 'b': '[[10000/1000001], [0], [10/(1000001*Cout)], [0], [0]]', 'c': '[[0, 0, 0, 0, -1], [0, 0, 0, 1, -1], [-100000/1000001, 0, 1/1000001, 0, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[0], [0], [1000000/1000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'L1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '7', '12', '0'], 'net_list': [['Sb0', 'OUT', 'IN'], ['L0', 'IN', '7'], ['C0', '7', '12'], ['L1', '12', '0'], ['C1', '0', '12']]}
['VIN - Sb - VOUT', 'VIN - L - C - L - GND', 'VIN - L - C - C - GND', 'VOUT - Sb - L - C - L - GND', 'VOUT - Sb - L - C - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-C1-L0']), ('C1', ['N-C0-C1-L0', 'N-C1-L1']), ('L0', ['0', 'N-C0-C1-L0']), ('L1', ['IN', 'N-C1-L1']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/1100, 0, 1/1100, -1/100, 1/100], [0, 0, 0, 0, -1/100], [-1/(11*Cout), 0, -511/(550*Cout), 0, 0], [1/10, 0, 0, 0, 0], [-1/10, 1/10, 0, 0, 0]]', 'b': '[[1/110], [0], [10/(11*Cout)], [0], [0]]', 'c': '[[0, 0, 0, 0, -1], [0, 0, 0, 1, -1], [-1/11, 0, 1/11, 0, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[0], [0], [10/11], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1000001, 0, 1/100000100, -1/100, 1/100], [0, 0, 0, 0, -1/100], [-1/(1000001*Cout), 0, -1000501/(50000050*Cout), 0, 0], [1/10, 0, 0, 0, 0], [-1/10, 1/10, 0, 0, 0]]', 'b': '[[10000/1000001], [0], [10/(1000001*Cout)], [0], [0]]', 'c': '[[0, 0, 0, 0, -1], [0, 0, 0, 1, -1], [-100000/1000001, 0, 1/1000001, 0, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[0], [0], [1000000/1000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'L1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '7', '12', '0'], 'net_list': [['Sb0', 'OUT', 'IN'], ['L0', 'IN', '7'], ['C0', '7', '12'], ['L1', '12', '0'], ['C1', '0', '12']]}
['VIN - Sb - VOUT', 'VIN - L - C - L - GND', 'VIN - L - C - C - GND', 'VOUT - Sb - L - C - L - GND', 'VOUT - Sb - L - C - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-C1-L0']), ('C1', ['N-C0-C1-L0', 'N-C1-L1']), ('L0', ['0', 'N-C0-C1-L0']), ('L1', ['IN', 'N-C1-L1']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/1100, 0, 1/1100, -1/100, 1/100], [0, 0, 0, 0, -1/100], [-1/(11*Cout), 0, -511/(550*Cout), 0, 0], [1/10, 0, 0, 0, 0], [-1/10, 1/10, 0, 0, 0]]', 'b': '[[1/110], [0], [10/(11*Cout)], [0], [0]]', 'c': '[[0, 0, 0, 0, -1], [0, 0, 0, 1, -1], [-1/11, 0, 1/11, 0, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[0], [0], [10/11], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1000001, 0, 1/100000100, -1/100, 1/100], [0, 0, 0, 0, -1/100], [-1/(1000001*Cout), 0, -1000501/(50000050*Cout), 0, 0], [1/10, 0, 0, 0, 0], [-1/10, 1/10, 0, 0, 0]]', 'b': '[[10000/1000001], [0], [10/(1000001*Cout)], [0], [0]]', 'c': '[[0, 0, 0, 0, -1], [0, 0, 0, 1, -1], [-100000/1000001, 0, 1/1000001, 0, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[0], [0], [1000000/1000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'L1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '7', '12', '0'], 'net_list': [['Sb0', 'OUT', 'IN'], ['L0', 'IN', '7'], ['C0', '7', '12'], ['L1', '12', '0'], ['C1', '0', '12']]}
['VIN - Sb - VOUT', 'VIN - L - C - L - GND', 'VIN - L - C - C - GND', 'VOUT - Sb - L - C - L - GND', 'VOUT - Sb - L - C - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-C1-L0']), ('C1', ['N-C0-C1-L0', 'N-C1-L1']), ('L0', ['0', 'N-C0-C1-L0']), ('L1', ['IN', 'N-C1-L1']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/1100, 0, 1/1100, -1/100, 1/100], [0, 0, 0, 0, -1/100], [-1/(11*Cout), 0, -511/(550*Cout), 0, 0], [1/10, 0, 0, 0, 0], [-1/10, 1/10, 0, 0, 0]]', 'b': '[[1/110], [0], [10/(11*Cout)], [0], [0]]', 'c': '[[0, 0, 0, 0, -1], [0, 0, 0, 1, -1], [-1/11, 0, 1/11, 0, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[0], [0], [10/11], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1000001, 0, 1/100000100, -1/100, 1/100], [0, 0, 0, 0, -1/100], [-1/(1000001*Cout), 0, -1000501/(50000050*Cout), 0, 0], [1/10, 0, 0, 0, 0], [-1/10, 1/10, 0, 0, 0]]', 'b': '[[10000/1000001], [0], [10/(1000001*Cout)], [0], [0]]', 'c': '[[0, 0, 0, 0, -1], [0, 0, 0, 1, -1], [-100000/1000001, 0, 1/1000001, 0, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[0], [0], [1000000/1000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'L1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '7', '12', '0'], 'net_list': [['Sb0', 'OUT', 'IN'], ['L0', 'IN', '7'], ['C0', '7', '12'], ['L1', '12', '0'], ['C1', '0', '12']]}
['VIN - Sb - VOUT', 'VIN - L - C - L - GND', 'VIN - L - C - C - GND', 'VOUT - Sb - L - C - L - GND', 'VOUT - Sb - L - C - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-C1-L0']), ('C1', ['N-C0-C1-L0', 'N-C1-L1']), ('L0', ['0', 'N-C0-C1-L0']), ('L1', ['IN', 'N-C1-L1']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/1100, 0, 1/1100, -1/100, 1/100], [0, 0, 0, 0, -1/100], [-1/(11*Cout), 0, -511/(550*Cout), 0, 0], [1/10, 0, 0, 0, 0], [-1/10, 1/10, 0, 0, 0]]', 'b': '[[1/110], [0], [10/(11*Cout)], [0], [0]]', 'c': '[[0, 0, 0, 0, -1], [0, 0, 0, 1, -1], [-1/11, 0, 1/11, 0, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[0], [0], [10/11], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1000001, 0, 1/100000100, -1/100, 1/100], [0, 0, 0, 0, -1/100], [-1/(1000001*Cout), 0, -1000501/(50000050*Cout), 0, 0], [1/10, 0, 0, 0, 0], [-1/10, 1/10, 0, 0, 0]]', 'b': '[[10000/1000001], [0], [10/(1000001*Cout)], [0], [0]]', 'c': '[[0, 0, 0, 0, -1], [0, 0, 0, 1, -1], [-100000/1000001, 0, 1/1000001, 0, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[0], [0], [1000000/1000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'L1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '7', '12', '0'], 'net_list': [['Sb0', 'OUT', 'IN'], ['L0', 'IN', '7'], ['C0', '7', '12'], ['L1', '12', '0'], ['C1', '0', '12']]}
has to be unconnected
['VIN - Sb - VOUT', 'VIN - Sb - L - L - Sb - GND', 'VIN - Sb - L - L - GND', 'VOUT - L - L - Sb - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-L1-L2']), ('L1', ['N-L0-L1-L2', 'N-L1-Sb0']), ('L2', ['N-L0-L1-L2', 'OUT']), ('Sb0', ['0', 'N-L1-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-36504 violations

['VIN - Sb - VOUT', 'VIN - Sb - L - L - Sb - GND', 'VIN - Sb - L - L - GND', 'VOUT - L - L - Sb - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-L1-L2']), ('L1', ['N-L0-L1-L2', 'N-L1-Sb0']), ('L2', ['N-L0-L1-L2', 'OUT']), ('Sb0', ['0', 'N-L1-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sb - L - L - Sb - GND', 'VIN - Sb - L - L - GND', 'VOUT - L - L - Sb - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-L1-L2']), ('L1', ['N-L0-L1-L2', 'N-L1-Sb0']), ('L2', ['N-L0-L1-L2', 'OUT']), ('Sb0', ['0', 'N-L1-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sb - L - L - Sb - GND', 'VIN - Sb - L - L - GND', 'VOUT - L - L - Sb - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-L1-L2']), ('L1', ['N-L0-L1-L2', 'N-L1-Sb0']), ('L2', ['N-L0-L1-L2', 'OUT']), ('Sb0', ['0', 'N-L1-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sb - L - L - Sb - GND', 'VIN - Sb - L - L - GND', 'VOUT - L - L - Sb - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-L1-L2']), ('L1', ['N-L0-L1-L2', 'N-L1-Sb0']), ('L2', ['N-L0-L1-L2', 'OUT']), ('Sb0', ['0', 'N-L1-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - C - Sb - VOUT', 'VIN - C - L - C - VOUT', 'VIN - C - C - GND', 'VOUT - C - L - C - GND', 'VOUT - Sb - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-C1-L0-Sb0']), ('C1', ['IN', 'N-C0-C1-L0-Sb0']), ('C2', ['N-C2-L0', 'OUT']), ('L0', ['N-C0-C1-L0-Sb0', 'N-C2-L0']), ('Sb0', ['N-C0-C1-L0-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)], [v_C2(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, -1/100, 0, 1/100], [-1/Cout, -51/(50*Cout), 0, 0, -1/Cout], [1/10, 0, 0, 0, 0], [0, 0, 0, -1, 1], [-1/10, -1/10, 0, 1, -11/10]]', 'b': '[[0], [0], [0], [1], [-1]]', 'c': '[[0, 0, 0, 0, -1], [0, 1, -1, 0, 0], [0, 0, 0, 1, -1], [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)], [v_C2(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, -1/100, 0, 1/100], [-1/Cout, -2001/(100000*Cout), 0, 0, -1/(100000*Cout)], [1/10, 0, 0, 0, 0], [0, 0, 0, -1, 1], [-1/10, -1/1000000, 0, 1, -1000001/1000000]]', 'b': '[[0], [0], [0], [1], [-1]]', 'c': '[[0, 0, 0, 0, -1], [0, 1, -1, 0, 0], [0, 0, 0, 1, -1], [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'C1', 'C2'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '8', '0'], 'net_list': [['Sb0', 'OUT', '12'], ['L0', '8', '12'], ['C0', 'OUT', '8'], ['C1', 'IN', '12'], ['C2', '0', '12']]}
['VIN - C - Sb - VOUT', 'VIN - C - L - C - VOUT', 'VIN - C - C - GND', 'VOUT - C - L - C - GND', 'VOUT - Sb - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-C1-L0-Sb0']), ('C1', ['IN', 'N-C0-C1-L0-Sb0']), ('C2', ['N-C2-L0', 'OUT']), ('L0', ['N-C0-C1-L0-Sb0', 'N-C2-L0']), ('Sb0', ['N-C0-C1-L0-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)], [v_C2(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, -1/100, 0, 1/100], [-1/Cout, -51/(50*Cout), 0, 0, -1/Cout], [1/10, 0, 0, 0, 0], [0, 0, 0, -1, 1], [-1/10, -1/10, 0, 1, -11/10]]', 'b': '[[0], [0], [0], [1], [-1]]', 'c': '[[0, 0, 0, 0, -1], [0, 1, -1, 0, 0], [0, 0, 0, 1, -1], [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)], [v_C2(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, -1/100, 0, 1/100], [-1/Cout, -2001/(100000*Cout), 0, 0, -1/(100000*Cout)], [1/10, 0, 0, 0, 0], [0, 0, 0, -1, 1], [-1/10, -1/1000000, 0, 1, -1000001/1000000]]', 'b': '[[0], [0], [0], [1], [-1]]', 'c': '[[0, 0, 0, 0, -1], [0, 1, -1, 0, 0], [0, 0, 0, 1, -1], [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'C1', 'C2'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '8', '0'], 'net_list': [['Sb0', 'OUT', '12'], ['L0', '8', '12'], ['C0', 'OUT', '8'], ['C1', 'IN', '12'], ['C2', '0', '12']]}
['VIN - C - Sb - VOUT', 'VIN - C - L - C - VOUT', 'VIN - C - C - GND', 'VOUT - C - L - C - GND', 'VOUT - Sb - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-C1-L0-Sb0']), ('C1', ['IN', 'N-C0-C1-L0-Sb0']), ('C2', ['N-C2-L0', 'OUT']), ('L0', ['N-C0-C1-L0-Sb0', 'N-C2-L0']), ('Sb0', ['N-C0-C1-L0-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)], [v_C2(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, -1/100, 0, 1/100], [-1/Cout, -51/(50*Cout), 0, 0, -1/Cout], [1/10, 0, 0, 0, 0], [0, 0, 0, -1, 1], [-1/10, -1/10, 0, 1, -11/10]]', 'b': '[[0], [0], [0], [1], [-1]]', 'c': '[[0, 0, 0, 0, -1], [0, 1, -1, 0, 0], [0, 0, 0, 1, -1], [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)], [v_C2(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, -1/100, 0, 1/100], [-1/Cout, -2001/(100000*Cout), 0, 0, -1/(100000*Cout)], [1/10, 0, 0, 0, 0], [0, 0, 0, -1, 1], [-1/10, -1/1000000, 0, 1, -1000001/1000000]]', 'b': '[[0], [0], [0], [1], [-1]]', 'c': '[[0, 0, 0, 0, -1], [0, 1, -1, 0, 0], [0, 0, 0, 1, -1], [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'C1', 'C2'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '8', '0'], 'net_list': [['Sb0', 'OUT', '12'], ['L0', '8', '12'], ['C0', 'OUT', '8'], ['C1', 'IN', '12'], ['C2', '0', '12']]}
['VIN - C - Sb - VOUT', 'VIN - C - L - C - VOUT', 'VIN - C - C - GND', 'VOUT - C - L - C - GND', 'VOUT - Sb - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-C1-L0-Sb0']), ('C1', ['IN', 'N-C0-C1-L0-Sb0']), ('C2', ['N-C2-L0', 'OUT']), ('L0', ['N-C0-C1-L0-Sb0', 'N-C2-L0']), ('Sb0', ['N-C0-C1-L0-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)], [v_C2(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, -1/100, 0, 1/100], [-1/Cout, -51/(50*Cout), 0, 0, -1/Cout], [1/10, 0, 0, 0, 0], [0, 0, 0, -1, 1], [-1/10, -1/10, 0, 1, -11/10]]', 'b': '[[0], [0], [0], [1], [-1]]', 'c': '[[0, 0, 0, 0, -1], [0, 1, -1, 0, 0], [0, 0, 0, 1, -1], [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)], [v_C2(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, -1/100, 0, 1/100], [-1/Cout, -2001/(100000*Cout), 0, 0, -1/(100000*Cout)], [1/10, 0, 0, 0, 0], [0, 0, 0, -1, 1], [-1/10, -1/1000000, 0, 1, -1000001/1000000]]', 'b': '[[0], [0], [0], [1], [-1]]', 'c': '[[0, 0, 0, 0, -1], [0, 1, -1, 0, 0], [0, 0, 0, 1, -1], [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'C1', 'C2'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '8', '0'], 'net_list': [['Sb0', 'OUT', '12'], ['L0', '8', '12'], ['C0', 'OUT', '8'], ['C1', 'IN', '12'], ['C2', '0', '12']]}
['VIN - C - Sb - VOUT', 'VIN - C - L - C - VOUT', 'VIN - C - C - GND', 'VOUT - C - L - C - GND', 'VOUT - Sb - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-C1-L0-Sb0']), ('C1', ['IN', 'N-C0-C1-L0-Sb0']), ('C2', ['N-C2-L0', 'OUT']), ('L0', ['N-C0-C1-L0-Sb0', 'N-C2-L0']), ('Sb0', ['N-C0-C1-L0-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)], [v_C2(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, -1/100, 0, 1/100], [-1/Cout, -51/(50*Cout), 0, 0, -1/Cout], [1/10, 0, 0, 0, 0], [0, 0, 0, -1, 1], [-1/10, -1/10, 0, 1, -11/10]]', 'b': '[[0], [0], [0], [1], [-1]]', 'c': '[[0, 0, 0, 0, -1], [0, 1, -1, 0, 0], [0, 0, 0, 1, -1], [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)], [v_C2(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, -1/100, 0, 1/100], [-1/Cout, -2001/(100000*Cout), 0, 0, -1/(100000*Cout)], [1/10, 0, 0, 0, 0], [0, 0, 0, -1, 1], [-1/10, -1/1000000, 0, 1, -1000001/1000000]]', 'b': '[[0], [0], [0], [1], [-1]]', 'c': '[[0, 0, 0, 0, -1], [0, 1, -1, 0, 0], [0, 0, 0, 1, -1], [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'C1', 'C2'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '8', '0'], 'net_list': [['Sb0', 'OUT', '12'], ['L0', '8', '12'], ['C0', 'OUT', '8'], ['C1', 'IN', '12'], ['C2', '0', '12']]}
['VIN - Sb - VOUT', 'VIN - L - L - VOUT', 'VIN - Sb - L - L - GND', 'VIN - Sb - L - L - GND', 'VIN - L - L - GND', 'VIN - L - L - GND', 'VOUT - Sb - L - L - GND', 'VOUT - Sb - L - L - GND', 'VOUT - L - L - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-L1-L2-L3']), ('L1', ['0', 'N-L0-L1-L2-L3']), ('L2', ['N-L0-L1-L2-L3', 'OUT']), ('L3', ['IN', 'N-L0-L1-L2-L3']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-36504 violations

['VIN - Sb - VOUT', 'VIN - L - L - VOUT', 'VIN - Sb - L - L - GND', 'VIN - Sb - L - L - GND', 'VIN - L - L - GND', 'VIN - L - L - GND', 'VOUT - Sb - L - L - GND', 'VOUT - Sb - L - L - GND', 'VOUT - L - L - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-L1-L2-L3']), ('L1', ['0', 'N-L0-L1-L2-L3']), ('L2', ['N-L0-L1-L2-L3', 'OUT']), ('L3', ['IN', 'N-L0-L1-L2-L3']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - L - L - VOUT', 'VIN - Sb - L - L - GND', 'VIN - Sb - L - L - GND', 'VIN - L - L - GND', 'VIN - L - L - GND', 'VOUT - Sb - L - L - GND', 'VOUT - Sb - L - L - GND', 'VOUT - L - L - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-L1-L2-L3']), ('L1', ['0', 'N-L0-L1-L2-L3']), ('L2', ['N-L0-L1-L2-L3', 'OUT']), ('L3', ['IN', 'N-L0-L1-L2-L3']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - L - L - VOUT', 'VIN - Sb - L - L - GND', 'VIN - Sb - L - L - GND', 'VIN - L - L - GND', 'VIN - L - L - GND', 'VOUT - Sb - L - L - GND', 'VOUT - Sb - L - L - GND', 'VOUT - L - L - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-L1-L2-L3']), ('L1', ['0', 'N-L0-L1-L2-L3']), ('L2', ['N-L0-L1-L2-L3', 'OUT']), ('L3', ['IN', 'N-L0-L1-L2-L3']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - L - L - VOUT', 'VIN - Sb - L - L - GND', 'VIN - Sb - L - L - GND', 'VIN - L - L - GND', 'VIN - L - L - GND', 'VOUT - Sb - L - L - GND', 'VOUT - Sb - L - L - GND', 'VOUT - L - L - GND', 'VOUT - L - L - GND']

 PCC-36504
1
OrderedDict([('L0', ['0', 'N-L0-L1-L2-L3']), ('L1', ['0', 'N-L0-L1-L2-L3']), ('L2', ['N-L0-L1-L2-L3', 'OUT']), ('L3', ['IN', 'N-L0-L1-L2-L3']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
has to be unconnected
total action num is: 2 update:  2 by selecting:  1
<Synchronized wrapper for c_int(16)>
root offset is:  1
has to be unconnected
has to be unconnected
has to be unconnected
has to be unconnected
has to be unconnected
has to be unconnected
has to be unconnected
['VIN - Sb - L - VOUT', 'VIN - C - L - VOUT', 'VIN - C - VOUT', 'VIN - C - GND', 'VOUT - L - Sb - C - GND', 'VOUT - L - C - C - GND', 'VOUT - C - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'OUT']), ('C1', ['IN', 'N-C1-L0-Sb0']), ('C2', ['0', 'IN']), ('L0', ['N-C1-L0-Sb0', 'OUT']), ('Sb0', ['IN', 'N-C1-L0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-36504 violations

['VIN - Sb - L - VOUT', 'VIN - C - L - VOUT', 'VIN - C - VOUT', 'VIN - C - GND', 'VOUT - L - Sb - C - GND', 'VOUT - L - C - C - GND', 'VOUT - C - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'OUT']), ('C1', ['IN', 'N-C1-L0-Sb0']), ('C2', ['0', 'IN']), ('L0', ['N-C1-L0-Sb0', 'OUT']), ('Sb0', ['IN', 'N-C1-L0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - L - VOUT', 'VIN - C - L - VOUT', 'VIN - C - VOUT', 'VIN - C - GND', 'VOUT - L - Sb - C - GND', 'VOUT - L - C - C - GND', 'VOUT - C - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'OUT']), ('C1', ['IN', 'N-C1-L0-Sb0']), ('C2', ['0', 'IN']), ('L0', ['N-C1-L0-Sb0', 'OUT']), ('Sb0', ['IN', 'N-C1-L0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - L - VOUT', 'VIN - C - L - VOUT', 'VIN - C - VOUT', 'VIN - C - GND', 'VOUT - L - Sb - C - GND', 'VOUT - L - C - C - GND', 'VOUT - C - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'OUT']), ('C1', ['IN', 'N-C1-L0-Sb0']), ('C2', ['0', 'IN']), ('L0', ['N-C1-L0-Sb0', 'OUT']), ('Sb0', ['IN', 'N-C1-L0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - L - VOUT', 'VIN - C - L - VOUT', 'VIN - C - VOUT', 'VIN - C - GND', 'VOUT - L - Sb - C - GND', 'VOUT - L - C - C - GND', 'VOUT - C - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'OUT']), ('C1', ['IN', 'N-C1-L0-Sb0']), ('C2', ['0', 'IN']), ('L0', ['N-C1-L0-Sb0', 'OUT']), ('Sb0', ['IN', 'N-C1-L0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - L - Sb - C - VOUT', 'VIN - L - L - C - VOUT', 'VIN - Sb - VOUT', 'VIN - L - Sb - GND', 'VIN - L - L - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND', 'VOUT - Sb - L - Sb - GND', 'VOUT - Sb - L - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'OUT']), ('L0', ['IN', 'N-L0-L1-Sb1']), ('L1', ['0', 'N-L0-L1-Sb1']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-L0-L1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-36504 violations

['VIN - L - Sb - C - VOUT', 'VIN - L - L - C - VOUT', 'VIN - Sb - VOUT', 'VIN - L - Sb - GND', 'VIN - L - L - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND', 'VOUT - Sb - L - Sb - GND', 'VOUT - Sb - L - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'OUT']), ('L0', ['IN', 'N-L0-L1-Sb1']), ('L1', ['0', 'N-L0-L1-Sb1']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-L0-L1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - L - Sb - C - VOUT', 'VIN - L - L - C - VOUT', 'VIN - Sb - VOUT', 'VIN - L - Sb - GND', 'VIN - L - L - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND', 'VOUT - Sb - L - Sb - GND', 'VOUT - Sb - L - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'OUT']), ('L0', ['IN', 'N-L0-L1-Sb1']), ('L1', ['0', 'N-L0-L1-Sb1']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-L0-L1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - L - Sb - C - VOUT', 'VIN - L - L - C - VOUT', 'VIN - Sb - VOUT', 'VIN - L - Sb - GND', 'VIN - L - L - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND', 'VOUT - Sb - L - Sb - GND', 'VOUT - Sb - L - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'OUT']), ('L0', ['IN', 'N-L0-L1-Sb1']), ('L1', ['0', 'N-L0-L1-Sb1']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-L0-L1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - L - Sb - C - VOUT', 'VIN - L - L - C - VOUT', 'VIN - Sb - VOUT', 'VIN - L - Sb - GND', 'VIN - L - L - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND', 'VOUT - Sb - L - Sb - GND', 'VOUT - Sb - L - L - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'OUT']), ('L0', ['IN', 'N-L0-L1-Sb1']), ('L1', ['0', 'N-L0-L1-Sb1']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-L0-L1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - C - VOUT', 'VIN - C - Sb - GND', 'VIN - C - Sb - GND', 'VIN - L - Sb - GND', 'VIN - L - Sb - GND', 'VOUT - C - C - Sb - GND', 'VOUT - C - C - Sb - GND', 'VOUT - C - L - Sb - GND', 'VOUT - C - L - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'N-C0-L0-Sb0-Sb1']), ('C1', ['IN', 'OUT']), ('L0', ['IN', 'N-C0-L0-Sb0-Sb1']), ('Sb0', ['0', 'N-C0-L0-Sb0-Sb1']), ('Sb1', ['0', 'N-C0-L0-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, -1/100], [0, -601/(50*Cout), 12/Cout, 2/Cout], [0, 6/5, -6/5, -1/5], [1/10, 1/5, -1/5, -1/5]]', 'b': '[[0], [10/Cout], [-1], [0]]', 'c': '[[0, 1, -1, -1], [0, 1, -1, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, -1/100], [0, -501001/(50000*Cout), 500001/(50000*Cout), 1/(50000*Cout)], [0, 500001/500000, -500001/500000, -1/500000], [1/10, 1/500000, -1/500000, -1/500000]]', 'b': '[[0], [10/Cout], [-1], [0]]', 'c': '[[0, 1, -1, -1], [0, 1, -1, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'Rb1', 'Ra1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sb0', '0', '12'], ['L0', '12', 'IN'], ['C0', 'OUT', 'IN'], ['Sb1', '0', '12'], ['C1', 'IN', '12']]}
['VIN - C - VOUT', 'VIN - C - Sb - GND', 'VIN - C - Sb - GND', 'VIN - L - Sb - GND', 'VIN - L - Sb - GND', 'VOUT - C - C - Sb - GND', 'VOUT - C - C - Sb - GND', 'VOUT - C - L - Sb - GND', 'VOUT - C - L - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'N-C0-L0-Sb0-Sb1']), ('C1', ['IN', 'OUT']), ('L0', ['IN', 'N-C0-L0-Sb0-Sb1']), ('Sb0', ['0', 'N-C0-L0-Sb0-Sb1']), ('Sb1', ['0', 'N-C0-L0-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, -1/100], [0, -601/(50*Cout), 12/Cout, 2/Cout], [0, 6/5, -6/5, -1/5], [1/10, 1/5, -1/5, -1/5]]', 'b': '[[0], [10/Cout], [-1], [0]]', 'c': '[[0, 1, -1, -1], [0, 1, -1, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, -1/100], [0, -501001/(50000*Cout), 500001/(50000*Cout), 1/(50000*Cout)], [0, 500001/500000, -500001/500000, -1/500000], [1/10, 1/500000, -1/500000, -1/500000]]', 'b': '[[0], [10/Cout], [-1], [0]]', 'c': '[[0, 1, -1, -1], [0, 1, -1, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'Rb1', 'Ra1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sb0', '0', '12'], ['L0', '12', 'IN'], ['C0', 'OUT', 'IN'], ['Sb1', '0', '12'], ['C1', 'IN', '12']]}
['VIN - C - VOUT', 'VIN - C - Sb - GND', 'VIN - C - Sb - GND', 'VIN - L - Sb - GND', 'VIN - L - Sb - GND', 'VOUT - C - C - Sb - GND', 'VOUT - C - C - Sb - GND', 'VOUT - C - L - Sb - GND', 'VOUT - C - L - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'N-C0-L0-Sb0-Sb1']), ('C1', ['IN', 'OUT']), ('L0', ['IN', 'N-C0-L0-Sb0-Sb1']), ('Sb0', ['0', 'N-C0-L0-Sb0-Sb1']), ('Sb1', ['0', 'N-C0-L0-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, -1/100], [0, -601/(50*Cout), 12/Cout, 2/Cout], [0, 6/5, -6/5, -1/5], [1/10, 1/5, -1/5, -1/5]]', 'b': '[[0], [10/Cout], [-1], [0]]', 'c': '[[0, 1, -1, -1], [0, 1, -1, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, -1/100], [0, -501001/(50000*Cout), 500001/(50000*Cout), 1/(50000*Cout)], [0, 500001/500000, -500001/500000, -1/500000], [1/10, 1/500000, -1/500000, -1/500000]]', 'b': '[[0], [10/Cout], [-1], [0]]', 'c': '[[0, 1, -1, -1], [0, 1, -1, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'Rb1', 'Ra1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sb0', '0', '12'], ['L0', '12', 'IN'], ['C0', 'OUT', 'IN'], ['Sb1', '0', '12'], ['C1', 'IN', '12']]}
['VIN - C - VOUT', 'VIN - C - Sb - GND', 'VIN - C - Sb - GND', 'VIN - L - Sb - GND', 'VIN - L - Sb - GND', 'VOUT - C - C - Sb - GND', 'VOUT - C - C - Sb - GND', 'VOUT - C - L - Sb - GND', 'VOUT - C - L - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'N-C0-L0-Sb0-Sb1']), ('C1', ['IN', 'OUT']), ('L0', ['IN', 'N-C0-L0-Sb0-Sb1']), ('Sb0', ['0', 'N-C0-L0-Sb0-Sb1']), ('Sb1', ['0', 'N-C0-L0-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, -1/100], [0, -601/(50*Cout), 12/Cout, 2/Cout], [0, 6/5, -6/5, -1/5], [1/10, 1/5, -1/5, -1/5]]', 'b': '[[0], [10/Cout], [-1], [0]]', 'c': '[[0, 1, -1, -1], [0, 1, -1, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, -1/100], [0, -501001/(50000*Cout), 500001/(50000*Cout), 1/(50000*Cout)], [0, 500001/500000, -500001/500000, -1/500000], [1/10, 1/500000, -1/500000, -1/500000]]', 'b': '[[0], [10/Cout], [-1], [0]]', 'c': '[[0, 1, -1, -1], [0, 1, -1, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'Rb1', 'Ra1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sb0', '0', '12'], ['L0', '12', 'IN'], ['C0', 'OUT', 'IN'], ['Sb1', '0', '12'], ['C1', 'IN', '12']]}
['VIN - C - VOUT', 'VIN - C - Sb - GND', 'VIN - C - Sb - GND', 'VIN - L - Sb - GND', 'VIN - L - Sb - GND', 'VOUT - C - C - Sb - GND', 'VOUT - C - C - Sb - GND', 'VOUT - C - L - Sb - GND', 'VOUT - C - L - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'N-C0-L0-Sb0-Sb1']), ('C1', ['IN', 'OUT']), ('L0', ['IN', 'N-C0-L0-Sb0-Sb1']), ('Sb0', ['0', 'N-C0-L0-Sb0-Sb1']), ('Sb1', ['0', 'N-C0-L0-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, -1/100], [0, -601/(50*Cout), 12/Cout, 2/Cout], [0, 6/5, -6/5, -1/5], [1/10, 1/5, -1/5, -1/5]]', 'b': '[[0], [10/Cout], [-1], [0]]', 'c': '[[0, 1, -1, -1], [0, 1, -1, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, -1/100], [0, -501001/(50000*Cout), 500001/(50000*Cout), 1/(50000*Cout)], [0, 500001/500000, -500001/500000, -1/500000], [1/10, 1/500000, -1/500000, -1/500000]]', 'b': '[[0], [10/Cout], [-1], [0]]', 'c': '[[0, 1, -1, -1], [0, 1, -1, 0], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'Rb1', 'Ra1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sb0', '0', '12'], ['L0', '12', 'IN'], ['C0', 'OUT', 'IN'], ['Sb1', '0', '12'], ['C1', 'IN', '12']]}
has to be unconnected
has to be unconnected
total action num is: 2 update:  2 by selecting:  1
<Synchronized wrapper for c_int(6)>
root offset is:  1
has to be unconnected
has to be unconnected
['VIN - C - VOUT', 'VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - C - Sb - GND', 'VIN - C - C - Sb - GND', 'VIN - Sb - C - Sb - GND', 'VOUT - C - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'OUT']), ('C1', ['IN', 'OUT']), ('C2', ['N-C2-Sb1', 'OUT']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-C2-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-36504 violations

['VIN - C - VOUT', 'VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - C - Sb - GND', 'VIN - C - C - Sb - GND', 'VIN - Sb - C - Sb - GND', 'VOUT - C - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'OUT']), ('C1', ['IN', 'OUT']), ('C2', ['N-C2-Sb1', 'OUT']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-C2-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - C - VOUT', 'VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - C - Sb - GND', 'VIN - C - C - Sb - GND', 'VIN - Sb - C - Sb - GND', 'VOUT - C - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'OUT']), ('C1', ['IN', 'OUT']), ('C2', ['N-C2-Sb1', 'OUT']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-C2-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - C - VOUT', 'VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - C - Sb - GND', 'VIN - C - C - Sb - GND', 'VIN - Sb - C - Sb - GND', 'VOUT - C - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'OUT']), ('C1', ['IN', 'OUT']), ('C2', ['N-C2-Sb1', 'OUT']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-C2-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - C - VOUT', 'VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - C - Sb - GND', 'VIN - C - C - Sb - GND', 'VIN - Sb - C - Sb - GND', 'VOUT - C - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['IN', 'OUT']), ('C1', ['IN', 'OUT']), ('C2', ['N-C2-Sb1', 'OUT']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-C2-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
has to be unconnected
total action num is: 2 update:  2 by selecting:  0
<Synchronized wrapper for c_int(3)>
root offset is:  1
has to be unconnected
has to be unconnected
['VIN - Sb - Sb - VOUT', 'VIN - C - Sb - Sb - VOUT', 'VIN - C - GND', 'VOUT - Sb - Sb - C - GND', 'VOUT - Sb - Sb - C - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'IN']), ('C1', ['IN', 'N-C1-Sb2']), ('Sb0', ['IN', 'N-Sb0-Sb1-Sb2']), ('Sb1', ['N-Sb0-Sb1-Sb2', 'OUT']), ('Sb2', ['N-C1-Sb2', 'N-Sb0-Sb1-Sb2'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-103/(150*Cout), 1/(3*Cout), -2/(3*Cout)], [1/30, -1/15, 1/30], [-1/15, 1/30, -16/15]]', 'b': '[[0], [0], [-1]]', 'c': '[[1/3, 1/3, -2/3], [0, 1, -1], [0, 0, -1], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-3001/(150000*Cout), 1/(300000*Cout), -1/(150000*Cout)], [1/3000000, -1/1500000, 1/3000000], [-1/1500000, 1/3000000, -1500001/1500000]]', 'b': '[[0], [0], [-1]]', 'c': '[[1/3, 1/3, -2/3], [0, 1, -1], [0, 0, -1], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'Rb1', 'Ra1', 'C1', 'Rb2', 'Ra2'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '5', '0'], 'net_list': [['Sb0', '12', '5'], ['C0', '5', 'IN'], ['Sb1', 'OUT', '12'], ['C1', '0', 'IN'], ['Sb2', 'IN', '12']]}
['VIN - Sb - Sb - VOUT', 'VIN - C - Sb - Sb - VOUT', 'VIN - C - GND', 'VOUT - Sb - Sb - C - GND', 'VOUT - Sb - Sb - C - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'IN']), ('C1', ['IN', 'N-C1-Sb2']), ('Sb0', ['IN', 'N-Sb0-Sb1-Sb2']), ('Sb1', ['N-Sb0-Sb1-Sb2', 'OUT']), ('Sb2', ['N-C1-Sb2', 'N-Sb0-Sb1-Sb2'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-103/(150*Cout), 1/(3*Cout), -2/(3*Cout)], [1/30, -1/15, 1/30], [-1/15, 1/30, -16/15]]', 'b': '[[0], [0], [-1]]', 'c': '[[1/3, 1/3, -2/3], [0, 1, -1], [0, 0, -1], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-3001/(150000*Cout), 1/(300000*Cout), -1/(150000*Cout)], [1/3000000, -1/1500000, 1/3000000], [-1/1500000, 1/3000000, -1500001/1500000]]', 'b': '[[0], [0], [-1]]', 'c': '[[1/3, 1/3, -2/3], [0, 1, -1], [0, 0, -1], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'Rb1', 'Ra1', 'C1', 'Rb2', 'Ra2'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '5', '0'], 'net_list': [['Sb0', '12', '5'], ['C0', '5', 'IN'], ['Sb1', 'OUT', '12'], ['C1', '0', 'IN'], ['Sb2', 'IN', '12']]}
['VIN - Sb - Sb - VOUT', 'VIN - C - Sb - Sb - VOUT', 'VIN - C - GND', 'VOUT - Sb - Sb - C - GND', 'VOUT - Sb - Sb - C - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'IN']), ('C1', ['IN', 'N-C1-Sb2']), ('Sb0', ['IN', 'N-Sb0-Sb1-Sb2']), ('Sb1', ['N-Sb0-Sb1-Sb2', 'OUT']), ('Sb2', ['N-C1-Sb2', 'N-Sb0-Sb1-Sb2'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-103/(150*Cout), 1/(3*Cout), -2/(3*Cout)], [1/30, -1/15, 1/30], [-1/15, 1/30, -16/15]]', 'b': '[[0], [0], [-1]]', 'c': '[[1/3, 1/3, -2/3], [0, 1, -1], [0, 0, -1], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-3001/(150000*Cout), 1/(300000*Cout), -1/(150000*Cout)], [1/3000000, -1/1500000, 1/3000000], [-1/1500000, 1/3000000, -1500001/1500000]]', 'b': '[[0], [0], [-1]]', 'c': '[[1/3, 1/3, -2/3], [0, 1, -1], [0, 0, -1], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'Rb1', 'Ra1', 'C1', 'Rb2', 'Ra2'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '5', '0'], 'net_list': [['Sb0', '12', '5'], ['C0', '5', 'IN'], ['Sb1', 'OUT', '12'], ['C1', '0', 'IN'], ['Sb2', 'IN', '12']]}
['VIN - Sb - Sb - VOUT', 'VIN - C - Sb - Sb - VOUT', 'VIN - C - GND', 'VOUT - Sb - Sb - C - GND', 'VOUT - Sb - Sb - C - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'IN']), ('C1', ['IN', 'N-C1-Sb2']), ('Sb0', ['IN', 'N-Sb0-Sb1-Sb2']), ('Sb1', ['N-Sb0-Sb1-Sb2', 'OUT']), ('Sb2', ['N-C1-Sb2', 'N-Sb0-Sb1-Sb2'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-103/(150*Cout), 1/(3*Cout), -2/(3*Cout)], [1/30, -1/15, 1/30], [-1/15, 1/30, -16/15]]', 'b': '[[0], [0], [-1]]', 'c': '[[1/3, 1/3, -2/3], [0, 1, -1], [0, 0, -1], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-3001/(150000*Cout), 1/(300000*Cout), -1/(150000*Cout)], [1/3000000, -1/1500000, 1/3000000], [-1/1500000, 1/3000000, -1500001/1500000]]', 'b': '[[0], [0], [-1]]', 'c': '[[1/3, 1/3, -2/3], [0, 1, -1], [0, 0, -1], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'Rb1', 'Ra1', 'C1', 'Rb2', 'Ra2'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '5', '0'], 'net_list': [['Sb0', '12', '5'], ['C0', '5', 'IN'], ['Sb1', 'OUT', '12'], ['C1', '0', 'IN'], ['Sb2', 'IN', '12']]}
['VIN - Sb - Sb - VOUT', 'VIN - C - Sb - Sb - VOUT', 'VIN - C - GND', 'VOUT - Sb - Sb - C - GND', 'VOUT - Sb - Sb - C - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'IN']), ('C1', ['IN', 'N-C1-Sb2']), ('Sb0', ['IN', 'N-Sb0-Sb1-Sb2']), ('Sb1', ['N-Sb0-Sb1-Sb2', 'OUT']), ('Sb2', ['N-C1-Sb2', 'N-Sb0-Sb1-Sb2'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-103/(150*Cout), 1/(3*Cout), -2/(3*Cout)], [1/30, -1/15, 1/30], [-1/15, 1/30, -16/15]]', 'b': '[[0], [0], [-1]]', 'c': '[[1/3, 1/3, -2/3], [0, 1, -1], [0, 0, -1], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-3001/(150000*Cout), 1/(300000*Cout), -1/(150000*Cout)], [1/3000000, -1/1500000, 1/3000000], [-1/1500000, 1/3000000, -1500001/1500000]]', 'b': '[[0], [0], [-1]]', 'c': '[[1/3, 1/3, -2/3], [0, 1, -1], [0, 0, -1], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'Rb1', 'Ra1', 'C1', 'Rb2', 'Ra2'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '5', '0'], 'net_list': [['Sb0', '12', '5'], ['C0', '5', 'IN'], ['Sb1', 'OUT', '12'], ['C1', '0', 'IN'], ['Sb2', 'IN', '12']]}
total action num is: 2 update:  2 by selecting:  0
<Synchronized wrapper for c_int(1)>
root offset is:  1
has to be unconnected
total action num is: 2 update:  2 by selecting:  0
<Synchronized wrapper for c_int(1)>
root offset is:  1
has to be unconnected
total action num is: 2 update:  2 by selecting:  1
<Synchronized wrapper for c_int(1)>
root offset is:  1
total action num is: 5 update:  3 by selecting:  0
<Synchronized wrapper for c_int(1)>
root offset is:  1
total action num is: 5 update:  1 by selecting:  0
<Synchronized wrapper for c_int(1)>
root offset is:  1
['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - VOUT', 'VIN - Sb - C - GND', 'VIN - Sb - C - GND', 'VIN - Sb - C - C - GND', 'VOUT - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'OUT']), ('C1', ['N-C1-Sb0', 'OUT']), ('Sb0', ['IN', 'N-C1-Sb0']), ('Sb1', ['IN', 'OUT']), ('Sb2', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-36504 violations

['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - VOUT', 'VIN - Sb - C - GND', 'VIN - Sb - C - GND', 'VIN - Sb - C - C - GND', 'VOUT - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'OUT']), ('C1', ['N-C1-Sb0', 'OUT']), ('Sb0', ['IN', 'N-C1-Sb0']), ('Sb1', ['IN', 'OUT']), ('Sb2', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - VOUT', 'VIN - Sb - C - GND', 'VIN - Sb - C - GND', 'VIN - Sb - C - C - GND', 'VOUT - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'OUT']), ('C1', ['N-C1-Sb0', 'OUT']), ('Sb0', ['IN', 'N-C1-Sb0']), ('Sb1', ['IN', 'OUT']), ('Sb2', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - VOUT', 'VIN - Sb - C - GND', 'VIN - Sb - C - GND', 'VIN - Sb - C - C - GND', 'VOUT - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'OUT']), ('C1', ['N-C1-Sb0', 'OUT']), ('Sb0', ['IN', 'N-C1-Sb0']), ('Sb1', ['IN', 'OUT']), ('Sb2', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - VOUT', 'VIN - Sb - C - GND', 'VIN - Sb - C - GND', 'VIN - Sb - C - C - GND', 'VOUT - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'OUT']), ('C1', ['N-C1-Sb0', 'OUT']), ('Sb0', ['IN', 'N-C1-Sb0']), ('Sb1', ['IN', 'OUT']), ('Sb2', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
total action num is: 4 update:  1 by selecting:  0
<Synchronized wrapper for c_int(1)>
root offset is:  1
['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - GND', 'VIN - Sb - Sb - C - GND', 'VIN - Sb - C - GND', 'VIN - Sb - Sb - C - GND', 'VOUT - C - GND', 'VOUT - Sb - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-Sb0']), ('C1', ['0', 'OUT']), ('Sb0', ['N-C0-Sb0', 'OUT']), ('Sb1', ['IN', 'OUT']), ('Sb2', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-36504 violations

['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - GND', 'VIN - Sb - Sb - C - GND', 'VIN - Sb - C - GND', 'VIN - Sb - Sb - C - GND', 'VOUT - C - GND', 'VOUT - Sb - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-Sb0']), ('C1', ['0', 'OUT']), ('Sb0', ['N-C0-Sb0', 'OUT']), ('Sb1', ['IN', 'OUT']), ('Sb2', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - GND', 'VIN - Sb - Sb - C - GND', 'VIN - Sb - C - GND', 'VIN - Sb - Sb - C - GND', 'VOUT - C - GND', 'VOUT - Sb - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-Sb0']), ('C1', ['0', 'OUT']), ('Sb0', ['N-C0-Sb0', 'OUT']), ('Sb1', ['IN', 'OUT']), ('Sb2', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - GND', 'VIN - Sb - Sb - C - GND', 'VIN - Sb - C - GND', 'VIN - Sb - Sb - C - GND', 'VOUT - C - GND', 'VOUT - Sb - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-Sb0']), ('C1', ['0', 'OUT']), ('Sb0', ['N-C0-Sb0', 'OUT']), ('Sb1', ['IN', 'OUT']), ('Sb2', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - GND', 'VIN - Sb - Sb - C - GND', 'VIN - Sb - C - GND', 'VIN - Sb - Sb - C - GND', 'VOUT - C - GND', 'VOUT - Sb - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-Sb0']), ('C1', ['0', 'OUT']), ('Sb0', ['N-C0-Sb0', 'OUT']), ('Sb1', ['IN', 'OUT']), ('Sb2', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
total action num is: 6 update:  1 by selecting:  0
<Synchronized wrapper for c_int(1)>
root offset is:  1
['VIN - Sb - VOUT', 'VIN - C - C - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - GND', 'VIN - C - GND', 'VIN - Sb - C - GND', 'VIN - Sb - C - GND', 'VOUT - Sb - C - GND', 'VOUT - Sb - C - GND', 'VOUT - C - GND', 'VOUT - Sb - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'OUT']), ('C1', ['0', 'IN']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['IN', 'OUT']), ('Sb2', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-36504 violations

['VIN - Sb - VOUT', 'VIN - C - C - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - GND', 'VIN - C - GND', 'VIN - Sb - C - GND', 'VIN - Sb - C - GND', 'VOUT - Sb - C - GND', 'VOUT - Sb - C - GND', 'VOUT - C - GND', 'VOUT - Sb - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'OUT']), ('C1', ['0', 'IN']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['IN', 'OUT']), ('Sb2', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - C - C - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - GND', 'VIN - C - GND', 'VIN - Sb - C - GND', 'VIN - Sb - C - GND', 'VOUT - Sb - C - GND', 'VOUT - Sb - C - GND', 'VOUT - C - GND', 'VOUT - Sb - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'OUT']), ('C1', ['0', 'IN']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['IN', 'OUT']), ('Sb2', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - C - C - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - GND', 'VIN - C - GND', 'VIN - Sb - C - GND', 'VIN - Sb - C - GND', 'VOUT - Sb - C - GND', 'VOUT - Sb - C - GND', 'VOUT - C - GND', 'VOUT - Sb - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'OUT']), ('C1', ['0', 'IN']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['IN', 'OUT']), ('Sb2', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - C - C - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - GND', 'VIN - C - GND', 'VIN - Sb - C - GND', 'VIN - Sb - C - GND', 'VOUT - Sb - C - GND', 'VOUT - Sb - C - GND', 'VOUT - C - GND', 'VOUT - Sb - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'OUT']), ('C1', ['0', 'IN']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['IN', 'OUT']), ('Sb2', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
total action num is: 4 update:  1 by selecting:  0
<Synchronized wrapper for c_int(1)>
root offset is:  1
['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - C - GND', 'VIN - Sb - Sb - C - GND', 'VIN - Sb - C - C - GND', 'VIN - Sb - Sb - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-C1-Sb0']), ('C1', ['N-C0-C1-Sb0', 'OUT']), ('Sb0', ['N-C0-C1-Sb0', 'OUT']), ('Sb1', ['IN', 'OUT']), ('Sb2', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-36504 violations

['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - C - GND', 'VIN - Sb - Sb - C - GND', 'VIN - Sb - C - C - GND', 'VIN - Sb - Sb - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-C1-Sb0']), ('C1', ['N-C0-C1-Sb0', 'OUT']), ('Sb0', ['N-C0-C1-Sb0', 'OUT']), ('Sb1', ['IN', 'OUT']), ('Sb2', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - C - GND', 'VIN - Sb - Sb - C - GND', 'VIN - Sb - C - C - GND', 'VIN - Sb - Sb - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-C1-Sb0']), ('C1', ['N-C0-C1-Sb0', 'OUT']), ('Sb0', ['N-C0-C1-Sb0', 'OUT']), ('Sb1', ['IN', 'OUT']), ('Sb2', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - C - GND', 'VIN - Sb - Sb - C - GND', 'VIN - Sb - C - C - GND', 'VIN - Sb - Sb - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-C1-Sb0']), ('C1', ['N-C0-C1-Sb0', 'OUT']), ('Sb0', ['N-C0-C1-Sb0', 'OUT']), ('Sb1', ['IN', 'OUT']), ('Sb2', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - C - GND', 'VIN - Sb - Sb - C - GND', 'VIN - Sb - C - C - GND', 'VIN - Sb - Sb - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-C1-Sb0']), ('C1', ['N-C0-C1-Sb0', 'OUT']), ('Sb0', ['N-C0-C1-Sb0', 'OUT']), ('Sb1', ['IN', 'OUT']), ('Sb2', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
total action num is: 5 update:  1 by selecting:  0
<Synchronized wrapper for c_int(1)>
root offset is:  1
['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - C - GND', 'VIN - Sb - C - C - GND', 'VIN - Sb - C - C - GND', 'VOUT - C - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-C1']), ('C1', ['N-C0-C1', 'OUT']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['IN', 'OUT']), ('Sb2', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-36504 violations

['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - C - GND', 'VIN - Sb - C - C - GND', 'VIN - Sb - C - C - GND', 'VOUT - C - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-C1']), ('C1', ['N-C0-C1', 'OUT']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['IN', 'OUT']), ('Sb2', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - C - GND', 'VIN - Sb - C - C - GND', 'VIN - Sb - C - C - GND', 'VOUT - C - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-C1']), ('C1', ['N-C0-C1', 'OUT']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['IN', 'OUT']), ('Sb2', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - C - GND', 'VIN - Sb - C - C - GND', 'VIN - Sb - C - C - GND', 'VOUT - C - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-C1']), ('C1', ['N-C0-C1', 'OUT']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['IN', 'OUT']), ('Sb2', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - C - GND', 'VIN - Sb - C - C - GND', 'VIN - Sb - C - C - GND', 'VOUT - C - C - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-C1']), ('C1', ['N-C0-C1', 'OUT']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['IN', 'OUT']), ('Sb2', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
total action num is: 4 update:  1 by selecting:  0
<Synchronized wrapper for c_int(1)>
root offset is:  1
['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - C - GND', 'VIN - Sb - C - Sb - GND', 'VIN - Sb - C - C - GND', 'VIN - Sb - C - Sb - GND', 'VOUT - C - C - GND', 'VOUT - C - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-C1-Sb0']), ('C1', ['N-C0-C1-Sb0', 'OUT']), ('Sb0', ['0', 'N-C0-C1-Sb0']), ('Sb1', ['IN', 'OUT']), ('Sb2', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-36504 violations

['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - C - GND', 'VIN - Sb - C - Sb - GND', 'VIN - Sb - C - C - GND', 'VIN - Sb - C - Sb - GND', 'VOUT - C - C - GND', 'VOUT - C - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-C1-Sb0']), ('C1', ['N-C0-C1-Sb0', 'OUT']), ('Sb0', ['0', 'N-C0-C1-Sb0']), ('Sb1', ['IN', 'OUT']), ('Sb2', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - C - GND', 'VIN - Sb - C - Sb - GND', 'VIN - Sb - C - C - GND', 'VIN - Sb - C - Sb - GND', 'VOUT - C - C - GND', 'VOUT - C - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-C1-Sb0']), ('C1', ['N-C0-C1-Sb0', 'OUT']), ('Sb0', ['0', 'N-C0-C1-Sb0']), ('Sb1', ['IN', 'OUT']), ('Sb2', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - C - GND', 'VIN - Sb - C - Sb - GND', 'VIN - Sb - C - C - GND', 'VIN - Sb - C - Sb - GND', 'VOUT - C - C - GND', 'VOUT - C - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-C1-Sb0']), ('C1', ['N-C0-C1-Sb0', 'OUT']), ('Sb0', ['0', 'N-C0-C1-Sb0']), ('Sb1', ['IN', 'OUT']), ('Sb2', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - C - GND', 'VIN - Sb - C - Sb - GND', 'VIN - Sb - C - C - GND', 'VIN - Sb - C - Sb - GND', 'VOUT - C - C - GND', 'VOUT - C - Sb - GND']

 PCC-36504
1
OrderedDict([('C0', ['0', 'N-C0-C1-Sb0']), ('C1', ['N-C0-C1-Sb0', 'OUT']), ('Sb0', ['0', 'N-C0-C1-Sb0']), ('Sb1', ['IN', 'OUT']), ('Sb2', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
total action num is: 4 update:  1 by selecting:  0
<Synchronized wrapper for c_int(1)>
root offset is:  1
total action num is: 1 update:  1 by selecting:  0
<Synchronized wrapper for c_int(1)>
root offset is:  1
1
[100, 42, 16, 6, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
current step is:  0
instant reward: 0 cumulate reward:  0 planning time: 154 cumulate planning time: 154
current step is:  1
instant reward: 0 cumulate reward:  0 planning time: 42 cumulate planning time: 196
current step is:  2
instant reward: 0 cumulate reward:  0 planning time: 11 cumulate planning time: 207
current step is:  3
instant reward: 0 cumulate reward:  0 planning time: 5 cumulate planning time: 212
current step is:  4
instant reward: 0 cumulate reward:  0 planning time: 7 cumulate planning time: 219
current step is:  5
instant reward: 0 cumulate reward:  0 planning time: 3 cumulate planning time: 222
current step is:  6
instant reward: 0 cumulate reward:  0 planning time: 4 cumulate planning time: 226
current step is:  7
instant reward: 0 cumulate reward:  0 planning time: 3 cumulate planning time: 229
current step is:  8
instant reward: 0 cumulate reward:  0 planning time: 4 cumulate planning time: 233
current step is:  9
instant reward: 0 cumulate reward:  0 planning time: 4 cumulate planning time: 237
current step is:  10
instant reward: 0 cumulate reward:  0 planning time: 5 cumulate planning time: 242
current step is:  11
instant reward: 0 cumulate reward:  0 planning time: 4 cumulate planning time: 246
current step is:  12
instant reward: 0 cumulate reward:  0 planning time: 5 cumulate planning time: 251
current step is:  13
instant reward: 0 cumulate reward:  0 planning time: 4 cumulate planning time: 255
current step is:  14
instant reward: 0 cumulate reward:  0 planning time: 5 cumulate planning time: 260
current step is:  15
instant reward: 0 cumulate reward:  0 planning time: 3 cumulate planning time: 263
current step is:  16
instant reward: 0 cumulate reward:  0.0 planning time: 4 cumulate planning time: 267
title result with parameter:[0.1, 10, 100] 
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
{'[0.1, 10, 100]': {'para': [0.1, 10, 100], 'efficiency': 0.31055308479102706, 'Vout': 34.14139727277291}, '[0.3, 10, 100]': {'para': [0.3, 10, 100], 'efficiency': 0.7841785946395599, 'Vout': 81.3392759364053}, '[0.5, 10, 100]': {'para': [0.5, 10, 100], 'efficiency': 0.893032707840014, 'Vout': 92.1817584096588}, '[0.7, 10, 100]': {'para': [0.7, 10, 100], 'efficiency': 0.9289189493807221, 'Vout': 95.7614327282271}, '[0.9, 10, 100]': {'para': [0.9, 10, 100], 'efficiency': 0.9446983988871631, 'Vout': 97.3377810623933}}
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
{'[0.1, 10, 100]': {'para': [0.1, 10, 100], 'efficiency': 0.7162945623079843, 'Vout': 71.62352757124323}, '[0.3, 10, 100]': {'para': [0.3, 10, 100], 'efficiency': 0.8813192417132915, 'Vout': 88.12489533746589}, '[0.5, 10, 100]': {'para': [0.5, 10, 100], 'efficiency': 0.9244241701969167, 'Vout': 92.43801682281754}, '[0.7, 10, 100]': {'para': [0.7, 10, 100], 'efficiency': 0.9442634756061741, 'Vout': 94.42533802669732}, '[0.9, 10, 100]': {'para': [0.9, 10, 100], 'efficiency': 0.955654909687365, 'Vout': 95.5682656794316}}
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
{'[0.1, 10, 100]': {'para': [0.1, 10, 100], 'efficiency': 0.7038832011565425, 'Vout': 70.73349066223369}, '[0.3, 10, 100]': {'para': [0.3, 10, 100], 'efficiency': 0.8763125032051725, 'Vout': 87.77304839586049}, '[0.5, 10, 100]': {'para': [0.5, 10, 100], 'efficiency': 0.92184393359879, 'Vout': 92.27226035626423}, '[0.7, 10, 100]': {'para': [0.7, 10, 100], 'efficiency': 0.9428808329225573, 'Vout': 94.35099892080763}, '[0.9, 10, 100]': {'para': [0.9, 10, 100], 'efficiency': 0.9550005686605573, 'Vout': 95.54848472212822}}
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
{'[0.1, 10, 100]': {'para': [0.1, 10, 100], 'efficiency': 0.31055308479102706, 'Vout': 34.14139727277291}, '[0.3, 10, 100]': {'para': [0.3, 10, 100], 'efficiency': 0.7841785946395599, 'Vout': 81.3392759364053}, '[0.5, 10, 100]': {'para': [0.5, 10, 100], 'efficiency': 0.893032707840014, 'Vout': 92.1817584096588}, '[0.7, 10, 100]': {'para': [0.7, 10, 100], 'efficiency': 0.9289189493807221, 'Vout': 95.7614327282271}, '[0.9, 10, 100]': {'para': [0.9, 10, 100], 'efficiency': 0.9446983988871631, 'Vout': 97.3377810623933}}
effis of topo: (0.027662421780875007, 0.33, 33.0, [0.1, 10, 100])
##################### finish current
[('VOUT - L - Sb - GND', 0.5), ('VOUT - L - Sa - GND', 0.5), ('VIN - Sa - L - VOUT', 0.4583333333333333), ('VIN - Sb - Sa - GND', 0.4166666666666667), ('VIN - Sa - Sb - GND', 0.4166666666666667), ('VIN - Sb - L - VOUT', 0.375)]
{"['Sa']|[]": 0.33222591362126247, "['Sb']|[]": 0.33222591362126247, "['L']|[]": 0.33222591362126247, "['C']|[]": 0.003322259136212625, "['Sa', 'Sa']|['Sa']": 0.004950495049504951, "['Sa', 'Sb']|['Sa']": 0.49504950495049516, "['Sa', 'L']|['Sa']": 0.49504950495049516, "['Sa', 'C']|['Sa']": 0.004950495049504951, "['Sa', 'Sb']|['Sb']": 0.49504950495049516, "['Sb', 'Sb']|['Sb']": 0.004950495049504951, "['Sb', 'L']|['Sb']": 0.49504950495049516, "['Sb', 'C']|['Sb']": 0.004950495049504951, "['Sa', 'L']|['L']": 0.49504950495049516, "['Sb', 'L']|['L']": 0.49504950495049516, "['L', 'L']|['L']": 0.004950495049504951, "['L', 'C']|['L']": 0.004950495049504951, "['Sa', 'C']|['C']": 0.25, "['Sb', 'C']|['C']": 0.25, "['L', 'C']|['C']": 0.25, "['C', 'C']|['C']": 0.25, "['Sa', 'Sa', 'Sa']|['Sa', 'Sa']": 0.25, "['Sa', 'Sa', 'Sb']|['Sa', 'Sa']": 0.25, "['Sa', 'Sa', 'L']|['Sa', 'Sa']": 0.25, "['Sa', 'Sa', 'C']|['Sa', 'Sa']": 0.25, "['Sa', 'Sa', 'Sb']|['Sa', 'Sb']": 0.009708737864077669, "['Sa', 'Sb', 'Sb']|['Sa', 'Sb']": 0.009708737864077669, "['Sa', 'Sb', 'L']|['Sa', 'Sb']": 0.970873786407767, "['Sa', 'Sb', 'C']|['Sa', 'Sb']": 0.009708737864077669, "['Sa', 'Sa', 'L']|['Sa', 'L']": 0.009708737864077669, "['Sa', 'Sb', 'L']|['Sa', 'L']": 0.970873786407767, "['Sa', 'L', 'L']|['Sa', 'L']": 0.009708737864077669, "['Sa', 'L', 'C']|['Sa', 'L']": 0.009708737864077669, "['Sa', 'Sa', 'C']|['Sa', 'C']": 0.25, "['Sa', 'Sb', 'C']|['Sa', 'C']": 0.25, "['Sa', 'L', 'C']|['Sa', 'C']": 0.25, "['Sa', 'C', 'C']|['Sa', 'C']": 0.25, "['Sa', 'Sb', 'Sb']|['Sb', 'Sb']": 0.25, "['Sb', 'Sb', 'Sb']|['Sb', 'Sb']": 0.25, "['Sb', 'Sb', 'L']|['Sb', 'Sb']": 0.25, "['Sb', 'Sb', 'C']|['Sb', 'Sb']": 0.25, "['Sa', 'Sb', 'L']|['Sb', 'L']": 0.970873786407767, "['Sb', 'Sb', 'L']|['Sb', 'L']": 0.009708737864077669, "['Sb', 'L', 'L']|['Sb', 'L']": 0.009708737864077669, "['Sb', 'L', 'C']|['Sb', 'L']": 0.009708737864077669, "['Sa', 'Sb', 'C']|['Sb', 'C']": 0.25, "['Sb', 'Sb', 'C']|['Sb', 'C']": 0.25, "['Sb', 'L', 'C']|['Sb', 'C']": 0.25, "['Sb', 'C', 'C']|['Sb', 'C']": 0.25, "['Sa', 'L', 'L']|['L', 'L']": 0.25, "['Sb', 'L', 'L']|['L', 'L']": 0.25, "['L', 'L', 'L']|['L', 'L']": 0.25, "['L', 'L', 'C']|['L', 'L']": 0.25, "['Sa', 'L', 'C']|['L', 'C']": 0.25, "['Sb', 'L', 'C']|['L', 'C']": 0.25, "['L', 'L', 'C']|['L', 'C']": 0.25, "['L', 'C', 'C']|['L', 'C']": 0.25, "['Sa', 'C', 'C']|['C', 'C']": 0.25, "['Sb', 'C', 'C']|['C', 'C']": 0.25, "['L', 'C', 'C']|['C', 'C']": 0.25, "['C', 'C', 'C']|['C', 'C']": 0.25, "['Sa', 'Sa', 'Sa', 'Sa']|['Sa', 'Sa', 'Sa']": 0.25, "['Sa', 'Sa', 'Sa', 'Sb']|['Sa', 'Sa', 'Sa']": 0.25, "['Sa', 'Sa', 'Sa', 'L']|['Sa', 'Sa', 'Sa']": 0.25, "['Sa', 'Sa', 'Sa', 'C']|['Sa', 'Sa', 'Sa']": 0.25, "['Sa', 'Sa', 'Sa', 'Sb']|['Sa', 'Sa', 'Sb']": 0.25, "['Sa', 'Sa', 'Sb', 'Sb']|['Sa', 'Sa', 'Sb']": 0.25, "['Sa', 'Sa', 'Sb', 'L']|['Sa', 'Sa', 'Sb']": 0.25, "['Sa', 'Sa', 'Sb', 'C']|['Sa', 'Sa', 'Sb']": 0.25, "['Sa', 'Sa', 'Sa', 'L']|['Sa', 'Sa', 'L']": 0.25, "['Sa', 'Sa', 'Sb', 'L']|['Sa', 'Sa', 'L']": 0.25, "['Sa', 'Sa', 'L', 'L']|['Sa', 'Sa', 'L']": 0.25, "['Sa', 'Sa', 'L', 'C']|['Sa', 'Sa', 'L']": 0.25, "['Sa', 'Sa', 'Sa', 'C']|['Sa', 'Sa', 'C']": 0.25, "['Sa', 'Sa', 'Sb', 'C']|['Sa', 'Sa', 'C']": 0.25, "['Sa', 'Sa', 'L', 'C']|['Sa', 'Sa', 'C']": 0.25, "['Sa', 'Sa', 'C', 'C']|['Sa', 'Sa', 'C']": 0.25, "['Sa', 'Sa', 'Sb', 'Sb']|['Sa', 'Sb', 'Sb']": 0.25, "['Sa', 'Sb', 'Sb', 'Sb']|['Sa', 'Sb', 'Sb']": 0.25, "['Sa', 'Sb', 'Sb', 'L']|['Sa', 'Sb', 'Sb']": 0.25, "['Sa', 'Sb', 'Sb', 'C']|['Sa', 'Sb', 'Sb']": 0.25, "['Sa', 'Sa', 'Sb', 'L']|['Sa', 'Sb', 'L']": 0.25, "['Sa', 'Sb', 'Sb', 'L']|['Sa', 'Sb', 'L']": 0.25, "['Sa', 'Sb', 'L', 'L']|['Sa', 'Sb', 'L']": 0.25, "['Sa', 'Sb', 'L', 'C']|['Sa', 'Sb', 'L']": 0.25, "['Sa', 'Sa', 'Sb', 'C']|['Sa', 'Sb', 'C']": 0.25, "['Sa', 'Sb', 'Sb', 'C']|['Sa', 'Sb', 'C']": 0.25, "['Sa', 'Sb', 'L', 'C']|['Sa', 'Sb', 'C']": 0.25, "['Sa', 'Sb', 'C', 'C']|['Sa', 'Sb', 'C']": 0.25, "['Sa', 'Sa', 'L', 'L']|['Sa', 'L', 'L']": 0.25, "['Sa', 'Sb', 'L', 'L']|['Sa', 'L', 'L']": 0.25, "['Sa', 'L', 'L', 'L']|['Sa', 'L', 'L']": 0.25, "['Sa', 'L', 'L', 'C']|['Sa', 'L', 'L']": 0.25, "['Sa', 'Sa', 'L', 'C']|['Sa', 'L', 'C']": 0.25, "['Sa', 'Sb', 'L', 'C']|['Sa', 'L', 'C']": 0.25, "['Sa', 'L', 'L', 'C']|['Sa', 'L', 'C']": 0.25, "['Sa', 'L', 'C', 'C']|['Sa', 'L', 'C']": 0.25, "['Sa', 'Sa', 'C', 'C']|['Sa', 'C', 'C']": 0.25, "['Sa', 'Sb', 'C', 'C']|['Sa', 'C', 'C']": 0.25, "['Sa', 'L', 'C', 'C']|['Sa', 'C', 'C']": 0.25, "['Sa', 'C', 'C', 'C']|['Sa', 'C', 'C']": 0.25, "['Sa', 'Sb', 'Sb', 'Sb']|['Sb', 'Sb', 'Sb']": 0.25, "['Sb', 'Sb', 'Sb', 'Sb']|['Sb', 'Sb', 'Sb']": 0.25, "['Sb', 'Sb', 'Sb', 'L']|['Sb', 'Sb', 'Sb']": 0.25, "['Sb', 'Sb', 'Sb', 'C']|['Sb', 'Sb', 'Sb']": 0.25, "['Sa', 'Sb', 'Sb', 'L']|['Sb', 'Sb', 'L']": 0.25, "['Sb', 'Sb', 'Sb', 'L']|['Sb', 'Sb', 'L']": 0.25, "['Sb', 'Sb', 'L', 'L']|['Sb', 'Sb', 'L']": 0.25, "['Sb', 'Sb', 'L', 'C']|['Sb', 'Sb', 'L']": 0.25, "['Sa', 'Sb', 'Sb', 'C']|['Sb', 'Sb', 'C']": 0.25, "['Sb', 'Sb', 'Sb', 'C']|['Sb', 'Sb', 'C']": 0.25, "['Sb', 'Sb', 'L', 'C']|['Sb', 'Sb', 'C']": 0.25, "['Sb', 'Sb', 'C', 'C']|['Sb', 'Sb', 'C']": 0.25, "['Sa', 'Sb', 'L', 'L']|['Sb', 'L', 'L']": 0.25, "['Sb', 'Sb', 'L', 'L']|['Sb', 'L', 'L']": 0.25, "['Sb', 'L', 'L', 'L']|['Sb', 'L', 'L']": 0.25, "['Sb', 'L', 'L', 'C']|['Sb', 'L', 'L']": 0.25, "['Sa', 'Sb', 'L', 'C']|['Sb', 'L', 'C']": 0.25, "['Sb', 'Sb', 'L', 'C']|['Sb', 'L', 'C']": 0.25, "['Sb', 'L', 'L', 'C']|['Sb', 'L', 'C']": 0.25, "['Sb', 'L', 'C', 'C']|['Sb', 'L', 'C']": 0.25, "['Sa', 'Sb', 'C', 'C']|['Sb', 'C', 'C']": 0.25, "['Sb', 'Sb', 'C', 'C']|['Sb', 'C', 'C']": 0.25, "['Sb', 'L', 'C', 'C']|['Sb', 'C', 'C']": 0.25, "['Sb', 'C', 'C', 'C']|['Sb', 'C', 'C']": 0.25, "['Sa', 'L', 'L', 'L']|['L', 'L', 'L']": 0.25, "['Sb', 'L', 'L', 'L']|['L', 'L', 'L']": 0.25, "['L', 'L', 'L', 'L']|['L', 'L', 'L']": 0.25, "['L', 'L', 'L', 'C']|['L', 'L', 'L']": 0.25, "['Sa', 'L', 'L', 'C']|['L', 'L', 'C']": 0.25, "['Sb', 'L', 'L', 'C']|['L', 'L', 'C']": 0.25, "['L', 'L', 'L', 'C']|['L', 'L', 'C']": 0.25, "['L', 'L', 'C', 'C']|['L', 'L', 'C']": 0.25, "['Sa', 'L', 'C', 'C']|['L', 'C', 'C']": 0.25, "['Sb', 'L', 'C', 'C']|['L', 'C', 'C']": 0.25, "['L', 'L', 'C', 'C']|['L', 'C', 'C']": 0.25, "['L', 'C', 'C', 'C']|['L', 'C', 'C']": 0.25, "['Sa', 'C', 'C', 'C']|['C', 'C', 'C']": 0.25, "['Sb', 'C', 'C', 'C']|['C', 'C', 'C']": 0.25, "['L', 'C', 'C', 'C']|['C', 'C', 'C']": 0.25, "['C', 'C', 'C', 'C']|['C', 'C', 'C']": 0.25, "['Sa', 'Sa', 'Sa', 'Sa', 'Sa']|['Sa', 'Sa', 'Sa', 'Sa']": 0.25, "['Sa', 'Sa', 'Sa', 'Sa', 'Sb']|['Sa', 'Sa', 'Sa', 'Sa']": 0.25, "['Sa', 'Sa', 'Sa', 'Sa', 'L']|['Sa', 'Sa', 'Sa', 'Sa']": 0.25, "['Sa', 'Sa', 'Sa', 'Sa', 'C']|['Sa', 'Sa', 'Sa', 'Sa']": 0.25, "['Sa', 'Sa', 'Sa', 'Sa', 'Sb']|['Sa', 'Sa', 'Sa', 'Sb']": 0.25, "['Sa', 'Sa', 'Sa', 'Sb', 'Sb']|['Sa', 'Sa', 'Sa', 'Sb']": 0.25, "['Sa', 'Sa', 'Sa', 'Sb', 'L']|['Sa', 'Sa', 'Sa', 'Sb']": 0.25, "['Sa', 'Sa', 'Sa', 'Sb', 'C']|['Sa', 'Sa', 'Sa', 'Sb']": 0.25, "['Sa', 'Sa', 'Sa', 'Sa', 'L']|['Sa', 'Sa', 'Sa', 'L']": 0.25, "['Sa', 'Sa', 'Sa', 'Sb', 'L']|['Sa', 'Sa', 'Sa', 'L']": 0.25, "['Sa', 'Sa', 'Sa', 'L', 'L']|['Sa', 'Sa', 'Sa', 'L']": 0.25, "['Sa', 'Sa', 'Sa', 'L', 'C']|['Sa', 'Sa', 'Sa', 'L']": 0.25, "['Sa', 'Sa', 'Sa', 'Sa', 'C']|['Sa', 'Sa', 'Sa', 'C']": 0.25, "['Sa', 'Sa', 'Sa', 'Sb', 'C']|['Sa', 'Sa', 'Sa', 'C']": 0.25, "['Sa', 'Sa', 'Sa', 'L', 'C']|['Sa', 'Sa', 'Sa', 'C']": 0.25, "['Sa', 'Sa', 'Sa', 'C', 'C']|['Sa', 'Sa', 'Sa', 'C']": 0.25, "['Sa', 'Sa', 'Sa', 'Sb', 'Sb']|['Sa', 'Sa', 'Sb', 'Sb']": 0.25, "['Sa', 'Sa', 'Sb', 'Sb', 'Sb']|['Sa', 'Sa', 'Sb', 'Sb']": 0.25, "['Sa', 'Sa', 'Sb', 'Sb', 'L']|['Sa', 'Sa', 'Sb', 'Sb']": 0.25, "['Sa', 'Sa', 'Sb', 'Sb', 'C']|['Sa', 'Sa', 'Sb', 'Sb']": 0.25, "['Sa', 'Sa', 'Sa', 'Sb', 'L']|['Sa', 'Sa', 'Sb', 'L']": 0.25, "['Sa', 'Sa', 'Sb', 'Sb', 'L']|['Sa', 'Sa', 'Sb', 'L']": 0.25, "['Sa', 'Sa', 'Sb', 'L', 'L']|['Sa', 'Sa', 'Sb', 'L']": 0.25, "['Sa', 'Sa', 'Sb', 'L', 'C']|['Sa', 'Sa', 'Sb', 'L']": 0.25, "['Sa', 'Sa', 'Sa', 'Sb', 'C']|['Sa', 'Sa', 'Sb', 'C']": 0.25, "['Sa', 'Sa', 'Sb', 'Sb', 'C']|['Sa', 'Sa', 'Sb', 'C']": 0.25, "['Sa', 'Sa', 'Sb', 'L', 'C']|['Sa', 'Sa', 'Sb', 'C']": 0.25, "['Sa', 'Sa', 'Sb', 'C', 'C']|['Sa', 'Sa', 'Sb', 'C']": 0.25, "['Sa', 'Sa', 'Sa', 'L', 'L']|['Sa', 'Sa', 'L', 'L']": 0.25, "['Sa', 'Sa', 'Sb', 'L', 'L']|['Sa', 'Sa', 'L', 'L']": 0.25, "['Sa', 'Sa', 'L', 'L', 'L']|['Sa', 'Sa', 'L', 'L']": 0.25, "['Sa', 'Sa', 'L', 'L', 'C']|['Sa', 'Sa', 'L', 'L']": 0.25, "['Sa', 'Sa', 'Sa', 'L', 'C']|['Sa', 'Sa', 'L', 'C']": 0.25, "['Sa', 'Sa', 'Sb', 'L', 'C']|['Sa', 'Sa', 'L', 'C']": 0.25, "['Sa', 'Sa', 'L', 'L', 'C']|['Sa', 'Sa', 'L', 'C']": 0.25, "['Sa', 'Sa', 'L', 'C', 'C']|['Sa', 'Sa', 'L', 'C']": 0.25, "['Sa', 'Sa', 'Sa', 'C', 'C']|['Sa', 'Sa', 'C', 'C']": 0.25, "['Sa', 'Sa', 'Sb', 'C', 'C']|['Sa', 'Sa', 'C', 'C']": 0.25, "['Sa', 'Sa', 'L', 'C', 'C']|['Sa', 'Sa', 'C', 'C']": 0.25, "['Sa', 'Sa', 'C', 'C', 'C']|['Sa', 'Sa', 'C', 'C']": 0.25, "['Sa', 'Sa', 'Sb', 'Sb', 'Sb']|['Sa', 'Sb', 'Sb', 'Sb']": 0.25, "['Sa', 'Sb', 'Sb', 'Sb', 'Sb']|['Sa', 'Sb', 'Sb', 'Sb']": 0.25, "['Sa', 'Sb', 'Sb', 'Sb', 'L']|['Sa', 'Sb', 'Sb', 'Sb']": 0.25, "['Sa', 'Sb', 'Sb', 'Sb', 'C']|['Sa', 'Sb', 'Sb', 'Sb']": 0.25, "['Sa', 'Sa', 'Sb', 'Sb', 'L']|['Sa', 'Sb', 'Sb', 'L']": 0.25, "['Sa', 'Sb', 'Sb', 'Sb', 'L']|['Sa', 'Sb', 'Sb', 'L']": 0.25, "['Sa', 'Sb', 'Sb', 'L', 'L']|['Sa', 'Sb', 'Sb', 'L']": 0.25, "['Sa', 'Sb', 'Sb', 'L', 'C']|['Sa', 'Sb', 'Sb', 'L']": 0.25, "['Sa', 'Sa', 'Sb', 'Sb', 'C']|['Sa', 'Sb', 'Sb', 'C']": 0.25, "['Sa', 'Sb', 'Sb', 'Sb', 'C']|['Sa', 'Sb', 'Sb', 'C']": 0.25, "['Sa', 'Sb', 'Sb', 'L', 'C']|['Sa', 'Sb', 'Sb', 'C']": 0.25, "['Sa', 'Sb', 'Sb', 'C', 'C']|['Sa', 'Sb', 'Sb', 'C']": 0.25, "['Sa', 'Sa', 'Sb', 'L', 'L']|['Sa', 'Sb', 'L', 'L']": 0.25, "['Sa', 'Sb', 'Sb', 'L', 'L']|['Sa', 'Sb', 'L', 'L']": 0.25, "['Sa', 'Sb', 'L', 'L', 'L']|['Sa', 'Sb', 'L', 'L']": 0.25, "['Sa', 'Sb', 'L', 'L', 'C']|['Sa', 'Sb', 'L', 'L']": 0.25, "['Sa', 'Sa', 'Sb', 'L', 'C']|['Sa', 'Sb', 'L', 'C']": 0.25, "['Sa', 'Sb', 'Sb', 'L', 'C']|['Sa', 'Sb', 'L', 'C']": 0.25, "['Sa', 'Sb', 'L', 'L', 'C']|['Sa', 'Sb', 'L', 'C']": 0.25, "['Sa', 'Sb', 'L', 'C', 'C']|['Sa', 'Sb', 'L', 'C']": 0.25, "['Sa', 'Sa', 'Sb', 'C', 'C']|['Sa', 'Sb', 'C', 'C']": 0.25, "['Sa', 'Sb', 'Sb', 'C', 'C']|['Sa', 'Sb', 'C', 'C']": 0.25, "['Sa', 'Sb', 'L', 'C', 'C']|['Sa', 'Sb', 'C', 'C']": 0.25, "['Sa', 'Sb', 'C', 'C', 'C']|['Sa', 'Sb', 'C', 'C']": 0.25, "['Sa', 'Sa', 'L', 'L', 'L']|['Sa', 'L', 'L', 'L']": 0.25, "['Sa', 'Sb', 'L', 'L', 'L']|['Sa', 'L', 'L', 'L']": 0.25, "['Sa', 'L', 'L', 'L', 'L']|['Sa', 'L', 'L', 'L']": 0.25, "['Sa', 'L', 'L', 'L', 'C']|['Sa', 'L', 'L', 'L']": 0.25, "['Sa', 'Sa', 'L', 'L', 'C']|['Sa', 'L', 'L', 'C']": 0.25, "['Sa', 'Sb', 'L', 'L', 'C']|['Sa', 'L', 'L', 'C']": 0.25, "['Sa', 'L', 'L', 'L', 'C']|['Sa', 'L', 'L', 'C']": 0.25, "['Sa', 'L', 'L', 'C', 'C']|['Sa', 'L', 'L', 'C']": 0.25, "['Sa', 'Sa', 'L', 'C', 'C']|['Sa', 'L', 'C', 'C']": 0.25, "['Sa', 'Sb', 'L', 'C', 'C']|['Sa', 'L', 'C', 'C']": 0.25, "['Sa', 'L', 'L', 'C', 'C']|['Sa', 'L', 'C', 'C']": 0.25, "['Sa', 'L', 'C', 'C', 'C']|['Sa', 'L', 'C', 'C']": 0.25, "['Sa', 'Sa', 'C', 'C', 'C']|['Sa', 'C', 'C', 'C']": 0.25, "['Sa', 'Sb', 'C', 'C', 'C']|['Sa', 'C', 'C', 'C']": 0.25, "['Sa', 'L', 'C', 'C', 'C']|['Sa', 'C', 'C', 'C']": 0.25, "['Sa', 'C', 'C', 'C', 'C']|['Sa', 'C', 'C', 'C']": 0.25, "['Sa', 'Sb', 'Sb', 'Sb', 'Sb']|['Sb', 'Sb', 'Sb', 'Sb']": 0.25, "['Sb', 'Sb', 'Sb', 'Sb', 'Sb']|['Sb', 'Sb', 'Sb', 'Sb']": 0.25, "['Sb', 'Sb', 'Sb', 'Sb', 'L']|['Sb', 'Sb', 'Sb', 'Sb']": 0.25, "['Sb', 'Sb', 'Sb', 'Sb', 'C']|['Sb', 'Sb', 'Sb', 'Sb']": 0.25, "['Sa', 'Sb', 'Sb', 'Sb', 'L']|['Sb', 'Sb', 'Sb', 'L']": 0.25, "['Sb', 'Sb', 'Sb', 'Sb', 'L']|['Sb', 'Sb', 'Sb', 'L']": 0.25, "['Sb', 'Sb', 'Sb', 'L', 'L']|['Sb', 'Sb', 'Sb', 'L']": 0.25, "['Sb', 'Sb', 'Sb', 'L', 'C']|['Sb', 'Sb', 'Sb', 'L']": 0.25, "['Sa', 'Sb', 'Sb', 'Sb', 'C']|['Sb', 'Sb', 'Sb', 'C']": 0.25, "['Sb', 'Sb', 'Sb', 'Sb', 'C']|['Sb', 'Sb', 'Sb', 'C']": 0.25, "['Sb', 'Sb', 'Sb', 'L', 'C']|['Sb', 'Sb', 'Sb', 'C']": 0.25, "['Sb', 'Sb', 'Sb', 'C', 'C']|['Sb', 'Sb', 'Sb', 'C']": 0.25, "['Sa', 'Sb', 'Sb', 'L', 'L']|['Sb', 'Sb', 'L', 'L']": 0.25, "['Sb', 'Sb', 'Sb', 'L', 'L']|['Sb', 'Sb', 'L', 'L']": 0.25, "['Sb', 'Sb', 'L', 'L', 'L']|['Sb', 'Sb', 'L', 'L']": 0.25, "['Sb', 'Sb', 'L', 'L', 'C']|['Sb', 'Sb', 'L', 'L']": 0.25, "['Sa', 'Sb', 'Sb', 'L', 'C']|['Sb', 'Sb', 'L', 'C']": 0.25, "['Sb', 'Sb', 'Sb', 'L', 'C']|['Sb', 'Sb', 'L', 'C']": 0.25, "['Sb', 'Sb', 'L', 'L', 'C']|['Sb', 'Sb', 'L', 'C']": 0.25, "['Sb', 'Sb', 'L', 'C', 'C']|['Sb', 'Sb', 'L', 'C']": 0.25, "['Sa', 'Sb', 'Sb', 'C', 'C']|['Sb', 'Sb', 'C', 'C']": 0.25, "['Sb', 'Sb', 'Sb', 'C', 'C']|['Sb', 'Sb', 'C', 'C']": 0.25, "['Sb', 'Sb', 'L', 'C', 'C']|['Sb', 'Sb', 'C', 'C']": 0.25, "['Sb', 'Sb', 'C', 'C', 'C']|['Sb', 'Sb', 'C', 'C']": 0.25, "['Sa', 'Sb', 'L', 'L', 'L']|['Sb', 'L', 'L', 'L']": 0.25, "['Sb', 'Sb', 'L', 'L', 'L']|['Sb', 'L', 'L', 'L']": 0.25, "['Sb', 'L', 'L', 'L', 'L']|['Sb', 'L', 'L', 'L']": 0.25, "['Sb', 'L', 'L', 'L', 'C']|['Sb', 'L', 'L', 'L']": 0.25, "['Sa', 'Sb', 'L', 'L', 'C']|['Sb', 'L', 'L', 'C']": 0.25, "['Sb', 'Sb', 'L', 'L', 'C']|['Sb', 'L', 'L', 'C']": 0.25, "['Sb', 'L', 'L', 'L', 'C']|['Sb', 'L', 'L', 'C']": 0.25, "['Sb', 'L', 'L', 'C', 'C']|['Sb', 'L', 'L', 'C']": 0.25, "['Sa', 'Sb', 'L', 'C', 'C']|['Sb', 'L', 'C', 'C']": 0.25, "['Sb', 'Sb', 'L', 'C', 'C']|['Sb', 'L', 'C', 'C']": 0.25, "['Sb', 'L', 'L', 'C', 'C']|['Sb', 'L', 'C', 'C']": 0.25, "['Sb', 'L', 'C', 'C', 'C']|['Sb', 'L', 'C', 'C']": 0.25, "['Sa', 'Sb', 'C', 'C', 'C']|['Sb', 'C', 'C', 'C']": 0.25, "['Sb', 'Sb', 'C', 'C', 'C']|['Sb', 'C', 'C', 'C']": 0.25, "['Sb', 'L', 'C', 'C', 'C']|['Sb', 'C', 'C', 'C']": 0.25, "['Sb', 'C', 'C', 'C', 'C']|['Sb', 'C', 'C', 'C']": 0.25, "['Sa', 'L', 'L', 'L', 'L']|['L', 'L', 'L', 'L']": 0.25, "['Sb', 'L', 'L', 'L', 'L']|['L', 'L', 'L', 'L']": 0.25, "['L', 'L', 'L', 'L', 'L']|['L', 'L', 'L', 'L']": 0.25, "['L', 'L', 'L', 'L', 'C']|['L', 'L', 'L', 'L']": 0.25, "['Sa', 'L', 'L', 'L', 'C']|['L', 'L', 'L', 'C']": 0.25, "['Sb', 'L', 'L', 'L', 'C']|['L', 'L', 'L', 'C']": 0.25, "['L', 'L', 'L', 'L', 'C']|['L', 'L', 'L', 'C']": 0.25, "['L', 'L', 'L', 'C', 'C']|['L', 'L', 'L', 'C']": 0.25, "['Sa', 'L', 'L', 'C', 'C']|['L', 'L', 'C', 'C']": 0.25, "['Sb', 'L', 'L', 'C', 'C']|['L', 'L', 'C', 'C']": 0.25, "['L', 'L', 'L', 'C', 'C']|['L', 'L', 'C', 'C']": 0.25, "['L', 'L', 'C', 'C', 'C']|['L', 'L', 'C', 'C']": 0.25, "['Sa', 'L', 'C', 'C', 'C']|['L', 'C', 'C', 'C']": 0.25, "['Sb', 'L', 'C', 'C', 'C']|['L', 'C', 'C', 'C']": 0.25, "['L', 'L', 'C', 'C', 'C']|['L', 'C', 'C', 'C']": 0.25, "['L', 'C', 'C', 'C', 'C']|['L', 'C', 'C', 'C']": 0.25, "['Sa', 'C', 'C', 'C', 'C']|['C', 'C', 'C', 'C']": 0.25, "['Sb', 'C', 'C', 'C', 'C']|['C', 'C', 'C', 'C']": 0.25, "['L', 'C', 'C', 'C', 'C']|['C', 'C', 'C', 'C']": 0.25, "['C', 'C', 'C', 'C', 'C']|['C', 'C', 'C', 'C']": 0.25}
('Sa', 'Sa', 'Sa', 'Sa', 'Sa') : 1
('Sa', 'Sa', 'Sa', 'Sa', 'Sb') : 5
('Sa', 'Sa', 'Sa', 'Sa', 'L') : 5
('Sa', 'Sa', 'Sa', 'Sa', 'C') : 5
('Sa', 'Sa', 'Sa', 'Sb', 'Sb') : 10
('Sa', 'Sa', 'Sa', 'Sb', 'L') : 20
('Sa', 'Sa', 'Sa', 'Sb', 'C') : 20
('Sa', 'Sa', 'Sa', 'L', 'L') : 10
('Sa', 'Sa', 'Sa', 'L', 'C') : 20
('Sa', 'Sa', 'Sa', 'C', 'C') : 10
('Sa', 'Sa', 'Sb', 'Sb', 'Sb') : 10
('Sa', 'Sa', 'Sb', 'Sb', 'L') : 30
('Sa', 'Sa', 'Sb', 'Sb', 'C') : 30
('Sa', 'Sa', 'Sb', 'L', 'L') : 30
('Sa', 'Sa', 'Sb', 'L', 'C') : 60
('Sa', 'Sa', 'Sb', 'C', 'C') : 30
('Sa', 'Sa', 'L', 'L', 'L') : 10
('Sa', 'Sa', 'L', 'L', 'C') : 30
('Sa', 'Sa', 'L', 'C', 'C') : 30
('Sa', 'Sa', 'C', 'C', 'C') : 10
('Sa', 'Sb', 'Sb', 'Sb', 'Sb') : 5
('Sa', 'Sb', 'Sb', 'Sb', 'L') : 20
('Sa', 'Sb', 'Sb', 'Sb', 'C') : 20
('Sa', 'Sb', 'Sb', 'L', 'L') : 30
('Sa', 'Sb', 'Sb', 'L', 'C') : 60
('Sa', 'Sb', 'Sb', 'C', 'C') : 30
('Sa', 'Sb', 'L', 'L', 'L') : 20
('Sa', 'Sb', 'L', 'L', 'C') : 60
('Sa', 'Sb', 'L', 'C', 'C') : 60
('Sa', 'Sb', 'C', 'C', 'C') : 20
('Sa', 'L', 'L', 'L', 'L') : 5
('Sa', 'L', 'L', 'L', 'C') : 20
('Sa', 'L', 'L', 'C', 'C') : 30
('Sa', 'L', 'C', 'C', 'C') : 20
('Sa', 'C', 'C', 'C', 'C') : 5
('Sb', 'Sb', 'Sb', 'Sb', 'Sb') : 1
('Sb', 'Sb', 'Sb', 'Sb', 'L') : 5
('Sb', 'Sb', 'Sb', 'Sb', 'C') : 5
('Sb', 'Sb', 'Sb', 'L', 'L') : 10
('Sb', 'Sb', 'Sb', 'L', 'C') : 20
('Sb', 'Sb', 'Sb', 'C', 'C') : 10
('Sb', 'Sb', 'L', 'L', 'L') : 10
('Sb', 'Sb', 'L', 'L', 'C') : 30
('Sb', 'Sb', 'L', 'C', 'C') : 30
('Sb', 'Sb', 'C', 'C', 'C') : 10
('Sb', 'L', 'L', 'L', 'L') : 5
('Sb', 'L', 'L', 'L', 'C') : 20
('Sb', 'L', 'L', 'C', 'C') : 30
('Sb', 'L', 'C', 'C', 'C') : 20
('Sb', 'C', 'C', 'C', 'C') : 5
('L', 'L', 'L', 'L', 'L') : 1
('L', 'L', 'L', 'L', 'C') : 5
('L', 'L', 'L', 'C', 'C') : 10
('L', 'L', 'C', 'C', 'C') : 10
('L', 'C', 'C', 'C', 'C') : 5
('C', 'C', 'C', 'C', 'C') : 1
[]
<Synchronized wrapper for c_int(100)>
root offset is:  1
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - L - C - GND', 'VIN - Sb - L - L - GND', 'VIN - Sa - L - C - GND', 'VIN - Sa - L - L - GND', 'VOUT - L - C - GND', 'VOUT - L - L - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-L0-L1']), ('L0', ['0', 'N-C0-L0-L1']), ('L1', ['N-C0-L0-L1', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 1/100, 1/100], [0, 0, 0, 1/100], [-1/Cout, 0, -51100501/(55000050*Cout), 0], [-1/10, -1/10, 0, 0]]', 'b': '[[0], [0], [1000010/(1100001*Cout)], [0]]', 'c': '[[0, 0, 0, -1], [0, 0, 100001/1100001, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 1/100, 1/100], [0, 0, 0, 1/100], [-1/Cout, 0, -51100501/(55000050*Cout), 0], [-1/10, -1/10, 0, 0]]', 'b': '[[0], [0], [1000010/(1100001*Cout)], [0]]', 'c': '[[0, 0, 0, -1], [0, 0, 100001/1100001, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['L0', 'OUT', '12'], ['C0', '0', '12'], ['L1', '0', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - L - C - GND', 'VIN - Sb - L - L - GND', 'VIN - Sa - L - C - GND', 'VIN - Sa - L - L - GND', 'VOUT - L - C - GND', 'VOUT - L - L - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-L0-L1']), ('L0', ['0', 'N-C0-L0-L1']), ('L1', ['N-C0-L0-L1', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 1/100, 1/100], [0, 0, 0, 1/100], [-1/Cout, 0, -51100501/(55000050*Cout), 0], [-1/10, -1/10, 0, 0]]', 'b': '[[0], [0], [1000010/(1100001*Cout)], [0]]', 'c': '[[0, 0, 0, -1], [0, 0, 100001/1100001, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 1/100, 1/100], [0, 0, 0, 1/100], [-1/Cout, 0, -51100501/(55000050*Cout), 0], [-1/10, -1/10, 0, 0]]', 'b': '[[0], [0], [1000010/(1100001*Cout)], [0]]', 'c': '[[0, 0, 0, -1], [0, 0, 100001/1100001, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['L0', 'OUT', '12'], ['C0', '0', '12'], ['L1', '0', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - L - C - GND', 'VIN - Sb - L - L - GND', 'VIN - Sa - L - C - GND', 'VIN - Sa - L - L - GND', 'VOUT - L - C - GND', 'VOUT - L - L - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-L0-L1']), ('L0', ['0', 'N-C0-L0-L1']), ('L1', ['N-C0-L0-L1', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 1/100, 1/100], [0, 0, 0, 1/100], [-1/Cout, 0, -51100501/(55000050*Cout), 0], [-1/10, -1/10, 0, 0]]', 'b': '[[0], [0], [1000010/(1100001*Cout)], [0]]', 'c': '[[0, 0, 0, -1], [0, 0, 100001/1100001, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 1/100, 1/100], [0, 0, 0, 1/100], [-1/Cout, 0, -51100501/(55000050*Cout), 0], [-1/10, -1/10, 0, 0]]', 'b': '[[0], [0], [1000010/(1100001*Cout)], [0]]', 'c': '[[0, 0, 0, -1], [0, 0, 100001/1100001, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['L0', 'OUT', '12'], ['C0', '0', '12'], ['L1', '0', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - L - C - GND', 'VIN - Sb - L - L - GND', 'VIN - Sa - L - C - GND', 'VIN - Sa - L - L - GND', 'VOUT - L - C - GND', 'VOUT - L - L - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-L0-L1']), ('L0', ['0', 'N-C0-L0-L1']), ('L1', ['N-C0-L0-L1', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 1/100, 1/100], [0, 0, 0, 1/100], [-1/Cout, 0, -51100501/(55000050*Cout), 0], [-1/10, -1/10, 0, 0]]', 'b': '[[0], [0], [1000010/(1100001*Cout)], [0]]', 'c': '[[0, 0, 0, -1], [0, 0, 100001/1100001, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 1/100, 1/100], [0, 0, 0, 1/100], [-1/Cout, 0, -51100501/(55000050*Cout), 0], [-1/10, -1/10, 0, 0]]', 'b': '[[0], [0], [1000010/(1100001*Cout)], [0]]', 'c': '[[0, 0, 0, -1], [0, 0, 100001/1100001, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['L0', 'OUT', '12'], ['C0', '0', '12'], ['L1', '0', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - L - C - GND', 'VIN - Sb - L - L - GND', 'VIN - Sa - L - C - GND', 'VIN - Sa - L - L - GND', 'VOUT - L - C - GND', 'VOUT - L - L - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-L0-L1']), ('L0', ['0', 'N-C0-L0-L1']), ('L1', ['N-C0-L0-L1', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 1/100, 1/100], [0, 0, 0, 1/100], [-1/Cout, 0, -51100501/(55000050*Cout), 0], [-1/10, -1/10, 0, 0]]', 'b': '[[0], [0], [1000010/(1100001*Cout)], [0]]', 'c': '[[0, 0, 0, -1], [0, 0, 100001/1100001, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 1/100, 1/100], [0, 0, 0, 1/100], [-1/Cout, 0, -51100501/(55000050*Cout), 0], [-1/10, -1/10, 0, 0]]', 'b': '[[0], [0], [1000010/(1100001*Cout)], [0]]', 'c': '[[0, 0, 0, -1], [0, 0, 100001/1100001, 0], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[0], [1000000/1100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['L0', 'OUT', '12'], ['C0', '0', '12'], ['L1', '0', '12']]}
['VIN - L - C - C - VOUT', 'VIN - L - Sb - GND', 'VIN - L - C - GND', 'VOUT - C - C - Sb - GND', 'VOUT - C - C - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-C1-L0-Sb0']), ('C1', ['N-C0-C1-L0-Sb0', 'N-C1-C2']), ('C2', ['N-C1-C2', 'OUT']), ('L0', ['IN', 'N-C0-C1-L0-Sb0']), ('Sb0', ['0', 'N-C0-C1-L0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-37117 violations

['VIN - L - C - C - VOUT', 'VIN - L - Sb - GND', 'VIN - L - C - GND', 'VOUT - C - C - Sb - GND', 'VOUT - C - C - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-C1-L0-Sb0']), ('C1', ['N-C0-C1-L0-Sb0', 'N-C1-C2']), ('C2', ['N-C1-C2', 'OUT']), ('L0', ['IN', 'N-C0-C1-L0-Sb0']), ('Sb0', ['0', 'N-C0-C1-L0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - L - C - C - VOUT', 'VIN - L - Sb - GND', 'VIN - L - C - GND', 'VOUT - C - C - Sb - GND', 'VOUT - C - C - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-C1-L0-Sb0']), ('C1', ['N-C0-C1-L0-Sb0', 'N-C1-C2']), ('C2', ['N-C1-C2', 'OUT']), ('L0', ['IN', 'N-C0-C1-L0-Sb0']), ('Sb0', ['0', 'N-C0-C1-L0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - L - C - C - VOUT', 'VIN - L - Sb - GND', 'VIN - L - C - GND', 'VOUT - C - C - Sb - GND', 'VOUT - C - C - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-C1-L0-Sb0']), ('C1', ['N-C0-C1-L0-Sb0', 'N-C1-C2']), ('C2', ['N-C1-C2', 'OUT']), ('L0', ['IN', 'N-C0-C1-L0-Sb0']), ('Sb0', ['0', 'N-C0-C1-L0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - L - C - C - VOUT', 'VIN - L - Sb - GND', 'VIN - L - C - GND', 'VOUT - C - C - Sb - GND', 'VOUT - C - C - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-C1-L0-Sb0']), ('C1', ['N-C0-C1-L0-Sb0', 'N-C1-C2']), ('C2', ['N-C1-C2', 'OUT']), ('L0', ['IN', 'N-C0-C1-L0-Sb0']), ('Sb0', ['0', 'N-C0-C1-L0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
has to be unconnected
has to be unconnected
['VIN - Sb - L - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - L - C - Sb - GND', 'VIN - Sa - C - Sb - GND', 'VOUT - C - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-Sb0', 'OUT']), ('L0', ['N-L0-Sb1', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-C0-Sb0']), ('Sb1', ['IN', 'N-L0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/100000100, 10000/1000001, 0], [-1000000/(1000001*Cout), -51000551/(50000050*Cout), 1/Cout], [0, 1/10, -1/10]]', 'b': '[[-10000/1000001], [10/(1000001*Cout)], [0]]', 'c': '[[0, 1, -1], [1100001/1000001, 1/1000001, 0], [100000/1000001, 1/1000001, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [1000000/1000001], [1000000/1000001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/1100, 1/110, 0], [-10/(11*Cout), -1022011/(1100000*Cout), 1/(100000*Cout)], [0, 1/1000000, -1/1000000]]', 'b': '[[-1/110], [10/(11*Cout)], [0]]', 'c': '[[0, 1, -1], [1100001/11, 1/11, 0], [1/11, 1/11, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [10/11], [10/11], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Rb1', 'Ra1'], 'node_list': ['IN', 'OUT', 'IN_exact', '8', '12', '0'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', 'IN', '8'], ['L0', 'OUT', '8'], ['C0', 'OUT', '12'], ['Sb1', '0', '12']]}
['VIN - Sb - L - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - L - C - Sb - GND', 'VIN - Sa - C - Sb - GND', 'VOUT - C - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-Sb0', 'OUT']), ('L0', ['N-L0-Sb1', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-C0-Sb0']), ('Sb1', ['IN', 'N-L0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/100000100, 10000/1000001, 0], [-1000000/(1000001*Cout), -51000551/(50000050*Cout), 1/Cout], [0, 1/10, -1/10]]', 'b': '[[-10000/1000001], [10/(1000001*Cout)], [0]]', 'c': '[[0, 1, -1], [1100001/1000001, 1/1000001, 0], [100000/1000001, 1/1000001, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [1000000/1000001], [1000000/1000001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/1100, 1/110, 0], [-10/(11*Cout), -1022011/(1100000*Cout), 1/(100000*Cout)], [0, 1/1000000, -1/1000000]]', 'b': '[[-1/110], [10/(11*Cout)], [0]]', 'c': '[[0, 1, -1], [1100001/11, 1/11, 0], [1/11, 1/11, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [10/11], [10/11], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Rb1', 'Ra1'], 'node_list': ['IN', 'OUT', 'IN_exact', '8', '12', '0'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', 'IN', '8'], ['L0', 'OUT', '8'], ['C0', 'OUT', '12'], ['Sb1', '0', '12']]}
['VIN - Sb - L - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - L - C - Sb - GND', 'VIN - Sa - C - Sb - GND', 'VOUT - C - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-Sb0', 'OUT']), ('L0', ['N-L0-Sb1', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-C0-Sb0']), ('Sb1', ['IN', 'N-L0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/100000100, 10000/1000001, 0], [-1000000/(1000001*Cout), -51000551/(50000050*Cout), 1/Cout], [0, 1/10, -1/10]]', 'b': '[[-10000/1000001], [10/(1000001*Cout)], [0]]', 'c': '[[0, 1, -1], [1100001/1000001, 1/1000001, 0], [100000/1000001, 1/1000001, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [1000000/1000001], [1000000/1000001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/1100, 1/110, 0], [-10/(11*Cout), -1022011/(1100000*Cout), 1/(100000*Cout)], [0, 1/1000000, -1/1000000]]', 'b': '[[-1/110], [10/(11*Cout)], [0]]', 'c': '[[0, 1, -1], [1100001/11, 1/11, 0], [1/11, 1/11, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [10/11], [10/11], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Rb1', 'Ra1'], 'node_list': ['IN', 'OUT', 'IN_exact', '8', '12', '0'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', 'IN', '8'], ['L0', 'OUT', '8'], ['C0', 'OUT', '12'], ['Sb1', '0', '12']]}
['VIN - Sb - L - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - L - C - Sb - GND', 'VIN - Sa - C - Sb - GND', 'VOUT - C - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-Sb0', 'OUT']), ('L0', ['N-L0-Sb1', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-C0-Sb0']), ('Sb1', ['IN', 'N-L0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/100000100, 10000/1000001, 0], [-1000000/(1000001*Cout), -51000551/(50000050*Cout), 1/Cout], [0, 1/10, -1/10]]', 'b': '[[-10000/1000001], [10/(1000001*Cout)], [0]]', 'c': '[[0, 1, -1], [1100001/1000001, 1/1000001, 0], [100000/1000001, 1/1000001, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [1000000/1000001], [1000000/1000001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/1100, 1/110, 0], [-10/(11*Cout), -1022011/(1100000*Cout), 1/(100000*Cout)], [0, 1/1000000, -1/1000000]]', 'b': '[[-1/110], [10/(11*Cout)], [0]]', 'c': '[[0, 1, -1], [1100001/11, 1/11, 0], [1/11, 1/11, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [10/11], [10/11], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Rb1', 'Ra1'], 'node_list': ['IN', 'OUT', 'IN_exact', '8', '12', '0'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', 'IN', '8'], ['L0', 'OUT', '8'], ['C0', 'OUT', '12'], ['Sb1', '0', '12']]}
['VIN - Sb - L - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - L - C - Sb - GND', 'VIN - Sa - C - Sb - GND', 'VOUT - C - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-Sb0', 'OUT']), ('L0', ['N-L0-Sb1', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-C0-Sb0']), ('Sb1', ['IN', 'N-L0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/100000100, 10000/1000001, 0], [-1000000/(1000001*Cout), -51000551/(50000050*Cout), 1/Cout], [0, 1/10, -1/10]]', 'b': '[[-10000/1000001], [10/(1000001*Cout)], [0]]', 'c': '[[0, 1, -1], [1100001/1000001, 1/1000001, 0], [100000/1000001, 1/1000001, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [1000000/1000001], [1000000/1000001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/1100, 1/110, 0], [-10/(11*Cout), -1022011/(1100000*Cout), 1/(100000*Cout)], [0, 1/1000000, -1/1000000]]', 'b': '[[-1/110], [10/(11*Cout)], [0]]', 'c': '[[0, 1, -1], [1100001/11, 1/11, 0], [1/11, 1/11, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [10/11], [10/11], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Rb1', 'Ra1'], 'node_list': ['IN', 'OUT', 'IN_exact', '8', '12', '0'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', 'IN', '8'], ['L0', 'OUT', '8'], ['C0', 'OUT', '12'], ['Sb1', '0', '12']]}
has to be unconnected
has to be unconnected
has to be unconnected
has to be unconnected
['VIN - L - C - Sb - VOUT', 'VIN - Sb - C - Sb - VOUT', 'VIN - L - C - L - GND', 'VIN - Sb - C - L - GND', 'VOUT - Sb - L - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-L0-Sb1', 'N-C0-L1-Sb0']), ('L0', ['0', 'N-C0-L0-Sb1']), ('L1', ['IN', 'N-C0-L1-Sb0']), ('Sb0', ['IN', 'N-C0-L1-Sb0']), ('Sb1', ['N-C0-L0-Sb1', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-11/2100, -1/210, -1/210, 1/210], [-1/210, -11/2100, -11/2100, -1/210], [10/(21*Cout), 11/(21*Cout), -521/(1050*Cout), 10/(21*Cout)], [-1/21, 1/21, 1/21, -1/21]]', 'b': '[[1/210], [-1/210], [10/(21*Cout)], [-1/21]]', 'c': '[[10/21, 11/21, 11/21, -11/21], [10/21, 11/21, 11/21, 10/21], [-1/21, 1/21, 1/21, -1/21], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[10/21], [10/21], [20/21], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000001000/2000001, -1000000000/2000001, -10000/2000001, 10000/2000001], [-1000000000/2000001, -1000001000/2000001, -1000001/200000100, -10000/2000001], [1000000/(2000001*Cout), 1000001/(2000001*Cout), -2000501/(100000050*Cout), 10/(2000001*Cout)], [-100000/2000001, 100000/2000001, 1/2000001, -1/2000001]]', 'b': '[[10000/2000001], [-10000/2000001], [10/(2000001*Cout)], [-1/2000001]]', 'c': '[[100000000000/2000001, 100000100000/2000001, 1000001/2000001, -1000001/2000001], [100000000000/2000001, 100000100000/2000001, 1000001/2000001, 1000000/2000001], [-100000/2000001, 100000/2000001, 1/2000001, -1/2000001], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[1000000/2000001], [1000000/2000001], [2000000/2000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '10', '0'], 'net_list': [['Sb0', 'OUT', '12'], ['L0', 'IN', '10'], ['C0', '12', '10'], ['Sb1', 'IN', '10'], ['L1', '0', '12']]}
['VIN - L - C - Sb - VOUT', 'VIN - Sb - C - Sb - VOUT', 'VIN - L - C - L - GND', 'VIN - Sb - C - L - GND', 'VOUT - Sb - L - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-L0-Sb1', 'N-C0-L1-Sb0']), ('L0', ['0', 'N-C0-L0-Sb1']), ('L1', ['IN', 'N-C0-L1-Sb0']), ('Sb0', ['IN', 'N-C0-L1-Sb0']), ('Sb1', ['N-C0-L0-Sb1', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-11/2100, -1/210, -1/210, 1/210], [-1/210, -11/2100, -11/2100, -1/210], [10/(21*Cout), 11/(21*Cout), -521/(1050*Cout), 10/(21*Cout)], [-1/21, 1/21, 1/21, -1/21]]', 'b': '[[1/210], [-1/210], [10/(21*Cout)], [-1/21]]', 'c': '[[10/21, 11/21, 11/21, -11/21], [10/21, 11/21, 11/21, 10/21], [-1/21, 1/21, 1/21, -1/21], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[10/21], [10/21], [20/21], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000001000/2000001, -1000000000/2000001, -10000/2000001, 10000/2000001], [-1000000000/2000001, -1000001000/2000001, -1000001/200000100, -10000/2000001], [1000000/(2000001*Cout), 1000001/(2000001*Cout), -2000501/(100000050*Cout), 10/(2000001*Cout)], [-100000/2000001, 100000/2000001, 1/2000001, -1/2000001]]', 'b': '[[10000/2000001], [-10000/2000001], [10/(2000001*Cout)], [-1/2000001]]', 'c': '[[100000000000/2000001, 100000100000/2000001, 1000001/2000001, -1000001/2000001], [100000000000/2000001, 100000100000/2000001, 1000001/2000001, 1000000/2000001], [-100000/2000001, 100000/2000001, 1/2000001, -1/2000001], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[1000000/2000001], [1000000/2000001], [2000000/2000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '10', '0'], 'net_list': [['Sb0', 'OUT', '12'], ['L0', 'IN', '10'], ['C0', '12', '10'], ['Sb1', 'IN', '10'], ['L1', '0', '12']]}
['VIN - L - C - Sb - VOUT', 'VIN - Sb - C - Sb - VOUT', 'VIN - L - C - L - GND', 'VIN - Sb - C - L - GND', 'VOUT - Sb - L - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-L0-Sb1', 'N-C0-L1-Sb0']), ('L0', ['0', 'N-C0-L0-Sb1']), ('L1', ['IN', 'N-C0-L1-Sb0']), ('Sb0', ['IN', 'N-C0-L1-Sb0']), ('Sb1', ['N-C0-L0-Sb1', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-11/2100, -1/210, -1/210, 1/210], [-1/210, -11/2100, -11/2100, -1/210], [10/(21*Cout), 11/(21*Cout), -521/(1050*Cout), 10/(21*Cout)], [-1/21, 1/21, 1/21, -1/21]]', 'b': '[[1/210], [-1/210], [10/(21*Cout)], [-1/21]]', 'c': '[[10/21, 11/21, 11/21, -11/21], [10/21, 11/21, 11/21, 10/21], [-1/21, 1/21, 1/21, -1/21], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[10/21], [10/21], [20/21], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000001000/2000001, -1000000000/2000001, -10000/2000001, 10000/2000001], [-1000000000/2000001, -1000001000/2000001, -1000001/200000100, -10000/2000001], [1000000/(2000001*Cout), 1000001/(2000001*Cout), -2000501/(100000050*Cout), 10/(2000001*Cout)], [-100000/2000001, 100000/2000001, 1/2000001, -1/2000001]]', 'b': '[[10000/2000001], [-10000/2000001], [10/(2000001*Cout)], [-1/2000001]]', 'c': '[[100000000000/2000001, 100000100000/2000001, 1000001/2000001, -1000001/2000001], [100000000000/2000001, 100000100000/2000001, 1000001/2000001, 1000000/2000001], [-100000/2000001, 100000/2000001, 1/2000001, -1/2000001], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[1000000/2000001], [1000000/2000001], [2000000/2000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '10', '0'], 'net_list': [['Sb0', 'OUT', '12'], ['L0', 'IN', '10'], ['C0', '12', '10'], ['Sb1', 'IN', '10'], ['L1', '0', '12']]}
['VIN - L - C - Sb - VOUT', 'VIN - Sb - C - Sb - VOUT', 'VIN - L - C - L - GND', 'VIN - Sb - C - L - GND', 'VOUT - Sb - L - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-L0-Sb1', 'N-C0-L1-Sb0']), ('L0', ['0', 'N-C0-L0-Sb1']), ('L1', ['IN', 'N-C0-L1-Sb0']), ('Sb0', ['IN', 'N-C0-L1-Sb0']), ('Sb1', ['N-C0-L0-Sb1', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-11/2100, -1/210, -1/210, 1/210], [-1/210, -11/2100, -11/2100, -1/210], [10/(21*Cout), 11/(21*Cout), -521/(1050*Cout), 10/(21*Cout)], [-1/21, 1/21, 1/21, -1/21]]', 'b': '[[1/210], [-1/210], [10/(21*Cout)], [-1/21]]', 'c': '[[10/21, 11/21, 11/21, -11/21], [10/21, 11/21, 11/21, 10/21], [-1/21, 1/21, 1/21, -1/21], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[10/21], [10/21], [20/21], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000001000/2000001, -1000000000/2000001, -10000/2000001, 10000/2000001], [-1000000000/2000001, -1000001000/2000001, -1000001/200000100, -10000/2000001], [1000000/(2000001*Cout), 1000001/(2000001*Cout), -2000501/(100000050*Cout), 10/(2000001*Cout)], [-100000/2000001, 100000/2000001, 1/2000001, -1/2000001]]', 'b': '[[10000/2000001], [-10000/2000001], [10/(2000001*Cout)], [-1/2000001]]', 'c': '[[100000000000/2000001, 100000100000/2000001, 1000001/2000001, -1000001/2000001], [100000000000/2000001, 100000100000/2000001, 1000001/2000001, 1000000/2000001], [-100000/2000001, 100000/2000001, 1/2000001, -1/2000001], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[1000000/2000001], [1000000/2000001], [2000000/2000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '10', '0'], 'net_list': [['Sb0', 'OUT', '12'], ['L0', 'IN', '10'], ['C0', '12', '10'], ['Sb1', 'IN', '10'], ['L1', '0', '12']]}
['VIN - L - C - Sb - VOUT', 'VIN - Sb - C - Sb - VOUT', 'VIN - L - C - L - GND', 'VIN - Sb - C - L - GND', 'VOUT - Sb - L - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-L0-Sb1', 'N-C0-L1-Sb0']), ('L0', ['0', 'N-C0-L0-Sb1']), ('L1', ['IN', 'N-C0-L1-Sb0']), ('Sb0', ['IN', 'N-C0-L1-Sb0']), ('Sb1', ['N-C0-L0-Sb1', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-11/2100, -1/210, -1/210, 1/210], [-1/210, -11/2100, -11/2100, -1/210], [10/(21*Cout), 11/(21*Cout), -521/(1050*Cout), 10/(21*Cout)], [-1/21, 1/21, 1/21, -1/21]]', 'b': '[[1/210], [-1/210], [10/(21*Cout)], [-1/21]]', 'c': '[[10/21, 11/21, 11/21, -11/21], [10/21, 11/21, 11/21, 10/21], [-1/21, 1/21, 1/21, -1/21], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[10/21], [10/21], [20/21], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000001000/2000001, -1000000000/2000001, -10000/2000001, 10000/2000001], [-1000000000/2000001, -1000001000/2000001, -1000001/200000100, -10000/2000001], [1000000/(2000001*Cout), 1000001/(2000001*Cout), -2000501/(100000050*Cout), 10/(2000001*Cout)], [-100000/2000001, 100000/2000001, 1/2000001, -1/2000001]]', 'b': '[[10000/2000001], [-10000/2000001], [10/(2000001*Cout)], [-1/2000001]]', 'c': '[[100000000000/2000001, 100000100000/2000001, 1000001/2000001, -1000001/2000001], [100000000000/2000001, 100000100000/2000001, 1000001/2000001, 1000000/2000001], [-100000/2000001, 100000/2000001, 1/2000001, -1/2000001], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[1000000/2000001], [1000000/2000001], [2000000/2000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '10', '0'], 'net_list': [['Sb0', 'OUT', '12'], ['L0', 'IN', '10'], ['C0', '12', '10'], ['Sb1', 'IN', '10'], ['L1', '0', '12']]}
['VIN - L - L - VOUT', 'VIN - Sa - Sb - Sa - GND', 'VOUT - L - L - Sa - Sb - Sa - GND']

 PCC-37117
1
OrderedDict([('L0', ['N-L0-L1', 'OUT']), ('L1', ['IN', 'N-L0-L1']), ('Sa0', ['0', 'N-Sa0-Sb0']), ('Sa1', ['IN', 'N-Sa1-Sb0']), ('Sb0', ['N-Sa0-Sb0', 'N-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-37117 violations

['VIN - L - L - VOUT', 'VIN - Sa - Sb - Sa - GND', 'VOUT - L - L - Sa - Sb - Sa - GND']

 PCC-37117
1
OrderedDict([('L0', ['N-L0-L1', 'OUT']), ('L1', ['IN', 'N-L0-L1']), ('Sa0', ['0', 'N-Sa0-Sb0']), ('Sa1', ['IN', 'N-Sa1-Sb0']), ('Sb0', ['N-Sa0-Sb0', 'N-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - L - L - VOUT', 'VIN - Sa - Sb - Sa - GND', 'VOUT - L - L - Sa - Sb - Sa - GND']

 PCC-37117
1
OrderedDict([('L0', ['N-L0-L1', 'OUT']), ('L1', ['IN', 'N-L0-L1']), ('Sa0', ['0', 'N-Sa0-Sb0']), ('Sa1', ['IN', 'N-Sa1-Sb0']), ('Sb0', ['N-Sa0-Sb0', 'N-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - L - L - VOUT', 'VIN - Sa - Sb - Sa - GND', 'VOUT - L - L - Sa - Sb - Sa - GND']

 PCC-37117
1
OrderedDict([('L0', ['N-L0-L1', 'OUT']), ('L1', ['IN', 'N-L0-L1']), ('Sa0', ['0', 'N-Sa0-Sb0']), ('Sa1', ['IN', 'N-Sa1-Sb0']), ('Sb0', ['N-Sa0-Sb0', 'N-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - L - L - VOUT', 'VIN - Sa - Sb - Sa - GND', 'VOUT - L - L - Sa - Sb - Sa - GND']

 PCC-37117
1
OrderedDict([('L0', ['N-L0-L1', 'OUT']), ('L1', ['IN', 'N-L0-L1']), ('Sa0', ['0', 'N-Sa0-Sb0']), ('Sa1', ['IN', 'N-Sa1-Sb0']), ('Sb0', ['N-Sa0-Sb0', 'N-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - L - VOUT', 'VIN - Sa - L - VOUT', 'VIN - Sb - Sb - C - GND', 'VIN - Sa - Sb - C - GND', 'VOUT - L - Sb - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-Sb0']), ('L0', ['N-L0-Sa0-Sb0-Sb1', 'OUT']), ('Sa0', ['IN', 'N-L0-Sa0-Sb0-Sb1']), ('Sb0', ['N-C0-Sb0', 'N-L0-Sa0-Sb0-Sb1']), ('Sb1', ['IN', 'N-L0-Sa0-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/210001100, 1/100, 1100001/210001100], [-1/Cout, -1/(50*Cout), 0], [-1100001/21000110, 0, -100001/2100011]]', 'b': '[[-100001/21000110], [0], [-100001/2100011]]', 'c': '[[1100001/2100011, 0, -1100001/2100011], [0, 0, -1], [100001/2100011, 0, -100001/2100011], [0, 0, 0], [0, 1, 0]]', 'd': '[[1000010/2100011], [0], [2000010/2100011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001000/100002100001, 1/100, 1100001/10000210000100], [-1/Cout, -1/(50*Cout), 0], [-1100001/1000021000010, 0, -100001/100002100001]]', 'b': '[[-1000010000/100002100001], [0], [-100001/100002100001]]', 'c': '[[110000100000/100002100001, 0, -1100001/100002100001], [0, 0, -1], [10000100000/100002100001, 0, -100001/100002100001], [0, 0, 0], [0, 1, 0]]', 'd': '[[100001000000/100002100001], [0], [100002000000/100002100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Rb1', 'Ra1'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '0', '12'], 'net_list': [['Sa0', 'IN', '11'], ['Sb0', 'IN', '11'], ['L0', 'OUT', '11'], ['C0', '0', '12'], ['Sb1', '11', '12']]}
['VIN - Sb - L - VOUT', 'VIN - Sa - L - VOUT', 'VIN - Sb - Sb - C - GND', 'VIN - Sa - Sb - C - GND', 'VOUT - L - Sb - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-Sb0']), ('L0', ['N-L0-Sa0-Sb0-Sb1', 'OUT']), ('Sa0', ['IN', 'N-L0-Sa0-Sb0-Sb1']), ('Sb0', ['N-C0-Sb0', 'N-L0-Sa0-Sb0-Sb1']), ('Sb1', ['IN', 'N-L0-Sa0-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/210001100, 1/100, 1100001/210001100], [-1/Cout, -1/(50*Cout), 0], [-1100001/21000110, 0, -100001/2100011]]', 'b': '[[-100001/21000110], [0], [-100001/2100011]]', 'c': '[[1100001/2100011, 0, -1100001/2100011], [0, 0, -1], [100001/2100011, 0, -100001/2100011], [0, 0, 0], [0, 1, 0]]', 'd': '[[1000010/2100011], [0], [2000010/2100011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001000/100002100001, 1/100, 1100001/10000210000100], [-1/Cout, -1/(50*Cout), 0], [-1100001/1000021000010, 0, -100001/100002100001]]', 'b': '[[-1000010000/100002100001], [0], [-100001/100002100001]]', 'c': '[[110000100000/100002100001, 0, -1100001/100002100001], [0, 0, -1], [10000100000/100002100001, 0, -100001/100002100001], [0, 0, 0], [0, 1, 0]]', 'd': '[[100001000000/100002100001], [0], [100002000000/100002100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Rb1', 'Ra1'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '0', '12'], 'net_list': [['Sa0', 'IN', '11'], ['Sb0', 'IN', '11'], ['L0', 'OUT', '11'], ['C0', '0', '12'], ['Sb1', '11', '12']]}
['VIN - Sb - L - VOUT', 'VIN - Sa - L - VOUT', 'VIN - Sb - Sb - C - GND', 'VIN - Sa - Sb - C - GND', 'VOUT - L - Sb - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-Sb0']), ('L0', ['N-L0-Sa0-Sb0-Sb1', 'OUT']), ('Sa0', ['IN', 'N-L0-Sa0-Sb0-Sb1']), ('Sb0', ['N-C0-Sb0', 'N-L0-Sa0-Sb0-Sb1']), ('Sb1', ['IN', 'N-L0-Sa0-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/210001100, 1/100, 1100001/210001100], [-1/Cout, -1/(50*Cout), 0], [-1100001/21000110, 0, -100001/2100011]]', 'b': '[[-100001/21000110], [0], [-100001/2100011]]', 'c': '[[1100001/2100011, 0, -1100001/2100011], [0, 0, -1], [100001/2100011, 0, -100001/2100011], [0, 0, 0], [0, 1, 0]]', 'd': '[[1000010/2100011], [0], [2000010/2100011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001000/100002100001, 1/100, 1100001/10000210000100], [-1/Cout, -1/(50*Cout), 0], [-1100001/1000021000010, 0, -100001/100002100001]]', 'b': '[[-1000010000/100002100001], [0], [-100001/100002100001]]', 'c': '[[110000100000/100002100001, 0, -1100001/100002100001], [0, 0, -1], [10000100000/100002100001, 0, -100001/100002100001], [0, 0, 0], [0, 1, 0]]', 'd': '[[100001000000/100002100001], [0], [100002000000/100002100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Rb1', 'Ra1'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '0', '12'], 'net_list': [['Sa0', 'IN', '11'], ['Sb0', 'IN', '11'], ['L0', 'OUT', '11'], ['C0', '0', '12'], ['Sb1', '11', '12']]}
['VIN - Sb - L - VOUT', 'VIN - Sa - L - VOUT', 'VIN - Sb - Sb - C - GND', 'VIN - Sa - Sb - C - GND', 'VOUT - L - Sb - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-Sb0']), ('L0', ['N-L0-Sa0-Sb0-Sb1', 'OUT']), ('Sa0', ['IN', 'N-L0-Sa0-Sb0-Sb1']), ('Sb0', ['N-C0-Sb0', 'N-L0-Sa0-Sb0-Sb1']), ('Sb1', ['IN', 'N-L0-Sa0-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/210001100, 1/100, 1100001/210001100], [-1/Cout, -1/(50*Cout), 0], [-1100001/21000110, 0, -100001/2100011]]', 'b': '[[-100001/21000110], [0], [-100001/2100011]]', 'c': '[[1100001/2100011, 0, -1100001/2100011], [0, 0, -1], [100001/2100011, 0, -100001/2100011], [0, 0, 0], [0, 1, 0]]', 'd': '[[1000010/2100011], [0], [2000010/2100011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001000/100002100001, 1/100, 1100001/10000210000100], [-1/Cout, -1/(50*Cout), 0], [-1100001/1000021000010, 0, -100001/100002100001]]', 'b': '[[-1000010000/100002100001], [0], [-100001/100002100001]]', 'c': '[[110000100000/100002100001, 0, -1100001/100002100001], [0, 0, -1], [10000100000/100002100001, 0, -100001/100002100001], [0, 0, 0], [0, 1, 0]]', 'd': '[[100001000000/100002100001], [0], [100002000000/100002100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Rb1', 'Ra1'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '0', '12'], 'net_list': [['Sa0', 'IN', '11'], ['Sb0', 'IN', '11'], ['L0', 'OUT', '11'], ['C0', '0', '12'], ['Sb1', '11', '12']]}
['VIN - Sb - L - VOUT', 'VIN - Sa - L - VOUT', 'VIN - Sb - Sb - C - GND', 'VIN - Sa - Sb - C - GND', 'VOUT - L - Sb - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-Sb0']), ('L0', ['N-L0-Sa0-Sb0-Sb1', 'OUT']), ('Sa0', ['IN', 'N-L0-Sa0-Sb0-Sb1']), ('Sb0', ['N-C0-Sb0', 'N-L0-Sa0-Sb0-Sb1']), ('Sb1', ['IN', 'N-L0-Sa0-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/210001100, 1/100, 1100001/210001100], [-1/Cout, -1/(50*Cout), 0], [-1100001/21000110, 0, -100001/2100011]]', 'b': '[[-100001/21000110], [0], [-100001/2100011]]', 'c': '[[1100001/2100011, 0, -1100001/2100011], [0, 0, -1], [100001/2100011, 0, -100001/2100011], [0, 0, 0], [0, 1, 0]]', 'd': '[[1000010/2100011], [0], [2000010/2100011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001000/100002100001, 1/100, 1100001/10000210000100], [-1/Cout, -1/(50*Cout), 0], [-1100001/1000021000010, 0, -100001/100002100001]]', 'b': '[[-1000010000/100002100001], [0], [-100001/100002100001]]', 'c': '[[110000100000/100002100001, 0, -1100001/100002100001], [0, 0, -1], [10000100000/100002100001, 0, -100001/100002100001], [0, 0, 0], [0, 1, 0]]', 'd': '[[100001000000/100002100001], [0], [100002000000/100002100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Rb1', 'Ra1'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '0', '12'], 'net_list': [['Sa0', 'IN', '11'], ['Sb0', 'IN', '11'], ['L0', 'OUT', '11'], ['C0', '0', '12'], ['Sb1', '11', '12']]}
['VIN - L - Sb - VOUT', 'VIN - L - Sb - L - Sa - GND', 'VIN - L - Sb - L - Sb - GND', 'VOUT - L - Sa - GND', 'VOUT - L - Sb - GND']

 PCC-37117
1
OrderedDict([('L0', ['IN', 'N-L0-Sb1']), ('L1', ['N-L1-Sa0-Sb0', 'OUT']), ('Sa0', ['0', 'N-L1-Sa0-Sb0']), ('Sb0', ['0', 'N-L1-Sa0-Sb0']), ('Sb1', ['N-L0-Sb1', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, 0, -1/100], [0, -11/1000, -1/100], [1/Cout, 1/Cout, -1/(50*Cout)]]', 'b': '[[0], [1/100], [0]]', 'c': '[[-100000/100001, 0, 0], [0, 1, 1], [0, -1/10, 0], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, 0, -1/100], [0, -1000001/1000, -1/100], [1/Cout, 1/Cout, -1/(50*Cout)]]', 'b': '[[0], [1/100], [0]]', 'c': '[[-100000/100001, 0, 0], [0, 100000, 1], [0, -1/10, 0], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '10', '12'], 'net_list': [['Sa0', '0', '10'], ['Sb0', 'OUT', '12'], ['L0', '10', 'OUT'], ['Sb1', '0', '10'], ['L1', 'IN', '12']]}
['VIN - L - Sb - VOUT', 'VIN - L - Sb - L - Sa - GND', 'VIN - L - Sb - L - Sb - GND', 'VOUT - L - Sa - GND', 'VOUT - L - Sb - GND']

 PCC-37117
1
OrderedDict([('L0', ['IN', 'N-L0-Sb1']), ('L1', ['N-L1-Sa0-Sb0', 'OUT']), ('Sa0', ['0', 'N-L1-Sa0-Sb0']), ('Sb0', ['0', 'N-L1-Sa0-Sb0']), ('Sb1', ['N-L0-Sb1', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, 0, -1/100], [0, -11/1000, -1/100], [1/Cout, 1/Cout, -1/(50*Cout)]]', 'b': '[[0], [1/100], [0]]', 'c': '[[-100000/100001, 0, 0], [0, 1, 1], [0, -1/10, 0], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, 0, -1/100], [0, -1000001/1000, -1/100], [1/Cout, 1/Cout, -1/(50*Cout)]]', 'b': '[[0], [1/100], [0]]', 'c': '[[-100000/100001, 0, 0], [0, 100000, 1], [0, -1/10, 0], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '10', '12'], 'net_list': [['Sa0', '0', '10'], ['Sb0', 'OUT', '12'], ['L0', '10', 'OUT'], ['Sb1', '0', '10'], ['L1', 'IN', '12']]}
['VIN - L - Sb - VOUT', 'VIN - L - Sb - L - Sa - GND', 'VIN - L - Sb - L - Sb - GND', 'VOUT - L - Sa - GND', 'VOUT - L - Sb - GND']

 PCC-37117
1
OrderedDict([('L0', ['IN', 'N-L0-Sb1']), ('L1', ['N-L1-Sa0-Sb0', 'OUT']), ('Sa0', ['0', 'N-L1-Sa0-Sb0']), ('Sb0', ['0', 'N-L1-Sa0-Sb0']), ('Sb1', ['N-L0-Sb1', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, 0, -1/100], [0, -11/1000, -1/100], [1/Cout, 1/Cout, -1/(50*Cout)]]', 'b': '[[0], [1/100], [0]]', 'c': '[[-100000/100001, 0, 0], [0, 1, 1], [0, -1/10, 0], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, 0, -1/100], [0, -1000001/1000, -1/100], [1/Cout, 1/Cout, -1/(50*Cout)]]', 'b': '[[0], [1/100], [0]]', 'c': '[[-100000/100001, 0, 0], [0, 100000, 1], [0, -1/10, 0], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '10', '12'], 'net_list': [['Sa0', '0', '10'], ['Sb0', 'OUT', '12'], ['L0', '10', 'OUT'], ['Sb1', '0', '10'], ['L1', 'IN', '12']]}
['VIN - L - Sb - VOUT', 'VIN - L - Sb - L - Sa - GND', 'VIN - L - Sb - L - Sb - GND', 'VOUT - L - Sa - GND', 'VOUT - L - Sb - GND']

 PCC-37117
1
OrderedDict([('L0', ['IN', 'N-L0-Sb1']), ('L1', ['N-L1-Sa0-Sb0', 'OUT']), ('Sa0', ['0', 'N-L1-Sa0-Sb0']), ('Sb0', ['0', 'N-L1-Sa0-Sb0']), ('Sb1', ['N-L0-Sb1', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, 0, -1/100], [0, -11/1000, -1/100], [1/Cout, 1/Cout, -1/(50*Cout)]]', 'b': '[[0], [1/100], [0]]', 'c': '[[-100000/100001, 0, 0], [0, 1, 1], [0, -1/10, 0], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, 0, -1/100], [0, -1000001/1000, -1/100], [1/Cout, 1/Cout, -1/(50*Cout)]]', 'b': '[[0], [1/100], [0]]', 'c': '[[-100000/100001, 0, 0], [0, 100000, 1], [0, -1/10, 0], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '10', '12'], 'net_list': [['Sa0', '0', '10'], ['Sb0', 'OUT', '12'], ['L0', '10', 'OUT'], ['Sb1', '0', '10'], ['L1', 'IN', '12']]}
['VIN - L - Sb - VOUT', 'VIN - L - Sb - L - Sa - GND', 'VIN - L - Sb - L - Sb - GND', 'VOUT - L - Sa - GND', 'VOUT - L - Sb - GND']

 PCC-37117
1
OrderedDict([('L0', ['IN', 'N-L0-Sb1']), ('L1', ['N-L1-Sa0-Sb0', 'OUT']), ('Sa0', ['0', 'N-L1-Sa0-Sb0']), ('Sb0', ['0', 'N-L1-Sa0-Sb0']), ('Sb1', ['N-L0-Sb1', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, 0, -1/100], [0, -11/1000, -1/100], [1/Cout, 1/Cout, -1/(50*Cout)]]', 'b': '[[0], [1/100], [0]]', 'c': '[[-100000/100001, 0, 0], [0, 1, 1], [0, -1/10, 0], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, 0, -1/100], [0, -1000001/1000, -1/100], [1/Cout, 1/Cout, -1/(50*Cout)]]', 'b': '[[0], [1/100], [0]]', 'c': '[[-100000/100001, 0, 0], [0, 100000, 1], [0, -1/10, 0], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [0], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '10', '12'], 'net_list': [['Sa0', '0', '10'], ['Sb0', 'OUT', '12'], ['L0', '10', 'OUT'], ['Sb1', '0', '10'], ['L1', 'IN', '12']]}
['VIN - C - C - VOUT', 'VIN - C - Sa - GND', 'VIN - C - C - L - GND', 'VOUT - C - Sa - GND', 'VOUT - C - C - L - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-C1-C2-Sa0']), ('C1', ['N-C0-C1-C2-Sa0', 'N-C1-L0']), ('C2', ['N-C0-C1-C2-Sa0', 'OUT']), ('L0', ['0', 'N-C1-L0']), ('Sa0', ['0', 'N-C0-C1-C2-Sa0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)], [v_C2(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, 1/100, -1/100, 0], [1/Cout, -1002001/(100000*Cout), 1000001/(100000*Cout), 0, -10/Cout], [-1/10, 1000001/1000000, -1000001/1000000, 0, 1], [1/10, 0, 0, 0, 0], [0, -1, 1, 0, -1]]', 'b': '[[0], [10/Cout], [-1], [0], [1]]', 'c': '[[0, 1, -1, 0, 0], [0, 1, -1, 1, 0], [0, 1, -1, 0, 1], [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)], [v_C2(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, 1/100, -1/100, 0], [1/Cout, -551/(50*Cout), 11/Cout, 0, -10/Cout], [-1/10, 11/10, -11/10, 0, 1], [1/10, 0, 0, 0, 0], [0, -1, 1, 0, -1]]', 'b': '[[0], [10/Cout], [-1], [0], [1]]', 'c': '[[0, 1, -1, 0, 0], [0, 1, -1, 1, 0], [0, 1, -1, 0, 1], [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'C1', 'C2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12', '9'], 'net_list': [['Sa0', '0', '12'], ['L0', '0', '9'], ['C0', 'OUT', '12'], ['C1', '9', '12'], ['C2', 'IN', '12']]}
['VIN - C - C - VOUT', 'VIN - C - Sa - GND', 'VIN - C - C - L - GND', 'VOUT - C - Sa - GND', 'VOUT - C - C - L - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-C1-C2-Sa0']), ('C1', ['N-C0-C1-C2-Sa0', 'N-C1-L0']), ('C2', ['N-C0-C1-C2-Sa0', 'OUT']), ('L0', ['0', 'N-C1-L0']), ('Sa0', ['0', 'N-C0-C1-C2-Sa0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)], [v_C2(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, 1/100, -1/100, 0], [1/Cout, -1002001/(100000*Cout), 1000001/(100000*Cout), 0, -10/Cout], [-1/10, 1000001/1000000, -1000001/1000000, 0, 1], [1/10, 0, 0, 0, 0], [0, -1, 1, 0, -1]]', 'b': '[[0], [10/Cout], [-1], [0], [1]]', 'c': '[[0, 1, -1, 0, 0], [0, 1, -1, 1, 0], [0, 1, -1, 0, 1], [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)], [v_C2(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, 1/100, -1/100, 0], [1/Cout, -551/(50*Cout), 11/Cout, 0, -10/Cout], [-1/10, 11/10, -11/10, 0, 1], [1/10, 0, 0, 0, 0], [0, -1, 1, 0, -1]]', 'b': '[[0], [10/Cout], [-1], [0], [1]]', 'c': '[[0, 1, -1, 0, 0], [0, 1, -1, 1, 0], [0, 1, -1, 0, 1], [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'C1', 'C2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12', '9'], 'net_list': [['Sa0', '0', '12'], ['L0', '0', '9'], ['C0', 'OUT', '12'], ['C1', '9', '12'], ['C2', 'IN', '12']]}
['VIN - C - C - VOUT', 'VIN - C - Sa - GND', 'VIN - C - C - L - GND', 'VOUT - C - Sa - GND', 'VOUT - C - C - L - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-C1-C2-Sa0']), ('C1', ['N-C0-C1-C2-Sa0', 'N-C1-L0']), ('C2', ['N-C0-C1-C2-Sa0', 'OUT']), ('L0', ['0', 'N-C1-L0']), ('Sa0', ['0', 'N-C0-C1-C2-Sa0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)], [v_C2(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, 1/100, -1/100, 0], [1/Cout, -1002001/(100000*Cout), 1000001/(100000*Cout), 0, -10/Cout], [-1/10, 1000001/1000000, -1000001/1000000, 0, 1], [1/10, 0, 0, 0, 0], [0, -1, 1, 0, -1]]', 'b': '[[0], [10/Cout], [-1], [0], [1]]', 'c': '[[0, 1, -1, 0, 0], [0, 1, -1, 1, 0], [0, 1, -1, 0, 1], [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)], [v_C2(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, 1/100, -1/100, 0], [1/Cout, -551/(50*Cout), 11/Cout, 0, -10/Cout], [-1/10, 11/10, -11/10, 0, 1], [1/10, 0, 0, 0, 0], [0, -1, 1, 0, -1]]', 'b': '[[0], [10/Cout], [-1], [0], [1]]', 'c': '[[0, 1, -1, 0, 0], [0, 1, -1, 1, 0], [0, 1, -1, 0, 1], [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'C1', 'C2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12', '9'], 'net_list': [['Sa0', '0', '12'], ['L0', '0', '9'], ['C0', 'OUT', '12'], ['C1', '9', '12'], ['C2', 'IN', '12']]}
['VIN - C - C - VOUT', 'VIN - C - Sa - GND', 'VIN - C - C - L - GND', 'VOUT - C - Sa - GND', 'VOUT - C - C - L - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-C1-C2-Sa0']), ('C1', ['N-C0-C1-C2-Sa0', 'N-C1-L0']), ('C2', ['N-C0-C1-C2-Sa0', 'OUT']), ('L0', ['0', 'N-C1-L0']), ('Sa0', ['0', 'N-C0-C1-C2-Sa0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)], [v_C2(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, 1/100, -1/100, 0], [1/Cout, -1002001/(100000*Cout), 1000001/(100000*Cout), 0, -10/Cout], [-1/10, 1000001/1000000, -1000001/1000000, 0, 1], [1/10, 0, 0, 0, 0], [0, -1, 1, 0, -1]]', 'b': '[[0], [10/Cout], [-1], [0], [1]]', 'c': '[[0, 1, -1, 0, 0], [0, 1, -1, 1, 0], [0, 1, -1, 0, 1], [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)], [v_C2(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, 1/100, -1/100, 0], [1/Cout, -551/(50*Cout), 11/Cout, 0, -10/Cout], [-1/10, 11/10, -11/10, 0, 1], [1/10, 0, 0, 0, 0], [0, -1, 1, 0, -1]]', 'b': '[[0], [10/Cout], [-1], [0], [1]]', 'c': '[[0, 1, -1, 0, 0], [0, 1, -1, 1, 0], [0, 1, -1, 0, 1], [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'C1', 'C2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12', '9'], 'net_list': [['Sa0', '0', '12'], ['L0', '0', '9'], ['C0', 'OUT', '12'], ['C1', '9', '12'], ['C2', 'IN', '12']]}
['VIN - C - C - VOUT', 'VIN - C - Sa - GND', 'VIN - C - C - L - GND', 'VOUT - C - Sa - GND', 'VOUT - C - C - L - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-C1-C2-Sa0']), ('C1', ['N-C0-C1-C2-Sa0', 'N-C1-L0']), ('C2', ['N-C0-C1-C2-Sa0', 'OUT']), ('L0', ['0', 'N-C1-L0']), ('Sa0', ['0', 'N-C0-C1-C2-Sa0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)], [v_C2(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, 1/100, -1/100, 0], [1/Cout, -1002001/(100000*Cout), 1000001/(100000*Cout), 0, -10/Cout], [-1/10, 1000001/1000000, -1000001/1000000, 0, 1], [1/10, 0, 0, 0, 0], [0, -1, 1, 0, -1]]', 'b': '[[0], [10/Cout], [-1], [0], [1]]', 'c': '[[0, 1, -1, 0, 0], [0, 1, -1, 1, 0], [0, 1, -1, 0, 1], [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)], [v_C2(t)]]', 'y': '[[v_12(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, 1/100, -1/100, 0], [1/Cout, -551/(50*Cout), 11/Cout, 0, -10/Cout], [-1/10, 11/10, -11/10, 0, 1], [1/10, 0, 0, 0, 0], [0, -1, 1, 0, -1]]', 'b': '[[0], [10/Cout], [-1], [0], [1]]', 'c': '[[0, 1, -1, 0, 0], [0, 1, -1, 1, 0], [0, 1, -1, 0, 1], [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'C1', 'C2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12', '9'], 'net_list': [['Sa0', '0', '12'], ['L0', '0', '9'], ['C0', 'OUT', '12'], ['C1', '9', '12'], ['C2', 'IN', '12']]}
['VIN - L - Sa - VOUT', 'VIN - Sa - L - GND', 'VIN - Sa - L - GND', 'VOUT - Sa - L - Sa - L - GND', 'VOUT - Sa - L - Sa - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-Sa0-Sa1']), ('L1', ['IN', 'N-L1-Sa2']), ('Sa0', ['IN', 'N-L0-Sa0-Sa1']), ('Sa1', ['IN', 'N-L0-Sa0-Sa1']), ('Sa2', ['N-L1-Sa2', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000001/1000, -1/1000, 1/100], [-1/1000, -500001/1000, 0], [-1/Cout, 0, -1/(50*Cout)]]', 'b': '[[-1/100], [-1/100], [0]]', 'c': '[[1/10, 500001/10, 0], [-100000, 0, 1], [1/10, 1/10, 0], [0, 0, 0], [0, 0, 1]]', 'd': '[[1], [0], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-11/1000, -1/1000, 1/100], [-1/1000, -3/500, 0], [-1/Cout, 0, -1/(50*Cout)]]', 'b': '[[-1/100], [-1/100], [0]]', 'c': '[[1/10, 3/5, 0], [-1, 0, 1], [1/10, 1/10, 0], [0, 0, 0], [0, 0, 1]]', 'd': '[[1], [0], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'L1', 'Ra2', 'Rb2'], 'node_list': ['IN', 'OUT', 'IN_exact', '5', '12', '0'], 'net_list': [['Sa0', 'OUT', '5'], ['L0', '5', 'IN'], ['Sa1', '12', 'IN'], ['L1', '0', '12'], ['Sa2', 'IN', '12']]}
['VIN - L - Sa - VOUT', 'VIN - Sa - L - GND', 'VIN - Sa - L - GND', 'VOUT - Sa - L - Sa - L - GND', 'VOUT - Sa - L - Sa - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-Sa0-Sa1']), ('L1', ['IN', 'N-L1-Sa2']), ('Sa0', ['IN', 'N-L0-Sa0-Sa1']), ('Sa1', ['IN', 'N-L0-Sa0-Sa1']), ('Sa2', ['N-L1-Sa2', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000001/1000, -1/1000, 1/100], [-1/1000, -500001/1000, 0], [-1/Cout, 0, -1/(50*Cout)]]', 'b': '[[-1/100], [-1/100], [0]]', 'c': '[[1/10, 500001/10, 0], [-100000, 0, 1], [1/10, 1/10, 0], [0, 0, 0], [0, 0, 1]]', 'd': '[[1], [0], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-11/1000, -1/1000, 1/100], [-1/1000, -3/500, 0], [-1/Cout, 0, -1/(50*Cout)]]', 'b': '[[-1/100], [-1/100], [0]]', 'c': '[[1/10, 3/5, 0], [-1, 0, 1], [1/10, 1/10, 0], [0, 0, 0], [0, 0, 1]]', 'd': '[[1], [0], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'L1', 'Ra2', 'Rb2'], 'node_list': ['IN', 'OUT', 'IN_exact', '5', '12', '0'], 'net_list': [['Sa0', 'OUT', '5'], ['L0', '5', 'IN'], ['Sa1', '12', 'IN'], ['L1', '0', '12'], ['Sa2', 'IN', '12']]}
['VIN - L - Sa - VOUT', 'VIN - Sa - L - GND', 'VIN - Sa - L - GND', 'VOUT - Sa - L - Sa - L - GND', 'VOUT - Sa - L - Sa - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-Sa0-Sa1']), ('L1', ['IN', 'N-L1-Sa2']), ('Sa0', ['IN', 'N-L0-Sa0-Sa1']), ('Sa1', ['IN', 'N-L0-Sa0-Sa1']), ('Sa2', ['N-L1-Sa2', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000001/1000, -1/1000, 1/100], [-1/1000, -500001/1000, 0], [-1/Cout, 0, -1/(50*Cout)]]', 'b': '[[-1/100], [-1/100], [0]]', 'c': '[[1/10, 500001/10, 0], [-100000, 0, 1], [1/10, 1/10, 0], [0, 0, 0], [0, 0, 1]]', 'd': '[[1], [0], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-11/1000, -1/1000, 1/100], [-1/1000, -3/500, 0], [-1/Cout, 0, -1/(50*Cout)]]', 'b': '[[-1/100], [-1/100], [0]]', 'c': '[[1/10, 3/5, 0], [-1, 0, 1], [1/10, 1/10, 0], [0, 0, 0], [0, 0, 1]]', 'd': '[[1], [0], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'L1', 'Ra2', 'Rb2'], 'node_list': ['IN', 'OUT', 'IN_exact', '5', '12', '0'], 'net_list': [['Sa0', 'OUT', '5'], ['L0', '5', 'IN'], ['Sa1', '12', 'IN'], ['L1', '0', '12'], ['Sa2', 'IN', '12']]}
['VIN - L - Sa - VOUT', 'VIN - Sa - L - GND', 'VIN - Sa - L - GND', 'VOUT - Sa - L - Sa - L - GND', 'VOUT - Sa - L - Sa - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-Sa0-Sa1']), ('L1', ['IN', 'N-L1-Sa2']), ('Sa0', ['IN', 'N-L0-Sa0-Sa1']), ('Sa1', ['IN', 'N-L0-Sa0-Sa1']), ('Sa2', ['N-L1-Sa2', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000001/1000, -1/1000, 1/100], [-1/1000, -500001/1000, 0], [-1/Cout, 0, -1/(50*Cout)]]', 'b': '[[-1/100], [-1/100], [0]]', 'c': '[[1/10, 500001/10, 0], [-100000, 0, 1], [1/10, 1/10, 0], [0, 0, 0], [0, 0, 1]]', 'd': '[[1], [0], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-11/1000, -1/1000, 1/100], [-1/1000, -3/500, 0], [-1/Cout, 0, -1/(50*Cout)]]', 'b': '[[-1/100], [-1/100], [0]]', 'c': '[[1/10, 3/5, 0], [-1, 0, 1], [1/10, 1/10, 0], [0, 0, 0], [0, 0, 1]]', 'd': '[[1], [0], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'L1', 'Ra2', 'Rb2'], 'node_list': ['IN', 'OUT', 'IN_exact', '5', '12', '0'], 'net_list': [['Sa0', 'OUT', '5'], ['L0', '5', 'IN'], ['Sa1', '12', 'IN'], ['L1', '0', '12'], ['Sa2', 'IN', '12']]}
['VIN - L - Sa - VOUT', 'VIN - Sa - L - GND', 'VIN - Sa - L - GND', 'VOUT - Sa - L - Sa - L - GND', 'VOUT - Sa - L - Sa - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-Sa0-Sa1']), ('L1', ['IN', 'N-L1-Sa2']), ('Sa0', ['IN', 'N-L0-Sa0-Sa1']), ('Sa1', ['IN', 'N-L0-Sa0-Sa1']), ('Sa2', ['N-L1-Sa2', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000001/1000, -1/1000, 1/100], [-1/1000, -500001/1000, 0], [-1/Cout, 0, -1/(50*Cout)]]', 'b': '[[-1/100], [-1/100], [0]]', 'c': '[[1/10, 500001/10, 0], [-100000, 0, 1], [1/10, 1/10, 0], [0, 0, 0], [0, 0, 1]]', 'd': '[[1], [0], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-11/1000, -1/1000, 1/100], [-1/1000, -3/500, 0], [-1/Cout, 0, -1/(50*Cout)]]', 'b': '[[-1/100], [-1/100], [0]]', 'c': '[[1/10, 3/5, 0], [-1, 0, 1], [1/10, 1/10, 0], [0, 0, 0], [0, 0, 1]]', 'd': '[[1], [0], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'L1', 'Ra2', 'Rb2'], 'node_list': ['IN', 'OUT', 'IN_exact', '5', '12', '0'], 'net_list': [['Sa0', 'OUT', '5'], ['L0', '5', 'IN'], ['Sa1', '12', 'IN'], ['L1', '0', '12'], ['Sa2', 'IN', '12']]}
['VIN - Sb - VOUT', 'VIN - L - Sb - L - C - GND', 'VOUT - Sb - L - Sb - L - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-L0']), ('L0', ['N-C0-L0', 'N-L0-Sb0']), ('L1', ['IN', 'N-L1-Sb0']), ('Sb0', ['N-L0-Sb0', 'N-L1-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-37117 violations

['VIN - Sb - VOUT', 'VIN - L - Sb - L - C - GND', 'VOUT - Sb - L - Sb - L - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-L0']), ('L0', ['N-C0-L0', 'N-L0-Sb0']), ('L1', ['IN', 'N-L1-Sb0']), ('Sb0', ['N-L0-Sb0', 'N-L1-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - L - Sb - L - C - GND', 'VOUT - Sb - L - Sb - L - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-L0']), ('L0', ['N-C0-L0', 'N-L0-Sb0']), ('L1', ['IN', 'N-L1-Sb0']), ('Sb0', ['N-L0-Sb0', 'N-L1-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - L - Sb - L - C - GND', 'VOUT - Sb - L - Sb - L - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-L0']), ('L0', ['N-C0-L0', 'N-L0-Sb0']), ('L1', ['IN', 'N-L1-Sb0']), ('Sb0', ['N-L0-Sb0', 'N-L1-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - L - Sb - L - C - GND', 'VOUT - Sb - L - Sb - L - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-L0']), ('L0', ['N-C0-L0', 'N-L0-Sb0']), ('L1', ['IN', 'N-L1-Sb0']), ('Sb0', ['N-L0-Sb0', 'N-L1-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
has to be unconnected
has to be unconnected
has to be unconnected
has to be unconnected
has to be unconnected
has to be unconnected
has to be unconnected
has to be unconnected
['VIN - Sb - VOUT', 'VIN - C - Sa - GND', 'VIN - C - L - GND', 'VIN - L - Sa - GND', 'VIN - L - L - GND', 'VOUT - Sb - C - Sa - GND', 'VOUT - Sb - C - L - GND', 'VOUT - Sb - L - Sa - GND', 'VOUT - Sb - L - L - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-L0-L1-Sa0']), ('L0', ['IN', 'N-C0-L0-L1-Sa0']), ('L1', ['0', 'N-C0-L0-L1-Sa0']), ('Sa0', ['0', 'N-C0-L0-L1-Sa0']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1100001, 0, -1000/1100001, -11000/1100001], [0, 0, 0, -1/100], [100000/(1100001*Cout), 0, -51100051/(55000050*Cout), -1/(1100001*Cout)], [110000/1100001, 1/10, -1/11000010, -11/11000010]]', 'b': '[[-10000/1100001], [0], [1000000/(1100001*Cout)], [-1/1100001]]', 'c': '[[100000/1100001, 0, 100000/1100001, 1100000/1100001], [100000/1100001, 0, 100000/1100001, -1/1100001], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[1000000/1100001], [1000000/1100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1100001, 0, -1/110000100, -1000001/110000100], [0, 0, 0, -1/100], [1/(1100001*Cout), 0, -1100551/(55000050*Cout), -1/(1100001*Cout)], [1000001/11000010, 1/10, -1/11000010, -1000001/11000010]]', 'b': '[[-10000/1100001], [0], [10/(1100001*Cout)], [-100000/1100001]]', 'c': '[[100000/1100001, 0, 1/1100001, 1000001/1100001], [100000/1100001, 0, 1/1100001, -100000/1100001], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[1000000/1100001], [1000000/1100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sa0', '0', '12'], ['Sb0', 'IN', 'OUT'], ['L0', '0', '12'], ['C0', '12', 'IN'], ['L1', 'IN', '12']]}
['VIN - Sb - VOUT', 'VIN - C - Sa - GND', 'VIN - C - L - GND', 'VIN - L - Sa - GND', 'VIN - L - L - GND', 'VOUT - Sb - C - Sa - GND', 'VOUT - Sb - C - L - GND', 'VOUT - Sb - L - Sa - GND', 'VOUT - Sb - L - L - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-L0-L1-Sa0']), ('L0', ['IN', 'N-C0-L0-L1-Sa0']), ('L1', ['0', 'N-C0-L0-L1-Sa0']), ('Sa0', ['0', 'N-C0-L0-L1-Sa0']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1100001, 0, -1000/1100001, -11000/1100001], [0, 0, 0, -1/100], [100000/(1100001*Cout), 0, -51100051/(55000050*Cout), -1/(1100001*Cout)], [110000/1100001, 1/10, -1/11000010, -11/11000010]]', 'b': '[[-10000/1100001], [0], [1000000/(1100001*Cout)], [-1/1100001]]', 'c': '[[100000/1100001, 0, 100000/1100001, 1100000/1100001], [100000/1100001, 0, 100000/1100001, -1/1100001], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[1000000/1100001], [1000000/1100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1100001, 0, -1/110000100, -1000001/110000100], [0, 0, 0, -1/100], [1/(1100001*Cout), 0, -1100551/(55000050*Cout), -1/(1100001*Cout)], [1000001/11000010, 1/10, -1/11000010, -1000001/11000010]]', 'b': '[[-10000/1100001], [0], [10/(1100001*Cout)], [-100000/1100001]]', 'c': '[[100000/1100001, 0, 1/1100001, 1000001/1100001], [100000/1100001, 0, 1/1100001, -100000/1100001], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[1000000/1100001], [1000000/1100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sa0', '0', '12'], ['Sb0', 'IN', 'OUT'], ['L0', '0', '12'], ['C0', '12', 'IN'], ['L1', 'IN', '12']]}
['VIN - Sb - VOUT', 'VIN - C - Sa - GND', 'VIN - C - L - GND', 'VIN - L - Sa - GND', 'VIN - L - L - GND', 'VOUT - Sb - C - Sa - GND', 'VOUT - Sb - C - L - GND', 'VOUT - Sb - L - Sa - GND', 'VOUT - Sb - L - L - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-L0-L1-Sa0']), ('L0', ['IN', 'N-C0-L0-L1-Sa0']), ('L1', ['0', 'N-C0-L0-L1-Sa0']), ('Sa0', ['0', 'N-C0-L0-L1-Sa0']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1100001, 0, -1000/1100001, -11000/1100001], [0, 0, 0, -1/100], [100000/(1100001*Cout), 0, -51100051/(55000050*Cout), -1/(1100001*Cout)], [110000/1100001, 1/10, -1/11000010, -11/11000010]]', 'b': '[[-10000/1100001], [0], [1000000/(1100001*Cout)], [-1/1100001]]', 'c': '[[100000/1100001, 0, 100000/1100001, 1100000/1100001], [100000/1100001, 0, 100000/1100001, -1/1100001], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[1000000/1100001], [1000000/1100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1100001, 0, -1/110000100, -1000001/110000100], [0, 0, 0, -1/100], [1/(1100001*Cout), 0, -1100551/(55000050*Cout), -1/(1100001*Cout)], [1000001/11000010, 1/10, -1/11000010, -1000001/11000010]]', 'b': '[[-10000/1100001], [0], [10/(1100001*Cout)], [-100000/1100001]]', 'c': '[[100000/1100001, 0, 1/1100001, 1000001/1100001], [100000/1100001, 0, 1/1100001, -100000/1100001], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[1000000/1100001], [1000000/1100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sa0', '0', '12'], ['Sb0', 'IN', 'OUT'], ['L0', '0', '12'], ['C0', '12', 'IN'], ['L1', 'IN', '12']]}
['VIN - Sb - VOUT', 'VIN - C - Sa - GND', 'VIN - C - L - GND', 'VIN - L - Sa - GND', 'VIN - L - L - GND', 'VOUT - Sb - C - Sa - GND', 'VOUT - Sb - C - L - GND', 'VOUT - Sb - L - Sa - GND', 'VOUT - Sb - L - L - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-L0-L1-Sa0']), ('L0', ['IN', 'N-C0-L0-L1-Sa0']), ('L1', ['0', 'N-C0-L0-L1-Sa0']), ('Sa0', ['0', 'N-C0-L0-L1-Sa0']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1100001, 0, -1000/1100001, -11000/1100001], [0, 0, 0, -1/100], [100000/(1100001*Cout), 0, -51100051/(55000050*Cout), -1/(1100001*Cout)], [110000/1100001, 1/10, -1/11000010, -11/11000010]]', 'b': '[[-10000/1100001], [0], [1000000/(1100001*Cout)], [-1/1100001]]', 'c': '[[100000/1100001, 0, 100000/1100001, 1100000/1100001], [100000/1100001, 0, 100000/1100001, -1/1100001], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[1000000/1100001], [1000000/1100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1100001, 0, -1/110000100, -1000001/110000100], [0, 0, 0, -1/100], [1/(1100001*Cout), 0, -1100551/(55000050*Cout), -1/(1100001*Cout)], [1000001/11000010, 1/10, -1/11000010, -1000001/11000010]]', 'b': '[[-10000/1100001], [0], [10/(1100001*Cout)], [-100000/1100001]]', 'c': '[[100000/1100001, 0, 1/1100001, 1000001/1100001], [100000/1100001, 0, 1/1100001, -100000/1100001], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[1000000/1100001], [1000000/1100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sa0', '0', '12'], ['Sb0', 'IN', 'OUT'], ['L0', '0', '12'], ['C0', '12', 'IN'], ['L1', 'IN', '12']]}
['VIN - Sb - VOUT', 'VIN - C - Sa - GND', 'VIN - C - L - GND', 'VIN - L - Sa - GND', 'VIN - L - L - GND', 'VOUT - Sb - C - Sa - GND', 'VOUT - Sb - C - L - GND', 'VOUT - Sb - L - Sa - GND', 'VOUT - Sb - L - L - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-L0-L1-Sa0']), ('L0', ['IN', 'N-C0-L0-L1-Sa0']), ('L1', ['0', 'N-C0-L0-L1-Sa0']), ('Sa0', ['0', 'N-C0-L0-L1-Sa0']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1100001, 0, -1000/1100001, -11000/1100001], [0, 0, 0, -1/100], [100000/(1100001*Cout), 0, -51100051/(55000050*Cout), -1/(1100001*Cout)], [110000/1100001, 1/10, -1/11000010, -11/11000010]]', 'b': '[[-10000/1100001], [0], [1000000/(1100001*Cout)], [-1/1100001]]', 'c': '[[100000/1100001, 0, 100000/1100001, 1100000/1100001], [100000/1100001, 0, 100000/1100001, -1/1100001], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[1000000/1100001], [1000000/1100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1100001, 0, -1/110000100, -1000001/110000100], [0, 0, 0, -1/100], [1/(1100001*Cout), 0, -1100551/(55000050*Cout), -1/(1100001*Cout)], [1000001/11000010, 1/10, -1/11000010, -1000001/11000010]]', 'b': '[[-10000/1100001], [0], [10/(1100001*Cout)], [-100000/1100001]]', 'c': '[[100000/1100001, 0, 1/1100001, 1000001/1100001], [100000/1100001, 0, 1/1100001, -100000/1100001], [0, 0, 0, 0], [0, 0, 1, 0]]', 'd': '[[1000000/1100001], [1000000/1100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sa0', '0', '12'], ['Sb0', 'IN', 'OUT'], ['L0', '0', '12'], ['C0', '12', 'IN'], ['L1', 'IN', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - L - GND', 'VIN - Sa - L - GND', 'VOUT - Sb - Sa - L - GND', 'VOUT - Sb - Sa - L - GND', 'VOUT - Sa - Sa - L - GND', 'VOUT - Sa - Sa - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-Sa0-Sa1']), ('Sa0', ['IN', 'N-L0-Sa0-Sa1']), ('Sa1', ['IN', 'N-L0-Sa0-Sa1']), ('Sa2', ['IN', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-550001500/1100001, -100001/110000100], [100001/(1100001*Cout), -51100501/(55000050*Cout)]]', 'b': '[[-10000/1100001], [1000010/(1100001*Cout)]]', 'c': '[[55000150000/1100001, 100001/1100001], [100000/1100001, 100001/1100001], [0, 0], [0, 1]]', 'd': '[[1000000/1100001], [1000000/1100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1300001/220000200, -100001/110000100], [100001/(1100001*Cout), -51100501/(55000050*Cout)]]', 'b': '[[-10000/1100001], [1000010/(1100001*Cout)]]', 'c': '[[1300001/2200002, 100001/1100001], [100000/1100001, 100001/1100001], [0, 0], [0, 1]]', 'd': '[[1000000/1100001], [1000000/1100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'Ra2', 'Rb2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['L0', '0', '12'], ['Sa1', '12', 'IN'], ['Sa2', 'IN', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - L - GND', 'VIN - Sa - L - GND', 'VOUT - Sb - Sa - L - GND', 'VOUT - Sb - Sa - L - GND', 'VOUT - Sa - Sa - L - GND', 'VOUT - Sa - Sa - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-Sa0-Sa1']), ('Sa0', ['IN', 'N-L0-Sa0-Sa1']), ('Sa1', ['IN', 'N-L0-Sa0-Sa1']), ('Sa2', ['IN', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-550001500/1100001, -100001/110000100], [100001/(1100001*Cout), -51100501/(55000050*Cout)]]', 'b': '[[-10000/1100001], [1000010/(1100001*Cout)]]', 'c': '[[55000150000/1100001, 100001/1100001], [100000/1100001, 100001/1100001], [0, 0], [0, 1]]', 'd': '[[1000000/1100001], [1000000/1100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1300001/220000200, -100001/110000100], [100001/(1100001*Cout), -51100501/(55000050*Cout)]]', 'b': '[[-10000/1100001], [1000010/(1100001*Cout)]]', 'c': '[[1300001/2200002, 100001/1100001], [100000/1100001, 100001/1100001], [0, 0], [0, 1]]', 'd': '[[1000000/1100001], [1000000/1100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'Ra2', 'Rb2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['L0', '0', '12'], ['Sa1', '12', 'IN'], ['Sa2', 'IN', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - L - GND', 'VIN - Sa - L - GND', 'VOUT - Sb - Sa - L - GND', 'VOUT - Sb - Sa - L - GND', 'VOUT - Sa - Sa - L - GND', 'VOUT - Sa - Sa - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-Sa0-Sa1']), ('Sa0', ['IN', 'N-L0-Sa0-Sa1']), ('Sa1', ['IN', 'N-L0-Sa0-Sa1']), ('Sa2', ['IN', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-550001500/1100001, -100001/110000100], [100001/(1100001*Cout), -51100501/(55000050*Cout)]]', 'b': '[[-10000/1100001], [1000010/(1100001*Cout)]]', 'c': '[[55000150000/1100001, 100001/1100001], [100000/1100001, 100001/1100001], [0, 0], [0, 1]]', 'd': '[[1000000/1100001], [1000000/1100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1300001/220000200, -100001/110000100], [100001/(1100001*Cout), -51100501/(55000050*Cout)]]', 'b': '[[-10000/1100001], [1000010/(1100001*Cout)]]', 'c': '[[1300001/2200002, 100001/1100001], [100000/1100001, 100001/1100001], [0, 0], [0, 1]]', 'd': '[[1000000/1100001], [1000000/1100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'Ra2', 'Rb2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['L0', '0', '12'], ['Sa1', '12', 'IN'], ['Sa2', 'IN', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - L - GND', 'VIN - Sa - L - GND', 'VOUT - Sb - Sa - L - GND', 'VOUT - Sb - Sa - L - GND', 'VOUT - Sa - Sa - L - GND', 'VOUT - Sa - Sa - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-Sa0-Sa1']), ('Sa0', ['IN', 'N-L0-Sa0-Sa1']), ('Sa1', ['IN', 'N-L0-Sa0-Sa1']), ('Sa2', ['IN', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-550001500/1100001, -100001/110000100], [100001/(1100001*Cout), -51100501/(55000050*Cout)]]', 'b': '[[-10000/1100001], [1000010/(1100001*Cout)]]', 'c': '[[55000150000/1100001, 100001/1100001], [100000/1100001, 100001/1100001], [0, 0], [0, 1]]', 'd': '[[1000000/1100001], [1000000/1100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1300001/220000200, -100001/110000100], [100001/(1100001*Cout), -51100501/(55000050*Cout)]]', 'b': '[[-10000/1100001], [1000010/(1100001*Cout)]]', 'c': '[[1300001/2200002, 100001/1100001], [100000/1100001, 100001/1100001], [0, 0], [0, 1]]', 'd': '[[1000000/1100001], [1000000/1100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'Ra2', 'Rb2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['L0', '0', '12'], ['Sa1', '12', 'IN'], ['Sa2', 'IN', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - L - GND', 'VIN - Sa - L - GND', 'VOUT - Sb - Sa - L - GND', 'VOUT - Sb - Sa - L - GND', 'VOUT - Sa - Sa - L - GND', 'VOUT - Sa - Sa - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-Sa0-Sa1']), ('Sa0', ['IN', 'N-L0-Sa0-Sa1']), ('Sa1', ['IN', 'N-L0-Sa0-Sa1']), ('Sa2', ['IN', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-550001500/1100001, -100001/110000100], [100001/(1100001*Cout), -51100501/(55000050*Cout)]]', 'b': '[[-10000/1100001], [1000010/(1100001*Cout)]]', 'c': '[[55000150000/1100001, 100001/1100001], [100000/1100001, 100001/1100001], [0, 0], [0, 1]]', 'd': '[[1000000/1100001], [1000000/1100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1300001/220000200, -100001/110000100], [100001/(1100001*Cout), -51100501/(55000050*Cout)]]', 'b': '[[-10000/1100001], [1000010/(1100001*Cout)]]', 'c': '[[1300001/2200002, 100001/1100001], [100000/1100001, 100001/1100001], [0, 0], [0, 1]]', 'd': '[[1000000/1100001], [1000000/1100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'Ra2', 'Rb2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['L0', '0', '12'], ['Sa1', '12', 'IN'], ['Sa2', 'IN', '12']]}
has to be unconnected
has to be unconnected
['VIN - C - C - Sb - VOUT', 'VIN - L - Sb - VOUT', 'VIN - C - C - L - GND', 'VIN - L - L - GND', 'VOUT - Sb - L - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-C1']), ('C1', ['N-C0-C1', 'N-C1-L0-L1-Sb0']), ('L0', ['0', 'N-C1-L0-L1-Sb0']), ('L1', ['IN', 'N-C1-L0-L1-Sb0']), ('Sb0', ['N-C1-L0-L1-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, -1/100, 1/100], [0, -1/1100, -1/1100, -1/110, 1/110], [0, 1/(11*Cout), -511/(550*Cout), 10/(11*Cout), -10/(11*Cout)], [1/10, 1/11, 1/11, -1/11, 1/11], [-1/10, -1/11, -1/11, 1/11, -1/11]]', 'b': '[[0], [-1/110], [10/(11*Cout)], [-1/11], [1/11]]', 'c': '[[0, 1/11, 1/11, 10/11, -10/11], [0, 1/11, 1/11, -1/11, -10/11], [0, 1/11, 1/11, -1/11, 1/11], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[10/11], [10/11], [10/11], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, -1/100, 1/100], [0, -1000/1000001, -1/100000100, -10000/1000001, 10000/1000001], [0, 1/(1000001*Cout), -1000501/(50000050*Cout), 10/(1000001*Cout), -10/(1000001*Cout)], [1/10, 100000/1000001, 1/1000001, -1/1000001, 1/1000001], [-1/10, -100000/1000001, -1/1000001, 1/1000001, -1/1000001]]', 'b': '[[0], [-10000/1000001], [10/(1000001*Cout)], [-1/1000001], [1/1000001]]', 'c': '[[0, 100000/1000001, 1/1000001, 1000000/1000001, -1000000/1000001], [0, 100000/1000001, 1/1000001, -1/1000001, -1000000/1000001], [0, 100000/1000001, 1/1000001, -1/1000001, 1/1000001], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[1000000/1000001], [1000000/1000001], [1000000/1000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'L1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '10', '12', '0'], 'net_list': [['Sb0', 'OUT', '10'], ['L0', 'IN', '10'], ['C0', '10', '12'], ['L1', '0', '10'], ['C1', 'IN', '12']]}
['VIN - C - C - Sb - VOUT', 'VIN - L - Sb - VOUT', 'VIN - C - C - L - GND', 'VIN - L - L - GND', 'VOUT - Sb - L - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-C1']), ('C1', ['N-C0-C1', 'N-C1-L0-L1-Sb0']), ('L0', ['0', 'N-C1-L0-L1-Sb0']), ('L1', ['IN', 'N-C1-L0-L1-Sb0']), ('Sb0', ['N-C1-L0-L1-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, -1/100, 1/100], [0, -1/1100, -1/1100, -1/110, 1/110], [0, 1/(11*Cout), -511/(550*Cout), 10/(11*Cout), -10/(11*Cout)], [1/10, 1/11, 1/11, -1/11, 1/11], [-1/10, -1/11, -1/11, 1/11, -1/11]]', 'b': '[[0], [-1/110], [10/(11*Cout)], [-1/11], [1/11]]', 'c': '[[0, 1/11, 1/11, 10/11, -10/11], [0, 1/11, 1/11, -1/11, -10/11], [0, 1/11, 1/11, -1/11, 1/11], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[10/11], [10/11], [10/11], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, -1/100, 1/100], [0, -1000/1000001, -1/100000100, -10000/1000001, 10000/1000001], [0, 1/(1000001*Cout), -1000501/(50000050*Cout), 10/(1000001*Cout), -10/(1000001*Cout)], [1/10, 100000/1000001, 1/1000001, -1/1000001, 1/1000001], [-1/10, -100000/1000001, -1/1000001, 1/1000001, -1/1000001]]', 'b': '[[0], [-10000/1000001], [10/(1000001*Cout)], [-1/1000001], [1/1000001]]', 'c': '[[0, 100000/1000001, 1/1000001, 1000000/1000001, -1000000/1000001], [0, 100000/1000001, 1/1000001, -1/1000001, -1000000/1000001], [0, 100000/1000001, 1/1000001, -1/1000001, 1/1000001], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[1000000/1000001], [1000000/1000001], [1000000/1000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'L1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '10', '12', '0'], 'net_list': [['Sb0', 'OUT', '10'], ['L0', 'IN', '10'], ['C0', '10', '12'], ['L1', '0', '10'], ['C1', 'IN', '12']]}
['VIN - C - C - Sb - VOUT', 'VIN - L - Sb - VOUT', 'VIN - C - C - L - GND', 'VIN - L - L - GND', 'VOUT - Sb - L - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-C1']), ('C1', ['N-C0-C1', 'N-C1-L0-L1-Sb0']), ('L0', ['0', 'N-C1-L0-L1-Sb0']), ('L1', ['IN', 'N-C1-L0-L1-Sb0']), ('Sb0', ['N-C1-L0-L1-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, -1/100, 1/100], [0, -1/1100, -1/1100, -1/110, 1/110], [0, 1/(11*Cout), -511/(550*Cout), 10/(11*Cout), -10/(11*Cout)], [1/10, 1/11, 1/11, -1/11, 1/11], [-1/10, -1/11, -1/11, 1/11, -1/11]]', 'b': '[[0], [-1/110], [10/(11*Cout)], [-1/11], [1/11]]', 'c': '[[0, 1/11, 1/11, 10/11, -10/11], [0, 1/11, 1/11, -1/11, -10/11], [0, 1/11, 1/11, -1/11, 1/11], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[10/11], [10/11], [10/11], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, -1/100, 1/100], [0, -1000/1000001, -1/100000100, -10000/1000001, 10000/1000001], [0, 1/(1000001*Cout), -1000501/(50000050*Cout), 10/(1000001*Cout), -10/(1000001*Cout)], [1/10, 100000/1000001, 1/1000001, -1/1000001, 1/1000001], [-1/10, -100000/1000001, -1/1000001, 1/1000001, -1/1000001]]', 'b': '[[0], [-10000/1000001], [10/(1000001*Cout)], [-1/1000001], [1/1000001]]', 'c': '[[0, 100000/1000001, 1/1000001, 1000000/1000001, -1000000/1000001], [0, 100000/1000001, 1/1000001, -1/1000001, -1000000/1000001], [0, 100000/1000001, 1/1000001, -1/1000001, 1/1000001], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[1000000/1000001], [1000000/1000001], [1000000/1000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'L1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '10', '12', '0'], 'net_list': [['Sb0', 'OUT', '10'], ['L0', 'IN', '10'], ['C0', '10', '12'], ['L1', '0', '10'], ['C1', 'IN', '12']]}
['VIN - C - C - Sb - VOUT', 'VIN - L - Sb - VOUT', 'VIN - C - C - L - GND', 'VIN - L - L - GND', 'VOUT - Sb - L - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-C1']), ('C1', ['N-C0-C1', 'N-C1-L0-L1-Sb0']), ('L0', ['0', 'N-C1-L0-L1-Sb0']), ('L1', ['IN', 'N-C1-L0-L1-Sb0']), ('Sb0', ['N-C1-L0-L1-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, -1/100, 1/100], [0, -1/1100, -1/1100, -1/110, 1/110], [0, 1/(11*Cout), -511/(550*Cout), 10/(11*Cout), -10/(11*Cout)], [1/10, 1/11, 1/11, -1/11, 1/11], [-1/10, -1/11, -1/11, 1/11, -1/11]]', 'b': '[[0], [-1/110], [10/(11*Cout)], [-1/11], [1/11]]', 'c': '[[0, 1/11, 1/11, 10/11, -10/11], [0, 1/11, 1/11, -1/11, -10/11], [0, 1/11, 1/11, -1/11, 1/11], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[10/11], [10/11], [10/11], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, -1/100, 1/100], [0, -1000/1000001, -1/100000100, -10000/1000001, 10000/1000001], [0, 1/(1000001*Cout), -1000501/(50000050*Cout), 10/(1000001*Cout), -10/(1000001*Cout)], [1/10, 100000/1000001, 1/1000001, -1/1000001, 1/1000001], [-1/10, -100000/1000001, -1/1000001, 1/1000001, -1/1000001]]', 'b': '[[0], [-10000/1000001], [10/(1000001*Cout)], [-1/1000001], [1/1000001]]', 'c': '[[0, 100000/1000001, 1/1000001, 1000000/1000001, -1000000/1000001], [0, 100000/1000001, 1/1000001, -1/1000001, -1000000/1000001], [0, 100000/1000001, 1/1000001, -1/1000001, 1/1000001], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[1000000/1000001], [1000000/1000001], [1000000/1000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'L1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '10', '12', '0'], 'net_list': [['Sb0', 'OUT', '10'], ['L0', 'IN', '10'], ['C0', '10', '12'], ['L1', '0', '10'], ['C1', 'IN', '12']]}
['VIN - C - C - Sb - VOUT', 'VIN - L - Sb - VOUT', 'VIN - C - C - L - GND', 'VIN - L - L - GND', 'VOUT - Sb - L - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-C1']), ('C1', ['N-C0-C1', 'N-C1-L0-L1-Sb0']), ('L0', ['0', 'N-C1-L0-L1-Sb0']), ('L1', ['IN', 'N-C1-L0-L1-Sb0']), ('Sb0', ['N-C1-L0-L1-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, -1/100, 1/100], [0, -1/1100, -1/1100, -1/110, 1/110], [0, 1/(11*Cout), -511/(550*Cout), 10/(11*Cout), -10/(11*Cout)], [1/10, 1/11, 1/11, -1/11, 1/11], [-1/10, -1/11, -1/11, 1/11, -1/11]]', 'b': '[[0], [-1/110], [10/(11*Cout)], [-1/11], [1/11]]', 'c': '[[0, 1/11, 1/11, 10/11, -10/11], [0, 1/11, 1/11, -1/11, -10/11], [0, 1/11, 1/11, -1/11, 1/11], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[10/11], [10/11], [10/11], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 0, 0, -1/100, 1/100], [0, -1000/1000001, -1/100000100, -10000/1000001, 10000/1000001], [0, 1/(1000001*Cout), -1000501/(50000050*Cout), 10/(1000001*Cout), -10/(1000001*Cout)], [1/10, 100000/1000001, 1/1000001, -1/1000001, 1/1000001], [-1/10, -100000/1000001, -1/1000001, 1/1000001, -1/1000001]]', 'b': '[[0], [-10000/1000001], [10/(1000001*Cout)], [-1/1000001], [1/1000001]]', 'c': '[[0, 100000/1000001, 1/1000001, 1000000/1000001, -1000000/1000001], [0, 100000/1000001, 1/1000001, -1/1000001, -1000000/1000001], [0, 100000/1000001, 1/1000001, -1/1000001, 1/1000001], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0]]', 'd': '[[1000000/1000001], [1000000/1000001], [1000000/1000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0', 'L1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '10', '12', '0'], 'net_list': [['Sb0', 'OUT', '10'], ['L0', 'IN', '10'], ['C0', '10', '12'], ['L1', '0', '10'], ['C1', 'IN', '12']]}
has to be unconnected
has to be unconnected
has to be unconnected
has to be unconnected
has to be unconnected
has to be unconnected
has to be unconnected
['VIN - Sb - Sa - C - VOUT', 'VIN - L - Sa - C - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - Sa - GND', 'VIN - L - Sa - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND', 'VOUT - Sa - Sb - Sa - GND', 'VOUT - Sa - L - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'OUT']), ('L0', ['IN', 'N-L0-Sa1-Sb0']), ('Sa0', ['IN', 'OUT']), ('Sa1', ['0', 'N-L0-Sa1-Sb0']), ('Sb0', ['IN', 'N-L0-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-37117 violations

['VIN - Sb - Sa - C - VOUT', 'VIN - L - Sa - C - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - Sa - GND', 'VIN - L - Sa - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND', 'VOUT - Sa - Sb - Sa - GND', 'VOUT - Sa - L - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'OUT']), ('L0', ['IN', 'N-L0-Sa1-Sb0']), ('Sa0', ['IN', 'OUT']), ('Sa1', ['0', 'N-L0-Sa1-Sb0']), ('Sb0', ['IN', 'N-L0-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - Sa - C - VOUT', 'VIN - L - Sa - C - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - Sa - GND', 'VIN - L - Sa - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND', 'VOUT - Sa - Sb - Sa - GND', 'VOUT - Sa - L - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'OUT']), ('L0', ['IN', 'N-L0-Sa1-Sb0']), ('Sa0', ['IN', 'OUT']), ('Sa1', ['0', 'N-L0-Sa1-Sb0']), ('Sb0', ['IN', 'N-L0-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - Sa - C - VOUT', 'VIN - L - Sa - C - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - Sa - GND', 'VIN - L - Sa - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND', 'VOUT - Sa - Sb - Sa - GND', 'VOUT - Sa - L - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'OUT']), ('L0', ['IN', 'N-L0-Sa1-Sb0']), ('Sa0', ['IN', 'OUT']), ('Sa1', ['0', 'N-L0-Sa1-Sb0']), ('Sb0', ['IN', 'N-L0-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - Sa - C - VOUT', 'VIN - L - Sa - C - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - Sa - GND', 'VIN - L - Sa - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND', 'VOUT - Sa - Sb - Sa - GND', 'VOUT - Sa - L - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'OUT']), ('L0', ['IN', 'N-L0-Sa1-Sb0']), ('Sa0', ['IN', 'OUT']), ('Sa1', ['0', 'N-L0-Sa1-Sb0']), ('Sb0', ['IN', 'N-L0-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
has to be unconnected
has to be unconnected
has to be unconnected
has to be unconnected
has to be unconnected
['VIN - Sb - VOUT', 'VIN - Sb - C - C - GND', 'VIN - Sb - C - Sb - GND', 'VIN - Sb - C - Sa - GND', 'VOUT - C - C - GND', 'VOUT - C - Sb - GND', 'VOUT - C - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-C1-Sa0-Sb1', 'OUT']), ('C1', ['0', 'N-C0-C1-Sa0-Sb1']), ('Sa0', ['0', 'N-C0-C1-Sa0-Sb1']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-C0-C1-Sa0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-37117 violations

['VIN - Sb - VOUT', 'VIN - Sb - C - C - GND', 'VIN - Sb - C - Sb - GND', 'VIN - Sb - C - Sa - GND', 'VOUT - C - C - GND', 'VOUT - C - Sb - GND', 'VOUT - C - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-C1-Sa0-Sb1', 'OUT']), ('C1', ['0', 'N-C0-C1-Sa0-Sb1']), ('Sa0', ['0', 'N-C0-C1-Sa0-Sb1']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-C0-C1-Sa0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sb - C - C - GND', 'VIN - Sb - C - Sb - GND', 'VIN - Sb - C - Sa - GND', 'VOUT - C - C - GND', 'VOUT - C - Sb - GND', 'VOUT - C - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-C1-Sa0-Sb1', 'OUT']), ('C1', ['0', 'N-C0-C1-Sa0-Sb1']), ('Sa0', ['0', 'N-C0-C1-Sa0-Sb1']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-C0-C1-Sa0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sb - C - C - GND', 'VIN - Sb - C - Sb - GND', 'VIN - Sb - C - Sa - GND', 'VOUT - C - C - GND', 'VOUT - C - Sb - GND', 'VOUT - C - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-C1-Sa0-Sb1', 'OUT']), ('C1', ['0', 'N-C0-C1-Sa0-Sb1']), ('Sa0', ['0', 'N-C0-C1-Sa0-Sb1']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-C0-C1-Sa0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sb - C - C - GND', 'VIN - Sb - C - Sb - GND', 'VIN - Sb - C - Sa - GND', 'VOUT - C - C - GND', 'VOUT - C - Sb - GND', 'VOUT - C - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-C1-Sa0-Sb1', 'OUT']), ('C1', ['0', 'N-C0-C1-Sa0-Sb1']), ('Sa0', ['0', 'N-C0-C1-Sa0-Sb1']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-C0-C1-Sa0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - Sb - Sb - VOUT', 'VIN - Sb - Sb - Sb - Sa - L - GND', 'VOUT - Sa - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-Sa0']), ('Sa0', ['N-L0-Sa0', 'OUT']), ('Sb0', ['N-Sb0-Sb1', 'N-Sb0-Sb2']), ('Sb1', ['IN', 'N-Sb0-Sb1']), ('Sb2', ['N-Sb0-Sb2', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000, -1/100], [1/Cout, -531/(1550*Cout)]]', 'b': '[[0], [10/(31*Cout)]]', 'c': '[[0, 21/31], [0, 11/31], [100000, 1], [0, 1/31], [0, 0], [0, 1]]', 'd': '[[10/31], [20/31], [0], [30/31], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/100, -1/100], [1/Cout, -3000501/(150000050*Cout)]]', 'b': '[[0], [10/(3000001*Cout)]]', 'c': '[[0, 2000001/3000001], [0, 1000001/3000001], [1, 1], [0, 1/3000001], [0, 0], [0, 1]]', 'd': '[[1000000/3000001], [2000000/3000001], [0], [3000000/3000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'Rb2', 'Ra2'], 'node_list': ['IN', 'OUT', 'IN_exact', '8', '11', '0', '12'], 'net_list': [['Sa0', 'OUT', '8'], ['Sb0', 'OUT', '11'], ['L0', '0', '8'], ['Sb1', 'IN', '12'], ['Sb2', '11', '12']]}
['VIN - Sb - Sb - Sb - VOUT', 'VIN - Sb - Sb - Sb - Sa - L - GND', 'VOUT - Sa - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-Sa0']), ('Sa0', ['N-L0-Sa0', 'OUT']), ('Sb0', ['N-Sb0-Sb1', 'N-Sb0-Sb2']), ('Sb1', ['IN', 'N-Sb0-Sb1']), ('Sb2', ['N-Sb0-Sb2', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000, -1/100], [1/Cout, -531/(1550*Cout)]]', 'b': '[[0], [10/(31*Cout)]]', 'c': '[[0, 21/31], [0, 11/31], [100000, 1], [0, 1/31], [0, 0], [0, 1]]', 'd': '[[10/31], [20/31], [0], [30/31], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/100, -1/100], [1/Cout, -3000501/(150000050*Cout)]]', 'b': '[[0], [10/(3000001*Cout)]]', 'c': '[[0, 2000001/3000001], [0, 1000001/3000001], [1, 1], [0, 1/3000001], [0, 0], [0, 1]]', 'd': '[[1000000/3000001], [2000000/3000001], [0], [3000000/3000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'Rb2', 'Ra2'], 'node_list': ['IN', 'OUT', 'IN_exact', '8', '11', '0', '12'], 'net_list': [['Sa0', 'OUT', '8'], ['Sb0', 'OUT', '11'], ['L0', '0', '8'], ['Sb1', 'IN', '12'], ['Sb2', '11', '12']]}
['VIN - Sb - Sb - Sb - VOUT', 'VIN - Sb - Sb - Sb - Sa - L - GND', 'VOUT - Sa - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-Sa0']), ('Sa0', ['N-L0-Sa0', 'OUT']), ('Sb0', ['N-Sb0-Sb1', 'N-Sb0-Sb2']), ('Sb1', ['IN', 'N-Sb0-Sb1']), ('Sb2', ['N-Sb0-Sb2', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000, -1/100], [1/Cout, -531/(1550*Cout)]]', 'b': '[[0], [10/(31*Cout)]]', 'c': '[[0, 21/31], [0, 11/31], [100000, 1], [0, 1/31], [0, 0], [0, 1]]', 'd': '[[10/31], [20/31], [0], [30/31], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/100, -1/100], [1/Cout, -3000501/(150000050*Cout)]]', 'b': '[[0], [10/(3000001*Cout)]]', 'c': '[[0, 2000001/3000001], [0, 1000001/3000001], [1, 1], [0, 1/3000001], [0, 0], [0, 1]]', 'd': '[[1000000/3000001], [2000000/3000001], [0], [3000000/3000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'Rb2', 'Ra2'], 'node_list': ['IN', 'OUT', 'IN_exact', '8', '11', '0', '12'], 'net_list': [['Sa0', 'OUT', '8'], ['Sb0', 'OUT', '11'], ['L0', '0', '8'], ['Sb1', 'IN', '12'], ['Sb2', '11', '12']]}
['VIN - Sb - Sb - Sb - VOUT', 'VIN - Sb - Sb - Sb - Sa - L - GND', 'VOUT - Sa - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-Sa0']), ('Sa0', ['N-L0-Sa0', 'OUT']), ('Sb0', ['N-Sb0-Sb1', 'N-Sb0-Sb2']), ('Sb1', ['IN', 'N-Sb0-Sb1']), ('Sb2', ['N-Sb0-Sb2', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000, -1/100], [1/Cout, -531/(1550*Cout)]]', 'b': '[[0], [10/(31*Cout)]]', 'c': '[[0, 21/31], [0, 11/31], [100000, 1], [0, 1/31], [0, 0], [0, 1]]', 'd': '[[10/31], [20/31], [0], [30/31], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/100, -1/100], [1/Cout, -3000501/(150000050*Cout)]]', 'b': '[[0], [10/(3000001*Cout)]]', 'c': '[[0, 2000001/3000001], [0, 1000001/3000001], [1, 1], [0, 1/3000001], [0, 0], [0, 1]]', 'd': '[[1000000/3000001], [2000000/3000001], [0], [3000000/3000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'Rb2', 'Ra2'], 'node_list': ['IN', 'OUT', 'IN_exact', '8', '11', '0', '12'], 'net_list': [['Sa0', 'OUT', '8'], ['Sb0', 'OUT', '11'], ['L0', '0', '8'], ['Sb1', 'IN', '12'], ['Sb2', '11', '12']]}
['VIN - Sb - Sb - Sb - VOUT', 'VIN - Sb - Sb - Sb - Sa - L - GND', 'VOUT - Sa - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-Sa0']), ('Sa0', ['N-L0-Sa0', 'OUT']), ('Sb0', ['N-Sb0-Sb1', 'N-Sb0-Sb2']), ('Sb1', ['IN', 'N-Sb0-Sb1']), ('Sb2', ['N-Sb0-Sb2', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000, -1/100], [1/Cout, -531/(1550*Cout)]]', 'b': '[[0], [10/(31*Cout)]]', 'c': '[[0, 21/31], [0, 11/31], [100000, 1], [0, 1/31], [0, 0], [0, 1]]', 'd': '[[10/31], [20/31], [0], [30/31], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/100, -1/100], [1/Cout, -3000501/(150000050*Cout)]]', 'b': '[[0], [10/(3000001*Cout)]]', 'c': '[[0, 2000001/3000001], [0, 1000001/3000001], [1, 1], [0, 1/3000001], [0, 0], [0, 1]]', 'd': '[[1000000/3000001], [2000000/3000001], [0], [3000000/3000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'Rb2', 'Ra2'], 'node_list': ['IN', 'OUT', 'IN_exact', '8', '11', '0', '12'], 'net_list': [['Sa0', 'OUT', '8'], ['Sb0', 'OUT', '11'], ['L0', '0', '8'], ['Sb1', 'IN', '12'], ['Sb2', '11', '12']]}
has to be unconnected
has to be unconnected
has to be unconnected
['VIN - Sb - VOUT', 'VIN - Sa - Sb - GND', 'VIN - L - Sb - GND', 'VIN - Sa - Sb - GND', 'VOUT - Sb - Sa - Sb - GND', 'VOUT - Sb - L - Sb - GND', 'VOUT - Sb - Sa - Sb - GND']

 PCC-37117
1
OrderedDict([('L0', ['IN', 'N-L0-Sa0-Sa1-Sb0']), ('Sa0', ['IN', 'N-L0-Sa0-Sa1-Sb0']), ('Sa1', ['IN', 'N-L0-Sa0-Sa1-Sb0']), ('Sb0', ['0', 'N-L0-Sa0-Sa1-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1500/137503, 125/137503], [-12500/(137503*Cout), -12775281/(13750300*Cout)]]', 'b': '[[1250/137503], [250005/(275006*Cout)]]', 'c': '[[137500/137503, 1/550012], [-12500/137503, 50001/550012], [0, 0], [0, 1]]', 'd': '[[5/275006], [250005/275006], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000002000/200001400001, 1/20000140000100], [-1/(200001400001*Cout), -200101400601/(10000070000050*Cout)]]', 'b': '[[10000/200001400001], [2000010/(200001400001*Cout)]]', 'c': '[[100000100000/200001400001, 200000/200001400001], [-100000/200001400001, 200001/200001400001], [0, 0], [0, 1]]', 'd': '[[200000000000/200001400001], [200001000000/200001400001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', '12', 'IN'], ['Sb0', 'IN', 'OUT'], ['L0', 'IN', '12'], ['Sa1', '12', 'IN'], ['Sb1', '0', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - Sb - GND', 'VIN - L - Sb - GND', 'VIN - Sa - Sb - GND', 'VOUT - Sb - Sa - Sb - GND', 'VOUT - Sb - L - Sb - GND', 'VOUT - Sb - Sa - Sb - GND']

 PCC-37117
1
OrderedDict([('L0', ['IN', 'N-L0-Sa0-Sa1-Sb0']), ('Sa0', ['IN', 'N-L0-Sa0-Sa1-Sb0']), ('Sa1', ['IN', 'N-L0-Sa0-Sa1-Sb0']), ('Sb0', ['0', 'N-L0-Sa0-Sa1-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1500/137503, 125/137503], [-12500/(137503*Cout), -12775281/(13750300*Cout)]]', 'b': '[[1250/137503], [250005/(275006*Cout)]]', 'c': '[[137500/137503, 1/550012], [-12500/137503, 50001/550012], [0, 0], [0, 1]]', 'd': '[[5/275006], [250005/275006], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000002000/200001400001, 1/20000140000100], [-1/(200001400001*Cout), -200101400601/(10000070000050*Cout)]]', 'b': '[[10000/200001400001], [2000010/(200001400001*Cout)]]', 'c': '[[100000100000/200001400001, 200000/200001400001], [-100000/200001400001, 200001/200001400001], [0, 0], [0, 1]]', 'd': '[[200000000000/200001400001], [200001000000/200001400001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', '12', 'IN'], ['Sb0', 'IN', 'OUT'], ['L0', 'IN', '12'], ['Sa1', '12', 'IN'], ['Sb1', '0', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - Sb - GND', 'VIN - L - Sb - GND', 'VIN - Sa - Sb - GND', 'VOUT - Sb - Sa - Sb - GND', 'VOUT - Sb - L - Sb - GND', 'VOUT - Sb - Sa - Sb - GND']

 PCC-37117
1
OrderedDict([('L0', ['IN', 'N-L0-Sa0-Sa1-Sb0']), ('Sa0', ['IN', 'N-L0-Sa0-Sa1-Sb0']), ('Sa1', ['IN', 'N-L0-Sa0-Sa1-Sb0']), ('Sb0', ['0', 'N-L0-Sa0-Sa1-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1500/137503, 125/137503], [-12500/(137503*Cout), -12775281/(13750300*Cout)]]', 'b': '[[1250/137503], [250005/(275006*Cout)]]', 'c': '[[137500/137503, 1/550012], [-12500/137503, 50001/550012], [0, 0], [0, 1]]', 'd': '[[5/275006], [250005/275006], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000002000/200001400001, 1/20000140000100], [-1/(200001400001*Cout), -200101400601/(10000070000050*Cout)]]', 'b': '[[10000/200001400001], [2000010/(200001400001*Cout)]]', 'c': '[[100000100000/200001400001, 200000/200001400001], [-100000/200001400001, 200001/200001400001], [0, 0], [0, 1]]', 'd': '[[200000000000/200001400001], [200001000000/200001400001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', '12', 'IN'], ['Sb0', 'IN', 'OUT'], ['L0', 'IN', '12'], ['Sa1', '12', 'IN'], ['Sb1', '0', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - Sb - GND', 'VIN - L - Sb - GND', 'VIN - Sa - Sb - GND', 'VOUT - Sb - Sa - Sb - GND', 'VOUT - Sb - L - Sb - GND', 'VOUT - Sb - Sa - Sb - GND']

 PCC-37117
1
OrderedDict([('L0', ['IN', 'N-L0-Sa0-Sa1-Sb0']), ('Sa0', ['IN', 'N-L0-Sa0-Sa1-Sb0']), ('Sa1', ['IN', 'N-L0-Sa0-Sa1-Sb0']), ('Sb0', ['0', 'N-L0-Sa0-Sa1-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1500/137503, 125/137503], [-12500/(137503*Cout), -12775281/(13750300*Cout)]]', 'b': '[[1250/137503], [250005/(275006*Cout)]]', 'c': '[[137500/137503, 1/550012], [-12500/137503, 50001/550012], [0, 0], [0, 1]]', 'd': '[[5/275006], [250005/275006], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000002000/200001400001, 1/20000140000100], [-1/(200001400001*Cout), -200101400601/(10000070000050*Cout)]]', 'b': '[[10000/200001400001], [2000010/(200001400001*Cout)]]', 'c': '[[100000100000/200001400001, 200000/200001400001], [-100000/200001400001, 200001/200001400001], [0, 0], [0, 1]]', 'd': '[[200000000000/200001400001], [200001000000/200001400001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', '12', 'IN'], ['Sb0', 'IN', 'OUT'], ['L0', 'IN', '12'], ['Sa1', '12', 'IN'], ['Sb1', '0', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - Sb - GND', 'VIN - L - Sb - GND', 'VIN - Sa - Sb - GND', 'VOUT - Sb - Sa - Sb - GND', 'VOUT - Sb - L - Sb - GND', 'VOUT - Sb - Sa - Sb - GND']

 PCC-37117
1
OrderedDict([('L0', ['IN', 'N-L0-Sa0-Sa1-Sb0']), ('Sa0', ['IN', 'N-L0-Sa0-Sa1-Sb0']), ('Sa1', ['IN', 'N-L0-Sa0-Sa1-Sb0']), ('Sb0', ['0', 'N-L0-Sa0-Sa1-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1500/137503, 125/137503], [-12500/(137503*Cout), -12775281/(13750300*Cout)]]', 'b': '[[1250/137503], [250005/(275006*Cout)]]', 'c': '[[137500/137503, 1/550012], [-12500/137503, 50001/550012], [0, 0], [0, 1]]', 'd': '[[5/275006], [250005/275006], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000002000/200001400001, 1/20000140000100], [-1/(200001400001*Cout), -200101400601/(10000070000050*Cout)]]', 'b': '[[10000/200001400001], [2000010/(200001400001*Cout)]]', 'c': '[[100000100000/200001400001, 200000/200001400001], [-100000/200001400001, 200001/200001400001], [0, 0], [0, 1]]', 'd': '[[200000000000/200001400001], [200001000000/200001400001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', '12', 'IN'], ['Sb0', 'IN', 'OUT'], ['L0', 'IN', '12'], ['Sa1', '12', 'IN'], ['Sb1', '0', '12']]}
has to be unconnected
has to be unconnected
['VIN - C - Sb - L - VOUT', 'VIN - Sa - VOUT', 'VIN - C - Sb - L - VOUT', 'VIN - C - GND', 'VIN - Sa - L - Sb - GND', 'VIN - C - GND', 'VOUT - Sa - C - GND', 'VOUT - Sa - C - GND', 'VOUT - L - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'IN']), ('C1', ['0', 'IN']), ('L0', ['N-L0-Sb0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-L0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-37117 violations

['VIN - C - Sb - L - VOUT', 'VIN - Sa - VOUT', 'VIN - C - Sb - L - VOUT', 'VIN - C - GND', 'VIN - Sa - L - Sb - GND', 'VIN - C - GND', 'VOUT - Sa - C - GND', 'VOUT - Sa - C - GND', 'VOUT - L - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'IN']), ('C1', ['0', 'IN']), ('L0', ['N-L0-Sb0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-L0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - C - Sb - L - VOUT', 'VIN - Sa - VOUT', 'VIN - C - Sb - L - VOUT', 'VIN - C - GND', 'VIN - Sa - L - Sb - GND', 'VIN - C - GND', 'VOUT - Sa - C - GND', 'VOUT - Sa - C - GND', 'VOUT - L - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'IN']), ('C1', ['0', 'IN']), ('L0', ['N-L0-Sb0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-L0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - C - Sb - L - VOUT', 'VIN - Sa - VOUT', 'VIN - C - Sb - L - VOUT', 'VIN - C - GND', 'VIN - Sa - L - Sb - GND', 'VIN - C - GND', 'VOUT - Sa - C - GND', 'VOUT - Sa - C - GND', 'VOUT - L - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'IN']), ('C1', ['0', 'IN']), ('L0', ['N-L0-Sb0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-L0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - C - Sb - L - VOUT', 'VIN - Sa - VOUT', 'VIN - C - Sb - L - VOUT', 'VIN - C - GND', 'VIN - Sa - L - Sb - GND', 'VIN - C - GND', 'VOUT - Sa - C - GND', 'VOUT - Sa - C - GND', 'VOUT - L - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'IN']), ('C1', ['0', 'IN']), ('L0', ['N-L0-Sb0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-L0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
has to be unconnected
has to be unconnected
has to be unconnected
has to be unconnected
['VIN - C - L - VOUT', 'VIN - Sa - L - VOUT', 'VIN - C - L - VOUT', 'VIN - C - Sb - GND', 'VIN - Sa - Sb - GND', 'VIN - C - Sb - GND', 'VOUT - L - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-C1-L0-Sa0-Sb0']), ('C1', ['IN', 'N-C0-C1-L0-Sa0-Sb0']), ('L0', ['N-C0-C1-L0-Sa0-Sb0', 'OUT']), ('Sa0', ['IN', 'N-C0-C1-L0-Sa0-Sb0']), ('Sb0', ['0', 'N-C0-C1-L0-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-37117 violations

['VIN - C - L - VOUT', 'VIN - Sa - L - VOUT', 'VIN - C - L - VOUT', 'VIN - C - Sb - GND', 'VIN - Sa - Sb - GND', 'VIN - C - Sb - GND', 'VOUT - L - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-C1-L0-Sa0-Sb0']), ('C1', ['IN', 'N-C0-C1-L0-Sa0-Sb0']), ('L0', ['N-C0-C1-L0-Sa0-Sb0', 'OUT']), ('Sa0', ['IN', 'N-C0-C1-L0-Sa0-Sb0']), ('Sb0', ['0', 'N-C0-C1-L0-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - C - L - VOUT', 'VIN - Sa - L - VOUT', 'VIN - C - L - VOUT', 'VIN - C - Sb - GND', 'VIN - Sa - Sb - GND', 'VIN - C - Sb - GND', 'VOUT - L - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-C1-L0-Sa0-Sb0']), ('C1', ['IN', 'N-C0-C1-L0-Sa0-Sb0']), ('L0', ['N-C0-C1-L0-Sa0-Sb0', 'OUT']), ('Sa0', ['IN', 'N-C0-C1-L0-Sa0-Sb0']), ('Sb0', ['0', 'N-C0-C1-L0-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - C - L - VOUT', 'VIN - Sa - L - VOUT', 'VIN - C - L - VOUT', 'VIN - C - Sb - GND', 'VIN - Sa - Sb - GND', 'VIN - C - Sb - GND', 'VOUT - L - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-C1-L0-Sa0-Sb0']), ('C1', ['IN', 'N-C0-C1-L0-Sa0-Sb0']), ('L0', ['N-C0-C1-L0-Sa0-Sb0', 'OUT']), ('Sa0', ['IN', 'N-C0-C1-L0-Sa0-Sb0']), ('Sb0', ['0', 'N-C0-C1-L0-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - C - L - VOUT', 'VIN - Sa - L - VOUT', 'VIN - C - L - VOUT', 'VIN - C - Sb - GND', 'VIN - Sa - Sb - GND', 'VIN - C - Sb - GND', 'VOUT - L - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-C1-L0-Sa0-Sb0']), ('C1', ['IN', 'N-C0-C1-L0-Sa0-Sb0']), ('L0', ['N-C0-C1-L0-Sa0-Sb0', 'OUT']), ('Sa0', ['IN', 'N-C0-C1-L0-Sa0-Sb0']), ('Sb0', ['0', 'N-C0-C1-L0-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sa - Sb - Sb - VOUT', 'VIN - L - Sb - VOUT', 'VIN - Sa - Sb - L - GND', 'VIN - L - L - GND', 'VOUT - Sb - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-L1-Sb0-Sb1']), ('L1', ['IN', 'N-L0-L1-Sb0-Sb1']), ('Sa0', ['IN', 'N-Sa0-Sb1']), ('Sb0', ['N-L0-L1-Sb0-Sb1', 'OUT']), ('Sb1', ['N-L0-L1-Sb0-Sb1', 'N-Sa0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001/9091100, -9091/909110, -9091/909110], [-9091/909110, -1000011/100002100, -1000011/100002100], [90910/(90911*Cout), 1000011/(1000021*Cout), -1000521/(50001050*Cout)]]', 'b': '[[9091/909110], [-1/10000210], [10/(1000021*Cout)]]', 'c': '[[90910/90911, 1000011/1000021, 1000011/1000021], [90909/90911, 1000001/1000021, 1000001/1000021], [-9091/90911, 1/1000021, 1/1000021], [0, 0, 0], [0, 0, 1]]', 'd': '[[10/1000021], [20/1000021], [1000020/1000021], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001100001/200001100, -1000010000/2000011, -100001/20000110], [-1000010000/2000011, -1000011000/2000011, -1000011/200001100], [1000010/(2000011*Cout), 1000011/(2000011*Cout), -2000511/(100000550*Cout)]]', 'b': '[[100001/20000110], [-10000/2000011], [10/(2000011*Cout)]]', 'c': '[[100001000000/2000011, 100001100000/2000011, 1000011/2000011], [900000/2000011, 1100000/2000011, 11/2000011], [-100001/2000011, 100000/2000011, 1/2000011], [0, 0, 0], [0, 0, 1]]', 'd': '[[1000000/2000011], [2000000/2000011], [2000010/2000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '5', '12', '0'], 'net_list': [['Sa0', 'IN', '5'], ['Sb0', '5', '12'], ['L0', 'IN', '12'], ['Sb1', 'OUT', '12'], ['L1', '0', '12']]}
['VIN - Sa - Sb - Sb - VOUT', 'VIN - L - Sb - VOUT', 'VIN - Sa - Sb - L - GND', 'VIN - L - L - GND', 'VOUT - Sb - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-L1-Sb0-Sb1']), ('L1', ['IN', 'N-L0-L1-Sb0-Sb1']), ('Sa0', ['IN', 'N-Sa0-Sb1']), ('Sb0', ['N-L0-L1-Sb0-Sb1', 'OUT']), ('Sb1', ['N-L0-L1-Sb0-Sb1', 'N-Sa0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001/9091100, -9091/909110, -9091/909110], [-9091/909110, -1000011/100002100, -1000011/100002100], [90910/(90911*Cout), 1000011/(1000021*Cout), -1000521/(50001050*Cout)]]', 'b': '[[9091/909110], [-1/10000210], [10/(1000021*Cout)]]', 'c': '[[90910/90911, 1000011/1000021, 1000011/1000021], [90909/90911, 1000001/1000021, 1000001/1000021], [-9091/90911, 1/1000021, 1/1000021], [0, 0, 0], [0, 0, 1]]', 'd': '[[10/1000021], [20/1000021], [1000020/1000021], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001100001/200001100, -1000010000/2000011, -100001/20000110], [-1000010000/2000011, -1000011000/2000011, -1000011/200001100], [1000010/(2000011*Cout), 1000011/(2000011*Cout), -2000511/(100000550*Cout)]]', 'b': '[[100001/20000110], [-10000/2000011], [10/(2000011*Cout)]]', 'c': '[[100001000000/2000011, 100001100000/2000011, 1000011/2000011], [900000/2000011, 1100000/2000011, 11/2000011], [-100001/2000011, 100000/2000011, 1/2000011], [0, 0, 0], [0, 0, 1]]', 'd': '[[1000000/2000011], [2000000/2000011], [2000010/2000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '5', '12', '0'], 'net_list': [['Sa0', 'IN', '5'], ['Sb0', '5', '12'], ['L0', 'IN', '12'], ['Sb1', 'OUT', '12'], ['L1', '0', '12']]}
['VIN - Sa - Sb - Sb - VOUT', 'VIN - L - Sb - VOUT', 'VIN - Sa - Sb - L - GND', 'VIN - L - L - GND', 'VOUT - Sb - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-L1-Sb0-Sb1']), ('L1', ['IN', 'N-L0-L1-Sb0-Sb1']), ('Sa0', ['IN', 'N-Sa0-Sb1']), ('Sb0', ['N-L0-L1-Sb0-Sb1', 'OUT']), ('Sb1', ['N-L0-L1-Sb0-Sb1', 'N-Sa0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001/9091100, -9091/909110, -9091/909110], [-9091/909110, -1000011/100002100, -1000011/100002100], [90910/(90911*Cout), 1000011/(1000021*Cout), -1000521/(50001050*Cout)]]', 'b': '[[9091/909110], [-1/10000210], [10/(1000021*Cout)]]', 'c': '[[90910/90911, 1000011/1000021, 1000011/1000021], [90909/90911, 1000001/1000021, 1000001/1000021], [-9091/90911, 1/1000021, 1/1000021], [0, 0, 0], [0, 0, 1]]', 'd': '[[10/1000021], [20/1000021], [1000020/1000021], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001100001/200001100, -1000010000/2000011, -100001/20000110], [-1000010000/2000011, -1000011000/2000011, -1000011/200001100], [1000010/(2000011*Cout), 1000011/(2000011*Cout), -2000511/(100000550*Cout)]]', 'b': '[[100001/20000110], [-10000/2000011], [10/(2000011*Cout)]]', 'c': '[[100001000000/2000011, 100001100000/2000011, 1000011/2000011], [900000/2000011, 1100000/2000011, 11/2000011], [-100001/2000011, 100000/2000011, 1/2000011], [0, 0, 0], [0, 0, 1]]', 'd': '[[1000000/2000011], [2000000/2000011], [2000010/2000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '5', '12', '0'], 'net_list': [['Sa0', 'IN', '5'], ['Sb0', '5', '12'], ['L0', 'IN', '12'], ['Sb1', 'OUT', '12'], ['L1', '0', '12']]}
['VIN - Sa - Sb - Sb - VOUT', 'VIN - L - Sb - VOUT', 'VIN - Sa - Sb - L - GND', 'VIN - L - L - GND', 'VOUT - Sb - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-L1-Sb0-Sb1']), ('L1', ['IN', 'N-L0-L1-Sb0-Sb1']), ('Sa0', ['IN', 'N-Sa0-Sb1']), ('Sb0', ['N-L0-L1-Sb0-Sb1', 'OUT']), ('Sb1', ['N-L0-L1-Sb0-Sb1', 'N-Sa0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001/9091100, -9091/909110, -9091/909110], [-9091/909110, -1000011/100002100, -1000011/100002100], [90910/(90911*Cout), 1000011/(1000021*Cout), -1000521/(50001050*Cout)]]', 'b': '[[9091/909110], [-1/10000210], [10/(1000021*Cout)]]', 'c': '[[90910/90911, 1000011/1000021, 1000011/1000021], [90909/90911, 1000001/1000021, 1000001/1000021], [-9091/90911, 1/1000021, 1/1000021], [0, 0, 0], [0, 0, 1]]', 'd': '[[10/1000021], [20/1000021], [1000020/1000021], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001100001/200001100, -1000010000/2000011, -100001/20000110], [-1000010000/2000011, -1000011000/2000011, -1000011/200001100], [1000010/(2000011*Cout), 1000011/(2000011*Cout), -2000511/(100000550*Cout)]]', 'b': '[[100001/20000110], [-10000/2000011], [10/(2000011*Cout)]]', 'c': '[[100001000000/2000011, 100001100000/2000011, 1000011/2000011], [900000/2000011, 1100000/2000011, 11/2000011], [-100001/2000011, 100000/2000011, 1/2000011], [0, 0, 0], [0, 0, 1]]', 'd': '[[1000000/2000011], [2000000/2000011], [2000010/2000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '5', '12', '0'], 'net_list': [['Sa0', 'IN', '5'], ['Sb0', '5', '12'], ['L0', 'IN', '12'], ['Sb1', 'OUT', '12'], ['L1', '0', '12']]}
['VIN - Sa - Sb - Sb - VOUT', 'VIN - L - Sb - VOUT', 'VIN - Sa - Sb - L - GND', 'VIN - L - L - GND', 'VOUT - Sb - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-L1-Sb0-Sb1']), ('L1', ['IN', 'N-L0-L1-Sb0-Sb1']), ('Sa0', ['IN', 'N-Sa0-Sb1']), ('Sb0', ['N-L0-L1-Sb0-Sb1', 'OUT']), ('Sb1', ['N-L0-L1-Sb0-Sb1', 'N-Sa0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001/9091100, -9091/909110, -9091/909110], [-9091/909110, -1000011/100002100, -1000011/100002100], [90910/(90911*Cout), 1000011/(1000021*Cout), -1000521/(50001050*Cout)]]', 'b': '[[9091/909110], [-1/10000210], [10/(1000021*Cout)]]', 'c': '[[90910/90911, 1000011/1000021, 1000011/1000021], [90909/90911, 1000001/1000021, 1000001/1000021], [-9091/90911, 1/1000021, 1/1000021], [0, 0, 0], [0, 0, 1]]', 'd': '[[10/1000021], [20/1000021], [1000020/1000021], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001100001/200001100, -1000010000/2000011, -100001/20000110], [-1000010000/2000011, -1000011000/2000011, -1000011/200001100], [1000010/(2000011*Cout), 1000011/(2000011*Cout), -2000511/(100000550*Cout)]]', 'b': '[[100001/20000110], [-10000/2000011], [10/(2000011*Cout)]]', 'c': '[[100001000000/2000011, 100001100000/2000011, 1000011/2000011], [900000/2000011, 1100000/2000011, 11/2000011], [-100001/2000011, 100000/2000011, 1/2000011], [0, 0, 0], [0, 0, 1]]', 'd': '[[1000000/2000011], [2000000/2000011], [2000010/2000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '5', '12', '0'], 'net_list': [['Sa0', 'IN', '5'], ['Sb0', '5', '12'], ['L0', 'IN', '12'], ['Sb1', 'OUT', '12'], ['L1', '0', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - C - Sb - GND', 'VIN - L - Sb - GND', 'VOUT - Sb - Sa - C - Sb - GND', 'VOUT - Sb - L - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-L0-Sb1', 'N-C0-Sa0']), ('L0', ['IN', 'N-C0-L0-Sb1']), ('Sa0', ['IN', 'N-C0-Sa0']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-C0-L0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-3000/275003, -250/275003, -3/27500300], [25000/(275003*Cout), -25550281/(27500300*Cout), 1/(1100012*Cout)], [3/2750030, 1/11000120, -11/11000120]]', 'b': '[[-2500/275003], [500005/(550006*Cout)], [1/1100012]]', 'c': '[[-275000/275003, 1/1100012, -11/1100012], [-275000/275003, 1/1100012, 1100001/1100012], [25000/275003, 100001/1100012, 1/1100012], [0, 0, 0], [0, 1, 0]]', 'd': '[[5/550006], [5/550006], [500005/550006], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000002000/100001200001, -1/10000120000100, -1000002000/100001200001], [1/(100001200001*Cout), -100051200551/(5000060000050*Cout), 1/(100001200001*Cout)], [10000020000/100001200001, 1/1000012000010, -1000001/1000012000010]]', 'b': '[[-10000/100001200001], [1000010/(100001200001*Cout)], [100000/100001200001]]', 'c': '[[-100000100000/100001200001, 100000/100001200001, -100000100000/100001200001], [-100000100000/100001200001, 100000/100001200001, 1100001/100001200001], [100000/100001200001, 100001/100001200001, 100000/100001200001], [0, 0, 0], [0, 1, 0]]', 'd': '[[100000000000/100001200001], [100000000000/100001200001], [100001000000/100001200001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Rb1', 'Ra1'], 'node_list': ['IN', 'OUT', 'IN_exact', '9', '0', '10'], 'net_list': [['Sa0', '9', 'IN'], ['Sb0', '0', '10'], ['L0', '10', 'IN'], ['C0', '9', '10'], ['Sb1', 'IN', 'OUT']]}
['VIN - Sb - VOUT', 'VIN - Sa - C - Sb - GND', 'VIN - L - Sb - GND', 'VOUT - Sb - Sa - C - Sb - GND', 'VOUT - Sb - L - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-L0-Sb1', 'N-C0-Sa0']), ('L0', ['IN', 'N-C0-L0-Sb1']), ('Sa0', ['IN', 'N-C0-Sa0']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-C0-L0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-3000/275003, -250/275003, -3/27500300], [25000/(275003*Cout), -25550281/(27500300*Cout), 1/(1100012*Cout)], [3/2750030, 1/11000120, -11/11000120]]', 'b': '[[-2500/275003], [500005/(550006*Cout)], [1/1100012]]', 'c': '[[-275000/275003, 1/1100012, -11/1100012], [-275000/275003, 1/1100012, 1100001/1100012], [25000/275003, 100001/1100012, 1/1100012], [0, 0, 0], [0, 1, 0]]', 'd': '[[5/550006], [5/550006], [500005/550006], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000002000/100001200001, -1/10000120000100, -1000002000/100001200001], [1/(100001200001*Cout), -100051200551/(5000060000050*Cout), 1/(100001200001*Cout)], [10000020000/100001200001, 1/1000012000010, -1000001/1000012000010]]', 'b': '[[-10000/100001200001], [1000010/(100001200001*Cout)], [100000/100001200001]]', 'c': '[[-100000100000/100001200001, 100000/100001200001, -100000100000/100001200001], [-100000100000/100001200001, 100000/100001200001, 1100001/100001200001], [100000/100001200001, 100001/100001200001, 100000/100001200001], [0, 0, 0], [0, 1, 0]]', 'd': '[[100000000000/100001200001], [100000000000/100001200001], [100001000000/100001200001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Rb1', 'Ra1'], 'node_list': ['IN', 'OUT', 'IN_exact', '9', '0', '10'], 'net_list': [['Sa0', '9', 'IN'], ['Sb0', '0', '10'], ['L0', '10', 'IN'], ['C0', '9', '10'], ['Sb1', 'IN', 'OUT']]}
['VIN - Sb - VOUT', 'VIN - Sa - C - Sb - GND', 'VIN - L - Sb - GND', 'VOUT - Sb - Sa - C - Sb - GND', 'VOUT - Sb - L - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-L0-Sb1', 'N-C0-Sa0']), ('L0', ['IN', 'N-C0-L0-Sb1']), ('Sa0', ['IN', 'N-C0-Sa0']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-C0-L0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-3000/275003, -250/275003, -3/27500300], [25000/(275003*Cout), -25550281/(27500300*Cout), 1/(1100012*Cout)], [3/2750030, 1/11000120, -11/11000120]]', 'b': '[[-2500/275003], [500005/(550006*Cout)], [1/1100012]]', 'c': '[[-275000/275003, 1/1100012, -11/1100012], [-275000/275003, 1/1100012, 1100001/1100012], [25000/275003, 100001/1100012, 1/1100012], [0, 0, 0], [0, 1, 0]]', 'd': '[[5/550006], [5/550006], [500005/550006], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000002000/100001200001, -1/10000120000100, -1000002000/100001200001], [1/(100001200001*Cout), -100051200551/(5000060000050*Cout), 1/(100001200001*Cout)], [10000020000/100001200001, 1/1000012000010, -1000001/1000012000010]]', 'b': '[[-10000/100001200001], [1000010/(100001200001*Cout)], [100000/100001200001]]', 'c': '[[-100000100000/100001200001, 100000/100001200001, -100000100000/100001200001], [-100000100000/100001200001, 100000/100001200001, 1100001/100001200001], [100000/100001200001, 100001/100001200001, 100000/100001200001], [0, 0, 0], [0, 1, 0]]', 'd': '[[100000000000/100001200001], [100000000000/100001200001], [100001000000/100001200001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Rb1', 'Ra1'], 'node_list': ['IN', 'OUT', 'IN_exact', '9', '0', '10'], 'net_list': [['Sa0', '9', 'IN'], ['Sb0', '0', '10'], ['L0', '10', 'IN'], ['C0', '9', '10'], ['Sb1', 'IN', 'OUT']]}
['VIN - Sb - VOUT', 'VIN - Sa - C - Sb - GND', 'VIN - L - Sb - GND', 'VOUT - Sb - Sa - C - Sb - GND', 'VOUT - Sb - L - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-L0-Sb1', 'N-C0-Sa0']), ('L0', ['IN', 'N-C0-L0-Sb1']), ('Sa0', ['IN', 'N-C0-Sa0']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-C0-L0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-3000/275003, -250/275003, -3/27500300], [25000/(275003*Cout), -25550281/(27500300*Cout), 1/(1100012*Cout)], [3/2750030, 1/11000120, -11/11000120]]', 'b': '[[-2500/275003], [500005/(550006*Cout)], [1/1100012]]', 'c': '[[-275000/275003, 1/1100012, -11/1100012], [-275000/275003, 1/1100012, 1100001/1100012], [25000/275003, 100001/1100012, 1/1100012], [0, 0, 0], [0, 1, 0]]', 'd': '[[5/550006], [5/550006], [500005/550006], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000002000/100001200001, -1/10000120000100, -1000002000/100001200001], [1/(100001200001*Cout), -100051200551/(5000060000050*Cout), 1/(100001200001*Cout)], [10000020000/100001200001, 1/1000012000010, -1000001/1000012000010]]', 'b': '[[-10000/100001200001], [1000010/(100001200001*Cout)], [100000/100001200001]]', 'c': '[[-100000100000/100001200001, 100000/100001200001, -100000100000/100001200001], [-100000100000/100001200001, 100000/100001200001, 1100001/100001200001], [100000/100001200001, 100001/100001200001, 100000/100001200001], [0, 0, 0], [0, 1, 0]]', 'd': '[[100000000000/100001200001], [100000000000/100001200001], [100001000000/100001200001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Rb1', 'Ra1'], 'node_list': ['IN', 'OUT', 'IN_exact', '9', '0', '10'], 'net_list': [['Sa0', '9', 'IN'], ['Sb0', '0', '10'], ['L0', '10', 'IN'], ['C0', '9', '10'], ['Sb1', 'IN', 'OUT']]}
['VIN - Sb - VOUT', 'VIN - Sa - C - Sb - GND', 'VIN - L - Sb - GND', 'VOUT - Sb - Sa - C - Sb - GND', 'VOUT - Sb - L - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-L0-Sb1', 'N-C0-Sa0']), ('L0', ['IN', 'N-C0-L0-Sb1']), ('Sa0', ['IN', 'N-C0-Sa0']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['0', 'N-C0-L0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-3000/275003, -250/275003, -3/27500300], [25000/(275003*Cout), -25550281/(27500300*Cout), 1/(1100012*Cout)], [3/2750030, 1/11000120, -11/11000120]]', 'b': '[[-2500/275003], [500005/(550006*Cout)], [1/1100012]]', 'c': '[[-275000/275003, 1/1100012, -11/1100012], [-275000/275003, 1/1100012, 1100001/1100012], [25000/275003, 100001/1100012, 1/1100012], [0, 0, 0], [0, 1, 0]]', 'd': '[[5/550006], [5/550006], [500005/550006], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000002000/100001200001, -1/10000120000100, -1000002000/100001200001], [1/(100001200001*Cout), -100051200551/(5000060000050*Cout), 1/(100001200001*Cout)], [10000020000/100001200001, 1/1000012000010, -1000001/1000012000010]]', 'b': '[[-10000/100001200001], [1000010/(100001200001*Cout)], [100000/100001200001]]', 'c': '[[-100000100000/100001200001, 100000/100001200001, -100000100000/100001200001], [-100000100000/100001200001, 100000/100001200001, 1100001/100001200001], [100000/100001200001, 100001/100001200001, 100000/100001200001], [0, 0, 0], [0, 1, 0]]', 'd': '[[100000000000/100001200001], [100000000000/100001200001], [100001000000/100001200001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Rb1', 'Ra1'], 'node_list': ['IN', 'OUT', 'IN_exact', '9', '0', '10'], 'net_list': [['Sa0', '9', 'IN'], ['Sb0', '0', '10'], ['L0', '10', 'IN'], ['C0', '9', '10'], ['Sb1', 'IN', 'OUT']]}
has to be unconnected
['VIN - C - Sb - VOUT', 'VIN - C - Sa - VOUT', 'VIN - Sa - VOUT', 'VIN - C - L - GND', 'VIN - Sa - Sb - L - GND', 'VIN - Sa - Sa - L - GND', 'VOUT - Sb - L - GND', 'VOUT - Sa - C - L - GND', 'VOUT - Sa - L - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-L0-Sa0-Sb0']), ('L0', ['0', 'N-C0-L0-Sa0-Sb0']), ('Sa0', ['N-C0-L0-Sa0-Sb0', 'OUT']), ('Sa1', ['IN', 'OUT']), ('Sb0', ['N-C0-L0-Sa0-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-500/550001, -50001/55000100, 1000001/110000200], [50001/(550001*Cout), -25550501/(27500050*Cout), -500005/(550001*Cout)], [-1000001/11000020, -100001/1100002, -100001100001/1100002000000]]', 'b': '[[-5000/550001], [500010/(550001*Cout)], [100001/1100002]]', 'c': '[[50000/550001, 50001/550001, -1000001/1100002], [50000/550001, 50001/550001, 100001/1100002], [0, 0, 0], [0, 1, 0]]', 'd': '[[500000/550001], [500000/550001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1200001, -200001/120000100, 1000/109091], [200001/(1200001*Cout), -101200501/(60000050*Cout), -90910/(109091*Cout)], [-10000/109091, -9091/109091, -100001/1090910]]', 'b': '[[-10000/1200001], [2000010/(1200001*Cout)], [9091/109091]]', 'c': '[[100000/1200001, 200001/1200001, -100000/109091], [100000/1200001, 200001/1200001, 9091/109091], [0, 0, 0], [0, 1, 0]]', 'd': '[[1000000/1200001], [1000000/1200001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', '12'], ['L0', '0', '12'], ['C0', 'IN', '12'], ['Sa1', 'OUT', '12']]}
['VIN - C - Sb - VOUT', 'VIN - C - Sa - VOUT', 'VIN - Sa - VOUT', 'VIN - C - L - GND', 'VIN - Sa - Sb - L - GND', 'VIN - Sa - Sa - L - GND', 'VOUT - Sb - L - GND', 'VOUT - Sa - C - L - GND', 'VOUT - Sa - L - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-L0-Sa0-Sb0']), ('L0', ['0', 'N-C0-L0-Sa0-Sb0']), ('Sa0', ['N-C0-L0-Sa0-Sb0', 'OUT']), ('Sa1', ['IN', 'OUT']), ('Sb0', ['N-C0-L0-Sa0-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-500/550001, -50001/55000100, 1000001/110000200], [50001/(550001*Cout), -25550501/(27500050*Cout), -500005/(550001*Cout)], [-1000001/11000020, -100001/1100002, -100001100001/1100002000000]]', 'b': '[[-5000/550001], [500010/(550001*Cout)], [100001/1100002]]', 'c': '[[50000/550001, 50001/550001, -1000001/1100002], [50000/550001, 50001/550001, 100001/1100002], [0, 0, 0], [0, 1, 0]]', 'd': '[[500000/550001], [500000/550001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1200001, -200001/120000100, 1000/109091], [200001/(1200001*Cout), -101200501/(60000050*Cout), -90910/(109091*Cout)], [-10000/109091, -9091/109091, -100001/1090910]]', 'b': '[[-10000/1200001], [2000010/(1200001*Cout)], [9091/109091]]', 'c': '[[100000/1200001, 200001/1200001, -100000/109091], [100000/1200001, 200001/1200001, 9091/109091], [0, 0, 0], [0, 1, 0]]', 'd': '[[1000000/1200001], [1000000/1200001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', '12'], ['L0', '0', '12'], ['C0', 'IN', '12'], ['Sa1', 'OUT', '12']]}
['VIN - C - Sb - VOUT', 'VIN - C - Sa - VOUT', 'VIN - Sa - VOUT', 'VIN - C - L - GND', 'VIN - Sa - Sb - L - GND', 'VIN - Sa - Sa - L - GND', 'VOUT - Sb - L - GND', 'VOUT - Sa - C - L - GND', 'VOUT - Sa - L - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-L0-Sa0-Sb0']), ('L0', ['0', 'N-C0-L0-Sa0-Sb0']), ('Sa0', ['N-C0-L0-Sa0-Sb0', 'OUT']), ('Sa1', ['IN', 'OUT']), ('Sb0', ['N-C0-L0-Sa0-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-500/550001, -50001/55000100, 1000001/110000200], [50001/(550001*Cout), -25550501/(27500050*Cout), -500005/(550001*Cout)], [-1000001/11000020, -100001/1100002, -100001100001/1100002000000]]', 'b': '[[-5000/550001], [500010/(550001*Cout)], [100001/1100002]]', 'c': '[[50000/550001, 50001/550001, -1000001/1100002], [50000/550001, 50001/550001, 100001/1100002], [0, 0, 0], [0, 1, 0]]', 'd': '[[500000/550001], [500000/550001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1200001, -200001/120000100, 1000/109091], [200001/(1200001*Cout), -101200501/(60000050*Cout), -90910/(109091*Cout)], [-10000/109091, -9091/109091, -100001/1090910]]', 'b': '[[-10000/1200001], [2000010/(1200001*Cout)], [9091/109091]]', 'c': '[[100000/1200001, 200001/1200001, -100000/109091], [100000/1200001, 200001/1200001, 9091/109091], [0, 0, 0], [0, 1, 0]]', 'd': '[[1000000/1200001], [1000000/1200001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', '12'], ['L0', '0', '12'], ['C0', 'IN', '12'], ['Sa1', 'OUT', '12']]}
['VIN - C - Sb - VOUT', 'VIN - C - Sa - VOUT', 'VIN - Sa - VOUT', 'VIN - C - L - GND', 'VIN - Sa - Sb - L - GND', 'VIN - Sa - Sa - L - GND', 'VOUT - Sb - L - GND', 'VOUT - Sa - C - L - GND', 'VOUT - Sa - L - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-L0-Sa0-Sb0']), ('L0', ['0', 'N-C0-L0-Sa0-Sb0']), ('Sa0', ['N-C0-L0-Sa0-Sb0', 'OUT']), ('Sa1', ['IN', 'OUT']), ('Sb0', ['N-C0-L0-Sa0-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-500/550001, -50001/55000100, 1000001/110000200], [50001/(550001*Cout), -25550501/(27500050*Cout), -500005/(550001*Cout)], [-1000001/11000020, -100001/1100002, -100001100001/1100002000000]]', 'b': '[[-5000/550001], [500010/(550001*Cout)], [100001/1100002]]', 'c': '[[50000/550001, 50001/550001, -1000001/1100002], [50000/550001, 50001/550001, 100001/1100002], [0, 0, 0], [0, 1, 0]]', 'd': '[[500000/550001], [500000/550001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1200001, -200001/120000100, 1000/109091], [200001/(1200001*Cout), -101200501/(60000050*Cout), -90910/(109091*Cout)], [-10000/109091, -9091/109091, -100001/1090910]]', 'b': '[[-10000/1200001], [2000010/(1200001*Cout)], [9091/109091]]', 'c': '[[100000/1200001, 200001/1200001, -100000/109091], [100000/1200001, 200001/1200001, 9091/109091], [0, 0, 0], [0, 1, 0]]', 'd': '[[1000000/1200001], [1000000/1200001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', '12'], ['L0', '0', '12'], ['C0', 'IN', '12'], ['Sa1', 'OUT', '12']]}
['VIN - C - Sb - VOUT', 'VIN - C - Sa - VOUT', 'VIN - Sa - VOUT', 'VIN - C - L - GND', 'VIN - Sa - Sb - L - GND', 'VIN - Sa - Sa - L - GND', 'VOUT - Sb - L - GND', 'VOUT - Sa - C - L - GND', 'VOUT - Sa - L - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-L0-Sa0-Sb0']), ('L0', ['0', 'N-C0-L0-Sa0-Sb0']), ('Sa0', ['N-C0-L0-Sa0-Sb0', 'OUT']), ('Sa1', ['IN', 'OUT']), ('Sb0', ['N-C0-L0-Sa0-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-500/550001, -50001/55000100, 1000001/110000200], [50001/(550001*Cout), -25550501/(27500050*Cout), -500005/(550001*Cout)], [-1000001/11000020, -100001/1100002, -100001100001/1100002000000]]', 'b': '[[-5000/550001], [500010/(550001*Cout)], [100001/1100002]]', 'c': '[[50000/550001, 50001/550001, -1000001/1100002], [50000/550001, 50001/550001, 100001/1100002], [0, 0, 0], [0, 1, 0]]', 'd': '[[500000/550001], [500000/550001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1200001, -200001/120000100, 1000/109091], [200001/(1200001*Cout), -101200501/(60000050*Cout), -90910/(109091*Cout)], [-10000/109091, -9091/109091, -100001/1090910]]', 'b': '[[-10000/1200001], [2000010/(1200001*Cout)], [9091/109091]]', 'c': '[[100000/1200001, 200001/1200001, -100000/109091], [100000/1200001, 200001/1200001, 9091/109091], [0, 0, 0], [0, 1, 0]]', 'd': '[[1000000/1200001], [1000000/1200001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', '12'], ['L0', '0', '12'], ['C0', 'IN', '12'], ['Sa1', 'OUT', '12']]}
has to be unconnected
has to be unconnected
has to be unconnected
['VIN - Sb - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VIN - Sb - Sa - Sa - Sb - GND', 'VOUT - C - GND', 'VOUT - Sa - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'OUT']), ('Sa0', ['N-Sa0-Sb0', 'OUT']), ('Sa1', ['N-Sa1-Sb1', 'OUT']), ('Sb0', ['0', 'N-Sa0-Sb0']), ('Sb1', ['IN', 'N-Sa1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-37117 violations

['VIN - Sb - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VIN - Sb - Sa - Sa - Sb - GND', 'VOUT - C - GND', 'VOUT - Sa - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'OUT']), ('Sa0', ['N-Sa0-Sb0', 'OUT']), ('Sa1', ['N-Sa1-Sb1', 'OUT']), ('Sb0', ['0', 'N-Sa0-Sb0']), ('Sb1', ['IN', 'N-Sa1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VIN - Sb - Sa - Sa - Sb - GND', 'VOUT - C - GND', 'VOUT - Sa - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'OUT']), ('Sa0', ['N-Sa0-Sb0', 'OUT']), ('Sa1', ['N-Sa1-Sb1', 'OUT']), ('Sb0', ['0', 'N-Sa0-Sb0']), ('Sb1', ['IN', 'N-Sa1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VIN - Sb - Sa - Sa - Sb - GND', 'VOUT - C - GND', 'VOUT - Sa - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'OUT']), ('Sa0', ['N-Sa0-Sb0', 'OUT']), ('Sa1', ['N-Sa1-Sb1', 'OUT']), ('Sb0', ['0', 'N-Sa0-Sb0']), ('Sb1', ['IN', 'N-Sa1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VIN - Sb - Sa - Sa - Sb - GND', 'VOUT - C - GND', 'VOUT - Sa - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'OUT']), ('Sa0', ['N-Sa0-Sb0', 'OUT']), ('Sa1', ['N-Sa1-Sb1', 'OUT']), ('Sb0', ['0', 'N-Sa0-Sb0']), ('Sb1', ['IN', 'N-Sa1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - L - C - VOUT', 'VIN - L - C - VOUT', 'VIN - L - Sb - GND', 'VIN - L - Sa - GND', 'VOUT - C - Sb - GND', 'VOUT - C - Sa - GND', 'VOUT - C - Sb - GND', 'VOUT - C - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-C1-L0-Sa0-Sb0', 'OUT']), ('C1', ['N-C0-C1-L0-Sa0-Sb0', 'OUT']), ('L0', ['IN', 'N-C0-C1-L0-Sa0-Sb0']), ('Sa0', ['0', 'N-C0-C1-L0-Sa0-Sb0']), ('Sb0', ['0', 'N-C0-C1-L0-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-37117 violations

['VIN - L - C - VOUT', 'VIN - L - C - VOUT', 'VIN - L - Sb - GND', 'VIN - L - Sa - GND', 'VOUT - C - Sb - GND', 'VOUT - C - Sa - GND', 'VOUT - C - Sb - GND', 'VOUT - C - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-C1-L0-Sa0-Sb0', 'OUT']), ('C1', ['N-C0-C1-L0-Sa0-Sb0', 'OUT']), ('L0', ['IN', 'N-C0-C1-L0-Sa0-Sb0']), ('Sa0', ['0', 'N-C0-C1-L0-Sa0-Sb0']), ('Sb0', ['0', 'N-C0-C1-L0-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - L - C - VOUT', 'VIN - L - C - VOUT', 'VIN - L - Sb - GND', 'VIN - L - Sa - GND', 'VOUT - C - Sb - GND', 'VOUT - C - Sa - GND', 'VOUT - C - Sb - GND', 'VOUT - C - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-C1-L0-Sa0-Sb0', 'OUT']), ('C1', ['N-C0-C1-L0-Sa0-Sb0', 'OUT']), ('L0', ['IN', 'N-C0-C1-L0-Sa0-Sb0']), ('Sa0', ['0', 'N-C0-C1-L0-Sa0-Sb0']), ('Sb0', ['0', 'N-C0-C1-L0-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - L - C - VOUT', 'VIN - L - C - VOUT', 'VIN - L - Sb - GND', 'VIN - L - Sa - GND', 'VOUT - C - Sb - GND', 'VOUT - C - Sa - GND', 'VOUT - C - Sb - GND', 'VOUT - C - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-C1-L0-Sa0-Sb0', 'OUT']), ('C1', ['N-C0-C1-L0-Sa0-Sb0', 'OUT']), ('L0', ['IN', 'N-C0-C1-L0-Sa0-Sb0']), ('Sa0', ['0', 'N-C0-C1-L0-Sa0-Sb0']), ('Sb0', ['0', 'N-C0-C1-L0-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - L - C - VOUT', 'VIN - L - C - VOUT', 'VIN - L - Sb - GND', 'VIN - L - Sa - GND', 'VOUT - C - Sb - GND', 'VOUT - C - Sa - GND', 'VOUT - C - Sb - GND', 'VOUT - C - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-C1-L0-Sa0-Sb0', 'OUT']), ('C1', ['N-C0-C1-L0-Sa0-Sb0', 'OUT']), ('L0', ['IN', 'N-C0-C1-L0-Sa0-Sb0']), ('Sa0', ['0', 'N-C0-C1-L0-Sa0-Sb0']), ('Sb0', ['0', 'N-C0-C1-L0-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - L - L - GND', 'VIN - Sb - L - GND', 'VOUT - Sb - L - L - GND', 'VOUT - Sb - Sb - L - GND', 'VOUT - Sa - L - L - GND', 'VOUT - Sa - Sb - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-L1-Sb0']), ('L1', ['IN', 'N-L0-L1-Sb0']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['IN', 'N-L0-L1-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/100, -1/100, 0], [-1/100, -1200001/110000100, -100001/110000100], [0, 100001/(1100001*Cout), -51100501/(55000050*Cout)]]', 'b': '[[0], [-10000/1100001], [1000010/(1100001*Cout)]]', 'c': '[[1, 1200001/1100001, 100001/1100001], [0, 100000/1100001, 100001/1100001], [0, 0, 0], [0, 0, 1]]', 'd': '[[1000000/1100001], [1000000/1100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000, -1000, 0], [-1000, -1100002000/1100001, -100001/110000100], [0, 100001/(1100001*Cout), -51100501/(55000050*Cout)]]', 'b': '[[0], [-10000/1100001], [1000010/(1100001*Cout)]]', 'c': '[[100000, 110000200000/1100001, 100001/1100001], [0, 100000/1100001, 100001/1100001], [0, 0, 0], [0, 0, 1]]', 'd': '[[1000000/1100001], [1000000/1100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['L0', 'IN', '12'], ['Sb1', 'IN', '12'], ['L1', '0', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - L - L - GND', 'VIN - Sb - L - GND', 'VOUT - Sb - L - L - GND', 'VOUT - Sb - Sb - L - GND', 'VOUT - Sa - L - L - GND', 'VOUT - Sa - Sb - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-L1-Sb0']), ('L1', ['IN', 'N-L0-L1-Sb0']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['IN', 'N-L0-L1-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/100, -1/100, 0], [-1/100, -1200001/110000100, -100001/110000100], [0, 100001/(1100001*Cout), -51100501/(55000050*Cout)]]', 'b': '[[0], [-10000/1100001], [1000010/(1100001*Cout)]]', 'c': '[[1, 1200001/1100001, 100001/1100001], [0, 100000/1100001, 100001/1100001], [0, 0, 0], [0, 0, 1]]', 'd': '[[1000000/1100001], [1000000/1100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000, -1000, 0], [-1000, -1100002000/1100001, -100001/110000100], [0, 100001/(1100001*Cout), -51100501/(55000050*Cout)]]', 'b': '[[0], [-10000/1100001], [1000010/(1100001*Cout)]]', 'c': '[[100000, 110000200000/1100001, 100001/1100001], [0, 100000/1100001, 100001/1100001], [0, 0, 0], [0, 0, 1]]', 'd': '[[1000000/1100001], [1000000/1100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['L0', 'IN', '12'], ['Sb1', 'IN', '12'], ['L1', '0', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - L - L - GND', 'VIN - Sb - L - GND', 'VOUT - Sb - L - L - GND', 'VOUT - Sb - Sb - L - GND', 'VOUT - Sa - L - L - GND', 'VOUT - Sa - Sb - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-L1-Sb0']), ('L1', ['IN', 'N-L0-L1-Sb0']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['IN', 'N-L0-L1-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/100, -1/100, 0], [-1/100, -1200001/110000100, -100001/110000100], [0, 100001/(1100001*Cout), -51100501/(55000050*Cout)]]', 'b': '[[0], [-10000/1100001], [1000010/(1100001*Cout)]]', 'c': '[[1, 1200001/1100001, 100001/1100001], [0, 100000/1100001, 100001/1100001], [0, 0, 0], [0, 0, 1]]', 'd': '[[1000000/1100001], [1000000/1100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000, -1000, 0], [-1000, -1100002000/1100001, -100001/110000100], [0, 100001/(1100001*Cout), -51100501/(55000050*Cout)]]', 'b': '[[0], [-10000/1100001], [1000010/(1100001*Cout)]]', 'c': '[[100000, 110000200000/1100001, 100001/1100001], [0, 100000/1100001, 100001/1100001], [0, 0, 0], [0, 0, 1]]', 'd': '[[1000000/1100001], [1000000/1100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['L0', 'IN', '12'], ['Sb1', 'IN', '12'], ['L1', '0', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - L - L - GND', 'VIN - Sb - L - GND', 'VOUT - Sb - L - L - GND', 'VOUT - Sb - Sb - L - GND', 'VOUT - Sa - L - L - GND', 'VOUT - Sa - Sb - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-L1-Sb0']), ('L1', ['IN', 'N-L0-L1-Sb0']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['IN', 'N-L0-L1-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/100, -1/100, 0], [-1/100, -1200001/110000100, -100001/110000100], [0, 100001/(1100001*Cout), -51100501/(55000050*Cout)]]', 'b': '[[0], [-10000/1100001], [1000010/(1100001*Cout)]]', 'c': '[[1, 1200001/1100001, 100001/1100001], [0, 100000/1100001, 100001/1100001], [0, 0, 0], [0, 0, 1]]', 'd': '[[1000000/1100001], [1000000/1100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000, -1000, 0], [-1000, -1100002000/1100001, -100001/110000100], [0, 100001/(1100001*Cout), -51100501/(55000050*Cout)]]', 'b': '[[0], [-10000/1100001], [1000010/(1100001*Cout)]]', 'c': '[[100000, 110000200000/1100001, 100001/1100001], [0, 100000/1100001, 100001/1100001], [0, 0, 0], [0, 0, 1]]', 'd': '[[1000000/1100001], [1000000/1100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['L0', 'IN', '12'], ['Sb1', 'IN', '12'], ['L1', '0', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - L - L - GND', 'VIN - Sb - L - GND', 'VOUT - Sb - L - L - GND', 'VOUT - Sb - Sb - L - GND', 'VOUT - Sa - L - L - GND', 'VOUT - Sa - Sb - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-L1-Sb0']), ('L1', ['IN', 'N-L0-L1-Sb0']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['IN', 'N-L0-L1-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/100, -1/100, 0], [-1/100, -1200001/110000100, -100001/110000100], [0, 100001/(1100001*Cout), -51100501/(55000050*Cout)]]', 'b': '[[0], [-10000/1100001], [1000010/(1100001*Cout)]]', 'c': '[[1, 1200001/1100001, 100001/1100001], [0, 100000/1100001, 100001/1100001], [0, 0, 0], [0, 0, 1]]', 'd': '[[1000000/1100001], [1000000/1100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000, -1000, 0], [-1000, -1100002000/1100001, -100001/110000100], [0, 100001/(1100001*Cout), -51100501/(55000050*Cout)]]', 'b': '[[0], [-10000/1100001], [1000010/(1100001*Cout)]]', 'c': '[[100000, 110000200000/1100001, 100001/1100001], [0, 100000/1100001, 100001/1100001], [0, 0, 0], [0, 0, 1]]', 'd': '[[1000000/1100001], [1000000/1100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['L0', 'IN', '12'], ['Sb1', 'IN', '12'], ['L1', '0', '12']]}
has to be unconnected
has to be unconnected
has to be unconnected
['VIN - L - L - VOUT', 'VIN - L - L - VOUT', 'VIN - L - Sb - GND', 'VIN - L - Sa - GND', 'VOUT - L - Sb - GND', 'VOUT - L - Sa - GND', 'VOUT - L - Sb - GND', 'VOUT - L - Sa - GND']

 PCC-37117
1
OrderedDict([('L0', ['IN', 'N-L0-L1-L2-Sa0-Sb0']), ('L1', ['N-L0-L1-L2-Sa0-Sb0', 'OUT']), ('L2', ['N-L0-L1-L2-Sa0-Sb0', 'OUT']), ('Sa0', ['0', 'N-L0-L1-L2-Sa0-Sb0']), ('Sb0', ['0', 'N-L0-L1-L2-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, -1000/100001, -1000/100001, 1/100], [-1000/100001, -1100001/100001000, -1000/100001, 0], [-1000/100001, -1000/100001, -1000/100001, 1/100], [-1/Cout, 0, -1/Cout, -1/(50*Cout)]]', 'b': '[[0], [1/100], [0], [0]]', 'c': '[[100000/100001, 100000/100001, 100000/100001, 0], [0, -1/10, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1]]', 'd': '[[0], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, -1000/100001, -1000/100001, 1/100], [-1000/100001, -1100001/100001000, -1000/100001, 0], [-1000/100001, -1000/100001, -1000/100001, 1/100], [-1/Cout, 0, -1/Cout, -1/(50*Cout)]]', 'b': '[[0], [1/100], [0], [0]]', 'c': '[[100000/100001, 100000/100001, 100000/100001, 0], [0, -1/10, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1]]', 'd': '[[0], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1', 'L2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sa0', '0', '12'], ['Sb0', '0', '12'], ['L0', 'OUT', '12'], ['L1', 'IN', '12'], ['L2', 'OUT', '12']]}
['VIN - L - L - VOUT', 'VIN - L - L - VOUT', 'VIN - L - Sb - GND', 'VIN - L - Sa - GND', 'VOUT - L - Sb - GND', 'VOUT - L - Sa - GND', 'VOUT - L - Sb - GND', 'VOUT - L - Sa - GND']

 PCC-37117
1
OrderedDict([('L0', ['IN', 'N-L0-L1-L2-Sa0-Sb0']), ('L1', ['N-L0-L1-L2-Sa0-Sb0', 'OUT']), ('L2', ['N-L0-L1-L2-Sa0-Sb0', 'OUT']), ('Sa0', ['0', 'N-L0-L1-L2-Sa0-Sb0']), ('Sb0', ['0', 'N-L0-L1-L2-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, -1000/100001, -1000/100001, 1/100], [-1000/100001, -1100001/100001000, -1000/100001, 0], [-1000/100001, -1000/100001, -1000/100001, 1/100], [-1/Cout, 0, -1/Cout, -1/(50*Cout)]]', 'b': '[[0], [1/100], [0], [0]]', 'c': '[[100000/100001, 100000/100001, 100000/100001, 0], [0, -1/10, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1]]', 'd': '[[0], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, -1000/100001, -1000/100001, 1/100], [-1000/100001, -1100001/100001000, -1000/100001, 0], [-1000/100001, -1000/100001, -1000/100001, 1/100], [-1/Cout, 0, -1/Cout, -1/(50*Cout)]]', 'b': '[[0], [1/100], [0], [0]]', 'c': '[[100000/100001, 100000/100001, 100000/100001, 0], [0, -1/10, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1]]', 'd': '[[0], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1', 'L2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sa0', '0', '12'], ['Sb0', '0', '12'], ['L0', 'OUT', '12'], ['L1', 'IN', '12'], ['L2', 'OUT', '12']]}
['VIN - L - L - VOUT', 'VIN - L - L - VOUT', 'VIN - L - Sb - GND', 'VIN - L - Sa - GND', 'VOUT - L - Sb - GND', 'VOUT - L - Sa - GND', 'VOUT - L - Sb - GND', 'VOUT - L - Sa - GND']

 PCC-37117
1
OrderedDict([('L0', ['IN', 'N-L0-L1-L2-Sa0-Sb0']), ('L1', ['N-L0-L1-L2-Sa0-Sb0', 'OUT']), ('L2', ['N-L0-L1-L2-Sa0-Sb0', 'OUT']), ('Sa0', ['0', 'N-L0-L1-L2-Sa0-Sb0']), ('Sb0', ['0', 'N-L0-L1-L2-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, -1000/100001, -1000/100001, 1/100], [-1000/100001, -1100001/100001000, -1000/100001, 0], [-1000/100001, -1000/100001, -1000/100001, 1/100], [-1/Cout, 0, -1/Cout, -1/(50*Cout)]]', 'b': '[[0], [1/100], [0], [0]]', 'c': '[[100000/100001, 100000/100001, 100000/100001, 0], [0, -1/10, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1]]', 'd': '[[0], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, -1000/100001, -1000/100001, 1/100], [-1000/100001, -1100001/100001000, -1000/100001, 0], [-1000/100001, -1000/100001, -1000/100001, 1/100], [-1/Cout, 0, -1/Cout, -1/(50*Cout)]]', 'b': '[[0], [1/100], [0], [0]]', 'c': '[[100000/100001, 100000/100001, 100000/100001, 0], [0, -1/10, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1]]', 'd': '[[0], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1', 'L2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sa0', '0', '12'], ['Sb0', '0', '12'], ['L0', 'OUT', '12'], ['L1', 'IN', '12'], ['L2', 'OUT', '12']]}
['VIN - L - L - VOUT', 'VIN - L - L - VOUT', 'VIN - L - Sb - GND', 'VIN - L - Sa - GND', 'VOUT - L - Sb - GND', 'VOUT - L - Sa - GND', 'VOUT - L - Sb - GND', 'VOUT - L - Sa - GND']

 PCC-37117
1
OrderedDict([('L0', ['IN', 'N-L0-L1-L2-Sa0-Sb0']), ('L1', ['N-L0-L1-L2-Sa0-Sb0', 'OUT']), ('L2', ['N-L0-L1-L2-Sa0-Sb0', 'OUT']), ('Sa0', ['0', 'N-L0-L1-L2-Sa0-Sb0']), ('Sb0', ['0', 'N-L0-L1-L2-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, -1000/100001, -1000/100001, 1/100], [-1000/100001, -1100001/100001000, -1000/100001, 0], [-1000/100001, -1000/100001, -1000/100001, 1/100], [-1/Cout, 0, -1/Cout, -1/(50*Cout)]]', 'b': '[[0], [1/100], [0], [0]]', 'c': '[[100000/100001, 100000/100001, 100000/100001, 0], [0, -1/10, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1]]', 'd': '[[0], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, -1000/100001, -1000/100001, 1/100], [-1000/100001, -1100001/100001000, -1000/100001, 0], [-1000/100001, -1000/100001, -1000/100001, 1/100], [-1/Cout, 0, -1/Cout, -1/(50*Cout)]]', 'b': '[[0], [1/100], [0], [0]]', 'c': '[[100000/100001, 100000/100001, 100000/100001, 0], [0, -1/10, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1]]', 'd': '[[0], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1', 'L2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sa0', '0', '12'], ['Sb0', '0', '12'], ['L0', 'OUT', '12'], ['L1', 'IN', '12'], ['L2', 'OUT', '12']]}
['VIN - L - L - VOUT', 'VIN - L - L - VOUT', 'VIN - L - Sb - GND', 'VIN - L - Sa - GND', 'VOUT - L - Sb - GND', 'VOUT - L - Sa - GND', 'VOUT - L - Sb - GND', 'VOUT - L - Sa - GND']

 PCC-37117
1
OrderedDict([('L0', ['IN', 'N-L0-L1-L2-Sa0-Sb0']), ('L1', ['N-L0-L1-L2-Sa0-Sb0', 'OUT']), ('L2', ['N-L0-L1-L2-Sa0-Sb0', 'OUT']), ('Sa0', ['0', 'N-L0-L1-L2-Sa0-Sb0']), ('Sb0', ['0', 'N-L0-L1-L2-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, -1000/100001, -1000/100001, 1/100], [-1000/100001, -1100001/100001000, -1000/100001, 0], [-1000/100001, -1000/100001, -1000/100001, 1/100], [-1/Cout, 0, -1/Cout, -1/(50*Cout)]]', 'b': '[[0], [1/100], [0], [0]]', 'c': '[[100000/100001, 100000/100001, 100000/100001, 0], [0, -1/10, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1]]', 'd': '[[0], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [i_L2(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, -1000/100001, -1000/100001, 1/100], [-1000/100001, -1100001/100001000, -1000/100001, 0], [-1000/100001, -1000/100001, -1000/100001, 1/100], [-1/Cout, 0, -1/Cout, -1/(50*Cout)]]', 'b': '[[0], [1/100], [0], [0]]', 'c': '[[100000/100001, 100000/100001, 100000/100001, 0], [0, -1/10, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1]]', 'd': '[[0], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1', 'L2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sa0', '0', '12'], ['Sb0', '0', '12'], ['L0', 'OUT', '12'], ['L1', 'IN', '12'], ['L2', 'OUT', '12']]}
total action num is: 2 update:  2 by selecting:  0
<Synchronized wrapper for c_int(42)>
root offset is:  1
['VIN - Sb - Sa - C - VOUT', 'VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - Sa - GND', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND', 'VOUT - Sb - Sb - Sa - GND', 'VOUT - Sa - Sb - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sa1', ['0', 'N-Sa1-Sb1']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['IN', 'N-Sa1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-37117 violations

['VIN - Sb - Sa - C - VOUT', 'VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - Sa - GND', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND', 'VOUT - Sb - Sb - Sa - GND', 'VOUT - Sa - Sb - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sa1', ['0', 'N-Sa1-Sb1']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['IN', 'N-Sa1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - Sa - C - VOUT', 'VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - Sa - GND', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND', 'VOUT - Sb - Sb - Sa - GND', 'VOUT - Sa - Sb - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sa1', ['0', 'N-Sa1-Sb1']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['IN', 'N-Sa1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - Sa - C - VOUT', 'VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - Sa - GND', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND', 'VOUT - Sb - Sb - Sa - GND', 'VOUT - Sa - Sb - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sa1', ['0', 'N-Sa1-Sb1']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['IN', 'N-Sa1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - Sa - C - VOUT', 'VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - Sa - GND', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND', 'VOUT - Sb - Sb - Sa - GND', 'VOUT - Sa - Sb - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sa1', ['0', 'N-Sa1-Sb1']), ('Sb0', ['IN', 'OUT']), ('Sb1', ['IN', 'N-Sa1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
has to be unconnected
has to be unconnected
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - C - L - VOUT', 'VIN - Sb - L - C - GND', 'VIN - Sa - L - C - GND', 'VIN - C - C - GND', 'VOUT - Sb - C - C - GND', 'VOUT - Sa - C - C - GND', 'VOUT - L - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-C1-L0']), ('C1', ['0', 'N-C0-C1-L0']), ('L0', ['N-C0-C1-L0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, 1/100, 0], [-1/Cout, -102001/(100000*Cout), -100001/(100000*Cout), 100001/(100000*Cout)], [-1/10, -100001/1000000, -1100001/1000000, 1100001/1000000], [0, 100001/1000000, 1100001/1000000, -1100001/1000000]]', 'b': '[[0], [0], [-1], [1]]', 'c': '[[0, 0, -1, 0], [0, 0, -1, 1], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, 1/100, 0], [-1/Cout, -102001/(100000*Cout), -100001/(100000*Cout), 100001/(100000*Cout)], [-1/10, -100001/1000000, -1100001/1000000, 1100001/1000000], [0, 100001/1000000, 1100001/1000000, -1100001/1000000]]', 'b': '[[0], [0], [-1], [1]]', 'c': '[[0, 0, -1, 0], [0, 0, -1, 1], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['L0', 'OUT', '12'], ['C0', '0', '12'], ['C1', 'IN', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - C - L - VOUT', 'VIN - Sb - L - C - GND', 'VIN - Sa - L - C - GND', 'VIN - C - C - GND', 'VOUT - Sb - C - C - GND', 'VOUT - Sa - C - C - GND', 'VOUT - L - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-C1-L0']), ('C1', ['0', 'N-C0-C1-L0']), ('L0', ['N-C0-C1-L0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, 1/100, 0], [-1/Cout, -102001/(100000*Cout), -100001/(100000*Cout), 100001/(100000*Cout)], [-1/10, -100001/1000000, -1100001/1000000, 1100001/1000000], [0, 100001/1000000, 1100001/1000000, -1100001/1000000]]', 'b': '[[0], [0], [-1], [1]]', 'c': '[[0, 0, -1, 0], [0, 0, -1, 1], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, 1/100, 0], [-1/Cout, -102001/(100000*Cout), -100001/(100000*Cout), 100001/(100000*Cout)], [-1/10, -100001/1000000, -1100001/1000000, 1100001/1000000], [0, 100001/1000000, 1100001/1000000, -1100001/1000000]]', 'b': '[[0], [0], [-1], [1]]', 'c': '[[0, 0, -1, 0], [0, 0, -1, 1], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['L0', 'OUT', '12'], ['C0', '0', '12'], ['C1', 'IN', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - C - L - VOUT', 'VIN - Sb - L - C - GND', 'VIN - Sa - L - C - GND', 'VIN - C - C - GND', 'VOUT - Sb - C - C - GND', 'VOUT - Sa - C - C - GND', 'VOUT - L - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-C1-L0']), ('C1', ['0', 'N-C0-C1-L0']), ('L0', ['N-C0-C1-L0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, 1/100, 0], [-1/Cout, -102001/(100000*Cout), -100001/(100000*Cout), 100001/(100000*Cout)], [-1/10, -100001/1000000, -1100001/1000000, 1100001/1000000], [0, 100001/1000000, 1100001/1000000, -1100001/1000000]]', 'b': '[[0], [0], [-1], [1]]', 'c': '[[0, 0, -1, 0], [0, 0, -1, 1], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, 1/100, 0], [-1/Cout, -102001/(100000*Cout), -100001/(100000*Cout), 100001/(100000*Cout)], [-1/10, -100001/1000000, -1100001/1000000, 1100001/1000000], [0, 100001/1000000, 1100001/1000000, -1100001/1000000]]', 'b': '[[0], [0], [-1], [1]]', 'c': '[[0, 0, -1, 0], [0, 0, -1, 1], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['L0', 'OUT', '12'], ['C0', '0', '12'], ['C1', 'IN', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - C - L - VOUT', 'VIN - Sb - L - C - GND', 'VIN - Sa - L - C - GND', 'VIN - C - C - GND', 'VOUT - Sb - C - C - GND', 'VOUT - Sa - C - C - GND', 'VOUT - L - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-C1-L0']), ('C1', ['0', 'N-C0-C1-L0']), ('L0', ['N-C0-C1-L0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, 1/100, 0], [-1/Cout, -102001/(100000*Cout), -100001/(100000*Cout), 100001/(100000*Cout)], [-1/10, -100001/1000000, -1100001/1000000, 1100001/1000000], [0, 100001/1000000, 1100001/1000000, -1100001/1000000]]', 'b': '[[0], [0], [-1], [1]]', 'c': '[[0, 0, -1, 0], [0, 0, -1, 1], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, 1/100, 0], [-1/Cout, -102001/(100000*Cout), -100001/(100000*Cout), 100001/(100000*Cout)], [-1/10, -100001/1000000, -1100001/1000000, 1100001/1000000], [0, 100001/1000000, 1100001/1000000, -1100001/1000000]]', 'b': '[[0], [0], [-1], [1]]', 'c': '[[0, 0, -1, 0], [0, 0, -1, 1], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['L0', 'OUT', '12'], ['C0', '0', '12'], ['C1', 'IN', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - C - L - VOUT', 'VIN - Sb - L - C - GND', 'VIN - Sa - L - C - GND', 'VIN - C - C - GND', 'VOUT - Sb - C - C - GND', 'VOUT - Sa - C - C - GND', 'VOUT - L - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-C1-L0']), ('C1', ['0', 'N-C0-C1-L0']), ('L0', ['N-C0-C1-L0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, 1/100, 0], [-1/Cout, -102001/(100000*Cout), -100001/(100000*Cout), 100001/(100000*Cout)], [-1/10, -100001/1000000, -1100001/1000000, 1100001/1000000], [0, 100001/1000000, 1100001/1000000, -1100001/1000000]]', 'b': '[[0], [0], [-1], [1]]', 'c': '[[0, 0, -1, 0], [0, 0, -1, 1], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, 1/100, 0], [-1/Cout, -102001/(100000*Cout), -100001/(100000*Cout), 100001/(100000*Cout)], [-1/10, -100001/1000000, -1100001/1000000, 1100001/1000000], [0, 100001/1000000, 1100001/1000000, -1100001/1000000]]', 'b': '[[0], [0], [-1], [1]]', 'c': '[[0, 0, -1, 0], [0, 0, -1, 1], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['L0', 'OUT', '12'], ['C0', '0', '12'], ['C1', 'IN', '12']]}
has to be unconnected
has to be unconnected
has to be unconnected
has to be unconnected
['VIN - Sa - L - L - VOUT', 'VIN - Sa - L - Sb - GND', 'VIN - Sa - L - Sa - GND', 'VOUT - L - Sb - GND', 'VOUT - L - Sa - GND']

 PCC-37117
1
OrderedDict([('L0', ['N-L0-L1-Sa1-Sb0', 'N-L0-Sa0']), ('L1', ['N-L0-L1-Sa1-Sb0', 'OUT']), ('Sa0', ['IN', 'N-L0-Sa0']), ('Sa1', ['0', 'N-L0-L1-Sa1-Sb0']), ('Sb0', ['0', 'N-L0-L1-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, 1000/100001, 1/100], [1000/100001, -100002100001/100001000, 0], [-1/Cout, 0, -1/(50*Cout)]]', 'b': '[[0], [-1/100], [0]]', 'c': '[[100000/100001, -100000/100001, 0], [0, 1000001/10, 0], [0, 1/10, 0], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [1], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, 1000/100001, 1/100], [1000/100001, -2100011/100001000, 0], [-1/Cout, 0, -1/(50*Cout)]]', 'b': '[[0], [-1/100], [0]]', 'c': '[[100000/100001, -100000/100001, 0], [0, 11/10, 0], [0, 1/10, 0], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [1], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '11', '12'], 'net_list': [['Sa0', '0', '11'], ['Sb0', '0', '11'], ['L0', 'OUT', '11'], ['Sa1', 'IN', '12'], ['L1', '11', '12']]}
['VIN - Sa - L - L - VOUT', 'VIN - Sa - L - Sb - GND', 'VIN - Sa - L - Sa - GND', 'VOUT - L - Sb - GND', 'VOUT - L - Sa - GND']

 PCC-37117
1
OrderedDict([('L0', ['N-L0-L1-Sa1-Sb0', 'N-L0-Sa0']), ('L1', ['N-L0-L1-Sa1-Sb0', 'OUT']), ('Sa0', ['IN', 'N-L0-Sa0']), ('Sa1', ['0', 'N-L0-L1-Sa1-Sb0']), ('Sb0', ['0', 'N-L0-L1-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, 1000/100001, 1/100], [1000/100001, -100002100001/100001000, 0], [-1/Cout, 0, -1/(50*Cout)]]', 'b': '[[0], [-1/100], [0]]', 'c': '[[100000/100001, -100000/100001, 0], [0, 1000001/10, 0], [0, 1/10, 0], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [1], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, 1000/100001, 1/100], [1000/100001, -2100011/100001000, 0], [-1/Cout, 0, -1/(50*Cout)]]', 'b': '[[0], [-1/100], [0]]', 'c': '[[100000/100001, -100000/100001, 0], [0, 11/10, 0], [0, 1/10, 0], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [1], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '11', '12'], 'net_list': [['Sa0', '0', '11'], ['Sb0', '0', '11'], ['L0', 'OUT', '11'], ['Sa1', 'IN', '12'], ['L1', '11', '12']]}
['VIN - Sa - L - L - VOUT', 'VIN - Sa - L - Sb - GND', 'VIN - Sa - L - Sa - GND', 'VOUT - L - Sb - GND', 'VOUT - L - Sa - GND']

 PCC-37117
1
OrderedDict([('L0', ['N-L0-L1-Sa1-Sb0', 'N-L0-Sa0']), ('L1', ['N-L0-L1-Sa1-Sb0', 'OUT']), ('Sa0', ['IN', 'N-L0-Sa0']), ('Sa1', ['0', 'N-L0-L1-Sa1-Sb0']), ('Sb0', ['0', 'N-L0-L1-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, 1000/100001, 1/100], [1000/100001, -100002100001/100001000, 0], [-1/Cout, 0, -1/(50*Cout)]]', 'b': '[[0], [-1/100], [0]]', 'c': '[[100000/100001, -100000/100001, 0], [0, 1000001/10, 0], [0, 1/10, 0], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [1], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, 1000/100001, 1/100], [1000/100001, -2100011/100001000, 0], [-1/Cout, 0, -1/(50*Cout)]]', 'b': '[[0], [-1/100], [0]]', 'c': '[[100000/100001, -100000/100001, 0], [0, 11/10, 0], [0, 1/10, 0], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [1], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '11', '12'], 'net_list': [['Sa0', '0', '11'], ['Sb0', '0', '11'], ['L0', 'OUT', '11'], ['Sa1', 'IN', '12'], ['L1', '11', '12']]}
['VIN - Sa - L - L - VOUT', 'VIN - Sa - L - Sb - GND', 'VIN - Sa - L - Sa - GND', 'VOUT - L - Sb - GND', 'VOUT - L - Sa - GND']

 PCC-37117
1
OrderedDict([('L0', ['N-L0-L1-Sa1-Sb0', 'N-L0-Sa0']), ('L1', ['N-L0-L1-Sa1-Sb0', 'OUT']), ('Sa0', ['IN', 'N-L0-Sa0']), ('Sa1', ['0', 'N-L0-L1-Sa1-Sb0']), ('Sb0', ['0', 'N-L0-L1-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, 1000/100001, 1/100], [1000/100001, -100002100001/100001000, 0], [-1/Cout, 0, -1/(50*Cout)]]', 'b': '[[0], [-1/100], [0]]', 'c': '[[100000/100001, -100000/100001, 0], [0, 1000001/10, 0], [0, 1/10, 0], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [1], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, 1000/100001, 1/100], [1000/100001, -2100011/100001000, 0], [-1/Cout, 0, -1/(50*Cout)]]', 'b': '[[0], [-1/100], [0]]', 'c': '[[100000/100001, -100000/100001, 0], [0, 11/10, 0], [0, 1/10, 0], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [1], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '11', '12'], 'net_list': [['Sa0', '0', '11'], ['Sb0', '0', '11'], ['L0', 'OUT', '11'], ['Sa1', 'IN', '12'], ['L1', '11', '12']]}
['VIN - Sa - L - L - VOUT', 'VIN - Sa - L - Sb - GND', 'VIN - Sa - L - Sa - GND', 'VOUT - L - Sb - GND', 'VOUT - L - Sa - GND']

 PCC-37117
1
OrderedDict([('L0', ['N-L0-L1-Sa1-Sb0', 'N-L0-Sa0']), ('L1', ['N-L0-L1-Sa1-Sb0', 'OUT']), ('Sa0', ['IN', 'N-L0-Sa0']), ('Sa1', ['0', 'N-L0-L1-Sa1-Sb0']), ('Sb0', ['0', 'N-L0-L1-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, 1000/100001, 1/100], [1000/100001, -100002100001/100001000, 0], [-1/Cout, 0, -1/(50*Cout)]]', 'b': '[[0], [-1/100], [0]]', 'c': '[[100000/100001, -100000/100001, 0], [0, 1000001/10, 0], [0, 1/10, 0], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [1], [1], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/100001, 1000/100001, 1/100], [1000/100001, -2100011/100001000, 0], [-1/Cout, 0, -1/(50*Cout)]]', 'b': '[[0], [-1/100], [0]]', 'c': '[[100000/100001, -100000/100001, 0], [0, 11/10, 0], [0, 1/10, 0], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [1], [1], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '11', '12'], 'net_list': [['Sa0', '0', '11'], ['Sb0', '0', '11'], ['L0', 'OUT', '11'], ['Sa1', 'IN', '12'], ['L1', '11', '12']]}
has to be unconnected
has to be unconnected
['VIN - Sb - VOUT', 'VIN - Sb - L - C - GND', 'VIN - Sb - L - Sa - GND', 'VIN - Sb - L - Sb - GND', 'VOUT - L - C - GND', 'VOUT - L - Sa - GND', 'VOUT - L - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-L0-Sa0-Sb0']), ('L0', ['N-C0-L0-Sa0-Sb0', 'OUT']), ('Sa0', ['0', 'N-C0-L0-Sa0-Sb0']), ('Sb0', ['0', 'N-C0-L0-Sa0-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, -1/100], [1/Cout, -511/(550*Cout), 0], [1/10, 0, -100001/1000000]]', 'b': '[[0], [10/(11*Cout)], [0]]', 'c': '[[0, 0, -1], [0, 1/11, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [10/11], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, -1/100], [1/Cout, -1000501/(50000050*Cout), 0], [1/10, 0, -100001/1000000]]', 'b': '[[0], [10/(1000001*Cout)], [0]]', 'c': '[[0, 0, -1], [0, 1/1000001, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [1000000/1000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Rb1', 'Ra1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sa0', '0', '12'], ['Sb0', 'IN', 'OUT'], ['L0', '12', 'OUT'], ['C0', '0', '12'], ['Sb1', '0', '12']]}
['VIN - Sb - VOUT', 'VIN - Sb - L - C - GND', 'VIN - Sb - L - Sa - GND', 'VIN - Sb - L - Sb - GND', 'VOUT - L - C - GND', 'VOUT - L - Sa - GND', 'VOUT - L - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-L0-Sa0-Sb0']), ('L0', ['N-C0-L0-Sa0-Sb0', 'OUT']), ('Sa0', ['0', 'N-C0-L0-Sa0-Sb0']), ('Sb0', ['0', 'N-C0-L0-Sa0-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, -1/100], [1/Cout, -511/(550*Cout), 0], [1/10, 0, -100001/1000000]]', 'b': '[[0], [10/(11*Cout)], [0]]', 'c': '[[0, 0, -1], [0, 1/11, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [10/11], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, -1/100], [1/Cout, -1000501/(50000050*Cout), 0], [1/10, 0, -100001/1000000]]', 'b': '[[0], [10/(1000001*Cout)], [0]]', 'c': '[[0, 0, -1], [0, 1/1000001, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [1000000/1000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Rb1', 'Ra1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sa0', '0', '12'], ['Sb0', 'IN', 'OUT'], ['L0', '12', 'OUT'], ['C0', '0', '12'], ['Sb1', '0', '12']]}
['VIN - Sb - VOUT', 'VIN - Sb - L - C - GND', 'VIN - Sb - L - Sa - GND', 'VIN - Sb - L - Sb - GND', 'VOUT - L - C - GND', 'VOUT - L - Sa - GND', 'VOUT - L - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-L0-Sa0-Sb0']), ('L0', ['N-C0-L0-Sa0-Sb0', 'OUT']), ('Sa0', ['0', 'N-C0-L0-Sa0-Sb0']), ('Sb0', ['0', 'N-C0-L0-Sa0-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, -1/100], [1/Cout, -511/(550*Cout), 0], [1/10, 0, -100001/1000000]]', 'b': '[[0], [10/(11*Cout)], [0]]', 'c': '[[0, 0, -1], [0, 1/11, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [10/11], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, -1/100], [1/Cout, -1000501/(50000050*Cout), 0], [1/10, 0, -100001/1000000]]', 'b': '[[0], [10/(1000001*Cout)], [0]]', 'c': '[[0, 0, -1], [0, 1/1000001, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [1000000/1000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Rb1', 'Ra1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sa0', '0', '12'], ['Sb0', 'IN', 'OUT'], ['L0', '12', 'OUT'], ['C0', '0', '12'], ['Sb1', '0', '12']]}
['VIN - Sb - VOUT', 'VIN - Sb - L - C - GND', 'VIN - Sb - L - Sa - GND', 'VIN - Sb - L - Sb - GND', 'VOUT - L - C - GND', 'VOUT - L - Sa - GND', 'VOUT - L - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-L0-Sa0-Sb0']), ('L0', ['N-C0-L0-Sa0-Sb0', 'OUT']), ('Sa0', ['0', 'N-C0-L0-Sa0-Sb0']), ('Sb0', ['0', 'N-C0-L0-Sa0-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, -1/100], [1/Cout, -511/(550*Cout), 0], [1/10, 0, -100001/1000000]]', 'b': '[[0], [10/(11*Cout)], [0]]', 'c': '[[0, 0, -1], [0, 1/11, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [10/11], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, -1/100], [1/Cout, -1000501/(50000050*Cout), 0], [1/10, 0, -100001/1000000]]', 'b': '[[0], [10/(1000001*Cout)], [0]]', 'c': '[[0, 0, -1], [0, 1/1000001, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [1000000/1000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Rb1', 'Ra1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sa0', '0', '12'], ['Sb0', 'IN', 'OUT'], ['L0', '12', 'OUT'], ['C0', '0', '12'], ['Sb1', '0', '12']]}
['VIN - Sb - VOUT', 'VIN - Sb - L - C - GND', 'VIN - Sb - L - Sa - GND', 'VIN - Sb - L - Sb - GND', 'VOUT - L - C - GND', 'VOUT - L - Sa - GND', 'VOUT - L - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-L0-Sa0-Sb0']), ('L0', ['N-C0-L0-Sa0-Sb0', 'OUT']), ('Sa0', ['0', 'N-C0-L0-Sa0-Sb0']), ('Sb0', ['0', 'N-C0-L0-Sa0-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, -1/100], [1/Cout, -511/(550*Cout), 0], [1/10, 0, -100001/1000000]]', 'b': '[[0], [10/(11*Cout)], [0]]', 'c': '[[0, 0, -1], [0, 1/11, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [10/11], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, -1/100, -1/100], [1/Cout, -1000501/(50000050*Cout), 0], [1/10, 0, -100001/1000000]]', 'b': '[[0], [10/(1000001*Cout)], [0]]', 'c': '[[0, 0, -1], [0, 1/1000001, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [1000000/1000001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Rb1', 'Ra1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sa0', '0', '12'], ['Sb0', 'IN', 'OUT'], ['L0', '12', 'OUT'], ['C0', '0', '12'], ['Sb1', '0', '12']]}
has to be unconnected
has to be unconnected
['VIN - Sb - Sb - C - Sb - VOUT', 'VIN - Sb - Sb - Sa - GND', 'VOUT - Sb - C - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-Sa0-Sb0', 'N-C0-Sb2']), ('Sa0', ['0', 'N-C0-Sa0-Sb0']), ('Sb0', ['N-C0-Sa0-Sb0', 'N-Sb0-Sb1']), ('Sb1', ['IN', 'N-Sb0-Sb1']), ('Sb2', ['N-C0-Sb2', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-53101071/(155001050*Cout), 1000021/(3100021*Cout)], [1000021/31000210, -1000021/31000210]]', 'b': '[[1000000/(3100021*Cout)], [-100000/3100021]]', 'c': '[[2100000/3100021, -2100000/3100021], [1100000/3100021, -1100000/3100021], [2100000/3100021, 1000021/3100021], [100000/3100021, -100000/3100021], [0, 0], [1, 0]]', 'd': '[[1000000/3100021], [2000010/3100021], [1000000/3100021], [3000020/3100021], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-200103100551/(10000155000050*Cout), 2000011/(200003100001*Cout)], [2000011/2000031000010, -2000011/2000031000010]]', 'b': '[[10/(200003100001*Cout)], [-1/200003100001]]', 'c': '[[2000001/200003100001, -2000001/200003100001], [1000001/200003100001, -1000001/200003100001], [2000001/200003100001, 200001100000/200003100001], [1/200003100001, -1/200003100001], [0, 0], [1, 0]]', 'd': '[[1000000/200003100001], [100002000000/200003100001], [1000000/200003100001], [200003000000/200003100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Rb1', 'Ra1', 'Rb2', 'Ra2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '11', '7', '12'], 'net_list': [['Sa0', '0', '11'], ['Sb0', 'OUT', '7'], ['C0', '7', '11'], ['Sb1', 'IN', '12'], ['Sb2', '11', '12']]}
['VIN - Sb - Sb - C - Sb - VOUT', 'VIN - Sb - Sb - Sa - GND', 'VOUT - Sb - C - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-Sa0-Sb0', 'N-C0-Sb2']), ('Sa0', ['0', 'N-C0-Sa0-Sb0']), ('Sb0', ['N-C0-Sa0-Sb0', 'N-Sb0-Sb1']), ('Sb1', ['IN', 'N-Sb0-Sb1']), ('Sb2', ['N-C0-Sb2', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-53101071/(155001050*Cout), 1000021/(3100021*Cout)], [1000021/31000210, -1000021/31000210]]', 'b': '[[1000000/(3100021*Cout)], [-100000/3100021]]', 'c': '[[2100000/3100021, -2100000/3100021], [1100000/3100021, -1100000/3100021], [2100000/3100021, 1000021/3100021], [100000/3100021, -100000/3100021], [0, 0], [1, 0]]', 'd': '[[1000000/3100021], [2000010/3100021], [1000000/3100021], [3000020/3100021], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-200103100551/(10000155000050*Cout), 2000011/(200003100001*Cout)], [2000011/2000031000010, -2000011/2000031000010]]', 'b': '[[10/(200003100001*Cout)], [-1/200003100001]]', 'c': '[[2000001/200003100001, -2000001/200003100001], [1000001/200003100001, -1000001/200003100001], [2000001/200003100001, 200001100000/200003100001], [1/200003100001, -1/200003100001], [0, 0], [1, 0]]', 'd': '[[1000000/200003100001], [100002000000/200003100001], [1000000/200003100001], [200003000000/200003100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Rb1', 'Ra1', 'Rb2', 'Ra2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '11', '7', '12'], 'net_list': [['Sa0', '0', '11'], ['Sb0', 'OUT', '7'], ['C0', '7', '11'], ['Sb1', 'IN', '12'], ['Sb2', '11', '12']]}
['VIN - Sb - Sb - C - Sb - VOUT', 'VIN - Sb - Sb - Sa - GND', 'VOUT - Sb - C - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-Sa0-Sb0', 'N-C0-Sb2']), ('Sa0', ['0', 'N-C0-Sa0-Sb0']), ('Sb0', ['N-C0-Sa0-Sb0', 'N-Sb0-Sb1']), ('Sb1', ['IN', 'N-Sb0-Sb1']), ('Sb2', ['N-C0-Sb2', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-53101071/(155001050*Cout), 1000021/(3100021*Cout)], [1000021/31000210, -1000021/31000210]]', 'b': '[[1000000/(3100021*Cout)], [-100000/3100021]]', 'c': '[[2100000/3100021, -2100000/3100021], [1100000/3100021, -1100000/3100021], [2100000/3100021, 1000021/3100021], [100000/3100021, -100000/3100021], [0, 0], [1, 0]]', 'd': '[[1000000/3100021], [2000010/3100021], [1000000/3100021], [3000020/3100021], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-200103100551/(10000155000050*Cout), 2000011/(200003100001*Cout)], [2000011/2000031000010, -2000011/2000031000010]]', 'b': '[[10/(200003100001*Cout)], [-1/200003100001]]', 'c': '[[2000001/200003100001, -2000001/200003100001], [1000001/200003100001, -1000001/200003100001], [2000001/200003100001, 200001100000/200003100001], [1/200003100001, -1/200003100001], [0, 0], [1, 0]]', 'd': '[[1000000/200003100001], [100002000000/200003100001], [1000000/200003100001], [200003000000/200003100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Rb1', 'Ra1', 'Rb2', 'Ra2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '11', '7', '12'], 'net_list': [['Sa0', '0', '11'], ['Sb0', 'OUT', '7'], ['C0', '7', '11'], ['Sb1', 'IN', '12'], ['Sb2', '11', '12']]}
['VIN - Sb - Sb - C - Sb - VOUT', 'VIN - Sb - Sb - Sa - GND', 'VOUT - Sb - C - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-Sa0-Sb0', 'N-C0-Sb2']), ('Sa0', ['0', 'N-C0-Sa0-Sb0']), ('Sb0', ['N-C0-Sa0-Sb0', 'N-Sb0-Sb1']), ('Sb1', ['IN', 'N-Sb0-Sb1']), ('Sb2', ['N-C0-Sb2', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-53101071/(155001050*Cout), 1000021/(3100021*Cout)], [1000021/31000210, -1000021/31000210]]', 'b': '[[1000000/(3100021*Cout)], [-100000/3100021]]', 'c': '[[2100000/3100021, -2100000/3100021], [1100000/3100021, -1100000/3100021], [2100000/3100021, 1000021/3100021], [100000/3100021, -100000/3100021], [0, 0], [1, 0]]', 'd': '[[1000000/3100021], [2000010/3100021], [1000000/3100021], [3000020/3100021], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-200103100551/(10000155000050*Cout), 2000011/(200003100001*Cout)], [2000011/2000031000010, -2000011/2000031000010]]', 'b': '[[10/(200003100001*Cout)], [-1/200003100001]]', 'c': '[[2000001/200003100001, -2000001/200003100001], [1000001/200003100001, -1000001/200003100001], [2000001/200003100001, 200001100000/200003100001], [1/200003100001, -1/200003100001], [0, 0], [1, 0]]', 'd': '[[1000000/200003100001], [100002000000/200003100001], [1000000/200003100001], [200003000000/200003100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Rb1', 'Ra1', 'Rb2', 'Ra2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '11', '7', '12'], 'net_list': [['Sa0', '0', '11'], ['Sb0', 'OUT', '7'], ['C0', '7', '11'], ['Sb1', 'IN', '12'], ['Sb2', '11', '12']]}
['VIN - Sb - Sb - C - Sb - VOUT', 'VIN - Sb - Sb - Sa - GND', 'VOUT - Sb - C - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-Sa0-Sb0', 'N-C0-Sb2']), ('Sa0', ['0', 'N-C0-Sa0-Sb0']), ('Sb0', ['N-C0-Sa0-Sb0', 'N-Sb0-Sb1']), ('Sb1', ['IN', 'N-Sb0-Sb1']), ('Sb2', ['N-C0-Sb2', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-53101071/(155001050*Cout), 1000021/(3100021*Cout)], [1000021/31000210, -1000021/31000210]]', 'b': '[[1000000/(3100021*Cout)], [-100000/3100021]]', 'c': '[[2100000/3100021, -2100000/3100021], [1100000/3100021, -1100000/3100021], [2100000/3100021, 1000021/3100021], [100000/3100021, -100000/3100021], [0, 0], [1, 0]]', 'd': '[[1000000/3100021], [2000010/3100021], [1000000/3100021], [3000020/3100021], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)]]', 'y': '[[v_11(t)], [v_12(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-200103100551/(10000155000050*Cout), 2000011/(200003100001*Cout)], [2000011/2000031000010, -2000011/2000031000010]]', 'b': '[[10/(200003100001*Cout)], [-1/200003100001]]', 'c': '[[2000001/200003100001, -2000001/200003100001], [1000001/200003100001, -1000001/200003100001], [2000001/200003100001, 200001100000/200003100001], [1/200003100001, -1/200003100001], [0, 0], [1, 0]]', 'd': '[[1000000/200003100001], [100002000000/200003100001], [1000000/200003100001], [200003000000/200003100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Rb1', 'Ra1', 'Rb2', 'Ra2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '11', '7', '12'], 'net_list': [['Sa0', '0', '11'], ['Sb0', 'OUT', '7'], ['C0', '7', '11'], ['Sb1', 'IN', '12'], ['Sb2', '11', '12']]}
['VIN - Sb - L - Sa - VOUT', 'VIN - Sb - C - Sa - GND', 'VOUT - Sa - L - C - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-L0-Sb0', 'N-C0-Sa0']), ('L0', ['N-C0-L0-Sb0', 'N-L0-Sa1']), ('Sa0', ['0', 'N-C0-Sa0']), ('Sa1', ['N-L0-Sa1', 'OUT']), ('Sb0', ['IN', 'N-C0-L0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000022000/1000011, 1/100, -11/100001100], [-1/Cout, -1/(50*Cout), 0], [11/10000110, 0, -1/1000011]]', 'b': '[[-10000/1000011], [0], [1/1000011]]', 'c': '[[1100000/1000011, 0, -1000000/1000011], [-100000, 1, 0], [1100000/1000011, 0, 11/1000011], [100000/1000011, 0, 1/1000011], [0, 0, 0], [0, 1, 0]]', 'd': '[[1000000/1000011], [0], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-500003/25000275, 1/100, -1000001/100001100], [-1/Cout, -1/(50*Cout), 0], [1000001/10000110, 0, -1/1000011]]', 'b': '[[-1/10000110], [0], [1/1000011]]', 'c': '[[1000001/1000011, 0, -10/1000011], [-1, 1, 0], [1000001/1000011, 0, 1000001/1000011], [1/1000011, 0, 1/1000011], [0, 0, 0], [0, 1, 0]]', 'd': '[[10/1000011], [0], [10/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '7', '9', '12', '0'], 'net_list': [['Sa0', 'OUT', '7'], ['Sb0', 'IN', '9'], ['L0', '7', '9'], ['C0', '9', '12'], ['Sa1', '0', '12']]}
['VIN - Sb - L - Sa - VOUT', 'VIN - Sb - C - Sa - GND', 'VOUT - Sa - L - C - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-L0-Sb0', 'N-C0-Sa0']), ('L0', ['N-C0-L0-Sb0', 'N-L0-Sa1']), ('Sa0', ['0', 'N-C0-Sa0']), ('Sa1', ['N-L0-Sa1', 'OUT']), ('Sb0', ['IN', 'N-C0-L0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000022000/1000011, 1/100, -11/100001100], [-1/Cout, -1/(50*Cout), 0], [11/10000110, 0, -1/1000011]]', 'b': '[[-10000/1000011], [0], [1/1000011]]', 'c': '[[1100000/1000011, 0, -1000000/1000011], [-100000, 1, 0], [1100000/1000011, 0, 11/1000011], [100000/1000011, 0, 1/1000011], [0, 0, 0], [0, 1, 0]]', 'd': '[[1000000/1000011], [0], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-500003/25000275, 1/100, -1000001/100001100], [-1/Cout, -1/(50*Cout), 0], [1000001/10000110, 0, -1/1000011]]', 'b': '[[-1/10000110], [0], [1/1000011]]', 'c': '[[1000001/1000011, 0, -10/1000011], [-1, 1, 0], [1000001/1000011, 0, 1000001/1000011], [1/1000011, 0, 1/1000011], [0, 0, 0], [0, 1, 0]]', 'd': '[[10/1000011], [0], [10/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '7', '9', '12', '0'], 'net_list': [['Sa0', 'OUT', '7'], ['Sb0', 'IN', '9'], ['L0', '7', '9'], ['C0', '9', '12'], ['Sa1', '0', '12']]}
['VIN - Sb - L - Sa - VOUT', 'VIN - Sb - C - Sa - GND', 'VOUT - Sa - L - C - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-L0-Sb0', 'N-C0-Sa0']), ('L0', ['N-C0-L0-Sb0', 'N-L0-Sa1']), ('Sa0', ['0', 'N-C0-Sa0']), ('Sa1', ['N-L0-Sa1', 'OUT']), ('Sb0', ['IN', 'N-C0-L0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000022000/1000011, 1/100, -11/100001100], [-1/Cout, -1/(50*Cout), 0], [11/10000110, 0, -1/1000011]]', 'b': '[[-10000/1000011], [0], [1/1000011]]', 'c': '[[1100000/1000011, 0, -1000000/1000011], [-100000, 1, 0], [1100000/1000011, 0, 11/1000011], [100000/1000011, 0, 1/1000011], [0, 0, 0], [0, 1, 0]]', 'd': '[[1000000/1000011], [0], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-500003/25000275, 1/100, -1000001/100001100], [-1/Cout, -1/(50*Cout), 0], [1000001/10000110, 0, -1/1000011]]', 'b': '[[-1/10000110], [0], [1/1000011]]', 'c': '[[1000001/1000011, 0, -10/1000011], [-1, 1, 0], [1000001/1000011, 0, 1000001/1000011], [1/1000011, 0, 1/1000011], [0, 0, 0], [0, 1, 0]]', 'd': '[[10/1000011], [0], [10/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '7', '9', '12', '0'], 'net_list': [['Sa0', 'OUT', '7'], ['Sb0', 'IN', '9'], ['L0', '7', '9'], ['C0', '9', '12'], ['Sa1', '0', '12']]}
['VIN - Sb - L - Sa - VOUT', 'VIN - Sb - C - Sa - GND', 'VOUT - Sa - L - C - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-L0-Sb0', 'N-C0-Sa0']), ('L0', ['N-C0-L0-Sb0', 'N-L0-Sa1']), ('Sa0', ['0', 'N-C0-Sa0']), ('Sa1', ['N-L0-Sa1', 'OUT']), ('Sb0', ['IN', 'N-C0-L0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000022000/1000011, 1/100, -11/100001100], [-1/Cout, -1/(50*Cout), 0], [11/10000110, 0, -1/1000011]]', 'b': '[[-10000/1000011], [0], [1/1000011]]', 'c': '[[1100000/1000011, 0, -1000000/1000011], [-100000, 1, 0], [1100000/1000011, 0, 11/1000011], [100000/1000011, 0, 1/1000011], [0, 0, 0], [0, 1, 0]]', 'd': '[[1000000/1000011], [0], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-500003/25000275, 1/100, -1000001/100001100], [-1/Cout, -1/(50*Cout), 0], [1000001/10000110, 0, -1/1000011]]', 'b': '[[-1/10000110], [0], [1/1000011]]', 'c': '[[1000001/1000011, 0, -10/1000011], [-1, 1, 0], [1000001/1000011, 0, 1000001/1000011], [1/1000011, 0, 1/1000011], [0, 0, 0], [0, 1, 0]]', 'd': '[[10/1000011], [0], [10/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '7', '9', '12', '0'], 'net_list': [['Sa0', 'OUT', '7'], ['Sb0', 'IN', '9'], ['L0', '7', '9'], ['C0', '9', '12'], ['Sa1', '0', '12']]}
['VIN - Sb - L - Sa - VOUT', 'VIN - Sb - C - Sa - GND', 'VOUT - Sa - L - C - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['N-C0-L0-Sb0', 'N-C0-Sa0']), ('L0', ['N-C0-L0-Sb0', 'N-L0-Sa1']), ('Sa0', ['0', 'N-C0-Sa0']), ('Sa1', ['N-L0-Sa1', 'OUT']), ('Sb0', ['IN', 'N-C0-L0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000022000/1000011, 1/100, -11/100001100], [-1/Cout, -1/(50*Cout), 0], [11/10000110, 0, -1/1000011]]', 'b': '[[-10000/1000011], [0], [1/1000011]]', 'c': '[[1100000/1000011, 0, -1000000/1000011], [-100000, 1, 0], [1100000/1000011, 0, 11/1000011], [100000/1000011, 0, 1/1000011], [0, 0, 0], [0, 1, 0]]', 'd': '[[1000000/1000011], [0], [1000000/1000011], [1000010/1000011], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_7(t)], [v_9(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-500003/25000275, 1/100, -1000001/100001100], [-1/Cout, -1/(50*Cout), 0], [1000001/10000110, 0, -1/1000011]]', 'b': '[[-1/10000110], [0], [1/1000011]]', 'c': '[[1000001/1000011, 0, -10/1000011], [-1, 1, 0], [1000001/1000011, 0, 1000001/1000011], [1/1000011, 0, 1/1000011], [0, 0, 0], [0, 1, 0]]', 'd': '[[10/1000011], [0], [10/1000011], [1000010/1000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '7', '9', '12', '0'], 'net_list': [['Sa0', 'OUT', '7'], ['Sb0', 'IN', '9'], ['L0', '7', '9'], ['C0', '9', '12'], ['Sa1', '0', '12']]}
has to be unconnected
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VIN - Sb - C - GND', 'VIN - Sa - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - Sa - C - GND', 'VOUT - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'OUT']), ('C1', ['0', 'N-C1-Sa1']), ('Sa0', ['IN', 'OUT']), ('Sa1', ['N-C1-Sa1', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-37117 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VIN - Sb - C - GND', 'VIN - Sa - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - Sa - C - GND', 'VOUT - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'OUT']), ('C1', ['0', 'N-C1-Sa1']), ('Sa0', ['IN', 'OUT']), ('Sa1', ['N-C1-Sa1', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VIN - Sb - C - GND', 'VIN - Sa - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - Sa - C - GND', 'VOUT - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'OUT']), ('C1', ['0', 'N-C1-Sa1']), ('Sa0', ['IN', 'OUT']), ('Sa1', ['N-C1-Sa1', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VIN - Sb - C - GND', 'VIN - Sa - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - Sa - C - GND', 'VOUT - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'OUT']), ('C1', ['0', 'N-C1-Sa1']), ('Sa0', ['IN', 'OUT']), ('Sa1', ['N-C1-Sa1', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VIN - Sb - C - GND', 'VIN - Sa - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - Sa - C - GND', 'VOUT - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'OUT']), ('C1', ['0', 'N-C1-Sa1']), ('Sa0', ['IN', 'OUT']), ('Sa1', ['N-C1-Sa1', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
has to be unconnected
has to be unconnected
['VIN - Sa - VOUT', 'VIN - Sa - L - C - GND', 'VIN - Sa - L - Sb - GND', 'VIN - Sa - L - Sb - GND', 'VOUT - L - C - GND', 'VOUT - L - Sb - GND', 'VOUT - L - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-L0-Sb0-Sb1']), ('L0', ['N-C0-L0-Sb0-Sb1', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-C0-L0-Sb0-Sb1']), ('Sb1', ['0', 'N-C0-L0-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, 1/100], [-1/Cout, -1000501/(50000050*Cout), 0], [-1/10, 0, -1/5]]', 'b': '[[0], [10/(1000001*Cout)], [0]]', 'c': '[[0, 0, -1], [0, 1/1000001, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [1000000/1000001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, 1/100], [-1/Cout, -511/(550*Cout), 0], [-1/10, 0, -1/500000]]', 'b': '[[0], [10/(11*Cout)], [0]]', 'c': '[[0, 0, -1], [0, 1/11, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [10/11], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Rb1', 'Ra1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', '0', '12'], ['L0', 'OUT', '12'], ['C0', '0', '12'], ['Sb1', '0', '12']]}
['VIN - Sa - VOUT', 'VIN - Sa - L - C - GND', 'VIN - Sa - L - Sb - GND', 'VIN - Sa - L - Sb - GND', 'VOUT - L - C - GND', 'VOUT - L - Sb - GND', 'VOUT - L - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-L0-Sb0-Sb1']), ('L0', ['N-C0-L0-Sb0-Sb1', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-C0-L0-Sb0-Sb1']), ('Sb1', ['0', 'N-C0-L0-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, 1/100], [-1/Cout, -1000501/(50000050*Cout), 0], [-1/10, 0, -1/5]]', 'b': '[[0], [10/(1000001*Cout)], [0]]', 'c': '[[0, 0, -1], [0, 1/1000001, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [1000000/1000001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, 1/100], [-1/Cout, -511/(550*Cout), 0], [-1/10, 0, -1/500000]]', 'b': '[[0], [10/(11*Cout)], [0]]', 'c': '[[0, 0, -1], [0, 1/11, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [10/11], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Rb1', 'Ra1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', '0', '12'], ['L0', 'OUT', '12'], ['C0', '0', '12'], ['Sb1', '0', '12']]}
['VIN - Sa - VOUT', 'VIN - Sa - L - C - GND', 'VIN - Sa - L - Sb - GND', 'VIN - Sa - L - Sb - GND', 'VOUT - L - C - GND', 'VOUT - L - Sb - GND', 'VOUT - L - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-L0-Sb0-Sb1']), ('L0', ['N-C0-L0-Sb0-Sb1', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-C0-L0-Sb0-Sb1']), ('Sb1', ['0', 'N-C0-L0-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, 1/100], [-1/Cout, -1000501/(50000050*Cout), 0], [-1/10, 0, -1/5]]', 'b': '[[0], [10/(1000001*Cout)], [0]]', 'c': '[[0, 0, -1], [0, 1/1000001, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [1000000/1000001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, 1/100], [-1/Cout, -511/(550*Cout), 0], [-1/10, 0, -1/500000]]', 'b': '[[0], [10/(11*Cout)], [0]]', 'c': '[[0, 0, -1], [0, 1/11, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [10/11], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Rb1', 'Ra1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', '0', '12'], ['L0', 'OUT', '12'], ['C0', '0', '12'], ['Sb1', '0', '12']]}
['VIN - Sa - VOUT', 'VIN - Sa - L - C - GND', 'VIN - Sa - L - Sb - GND', 'VIN - Sa - L - Sb - GND', 'VOUT - L - C - GND', 'VOUT - L - Sb - GND', 'VOUT - L - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-L0-Sb0-Sb1']), ('L0', ['N-C0-L0-Sb0-Sb1', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-C0-L0-Sb0-Sb1']), ('Sb1', ['0', 'N-C0-L0-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, 1/100], [-1/Cout, -1000501/(50000050*Cout), 0], [-1/10, 0, -1/5]]', 'b': '[[0], [10/(1000001*Cout)], [0]]', 'c': '[[0, 0, -1], [0, 1/1000001, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [1000000/1000001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, 1/100], [-1/Cout, -511/(550*Cout), 0], [-1/10, 0, -1/500000]]', 'b': '[[0], [10/(11*Cout)], [0]]', 'c': '[[0, 0, -1], [0, 1/11, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [10/11], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Rb1', 'Ra1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', '0', '12'], ['L0', 'OUT', '12'], ['C0', '0', '12'], ['Sb1', '0', '12']]}
['VIN - Sa - VOUT', 'VIN - Sa - L - C - GND', 'VIN - Sa - L - Sb - GND', 'VIN - Sa - L - Sb - GND', 'VOUT - L - C - GND', 'VOUT - L - Sb - GND', 'VOUT - L - Sb - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-L0-Sb0-Sb1']), ('L0', ['N-C0-L0-Sb0-Sb1', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-C0-L0-Sb0-Sb1']), ('Sb1', ['0', 'N-C0-L0-Sb0-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, 1/100], [-1/Cout, -1000501/(50000050*Cout), 0], [-1/10, 0, -1/5]]', 'b': '[[0], [10/(1000001*Cout)], [0]]', 'c': '[[0, 0, -1], [0, 1/1000001, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [1000000/1000001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[0, 1/100, 1/100], [-1/Cout, -511/(550*Cout), 0], [-1/10, 0, -1/500000]]', 'b': '[[0], [10/(11*Cout)], [0]]', 'c': '[[0, 0, -1], [0, 1/11, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [10/11], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Rb1', 'Ra1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '12'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', '0', '12'], ['L0', 'OUT', '12'], ['C0', '0', '12'], ['Sb1', '0', '12']]}
['VIN - Sa - L - VOUT', 'VIN - Sb - VOUT', 'VIN - C - C - GND', 'VOUT - Sb - C - C - GND', 'VOUT - L - Sa - C - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-C1']), ('C1', ['0', 'N-C0-C1']), ('L0', ['N-L0-Sa0', 'OUT']), ('Sa0', ['IN', 'N-L0-Sa0']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000, 1/100, 1/100, -1/100], [-1/Cout, -51/(50*Cout), -1/Cout, 1/Cout], [-1/10, -1/10, -11/10, 11/10], [1/10, 1/10, 11/10, -11/10]]', 'b': '[[0], [0], [-1], [1]]', 'c': '[[0, 0, -1, 0], [100000, 0, -1, 1], [0, 0, -1, 1], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/100, 1/100, 1/100, -1/100], [-1/Cout, -2001/(100000*Cout), -1/(100000*Cout), 1/(100000*Cout)], [-1/10, -1/1000000, -1000001/1000000, 1000001/1000000], [1/10, 1/1000000, 1000001/1000000, -1000001/1000000]]', 'b': '[[0], [0], [-1], [1]]', 'c': '[[0, 0, -1, 0], [1, 0, -1, 1], [0, 0, -1, 1], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '8', '0', '12'], 'net_list': [['Sa0', 'IN', '8'], ['Sb0', 'IN', 'OUT'], ['L0', 'OUT', '8'], ['C0', '0', '12'], ['C1', 'IN', '12']]}
['VIN - Sa - L - VOUT', 'VIN - Sb - VOUT', 'VIN - C - C - GND', 'VOUT - Sb - C - C - GND', 'VOUT - L - Sa - C - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-C1']), ('C1', ['0', 'N-C0-C1']), ('L0', ['N-L0-Sa0', 'OUT']), ('Sa0', ['IN', 'N-L0-Sa0']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000, 1/100, 1/100, -1/100], [-1/Cout, -51/(50*Cout), -1/Cout, 1/Cout], [-1/10, -1/10, -11/10, 11/10], [1/10, 1/10, 11/10, -11/10]]', 'b': '[[0], [0], [-1], [1]]', 'c': '[[0, 0, -1, 0], [100000, 0, -1, 1], [0, 0, -1, 1], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/100, 1/100, 1/100, -1/100], [-1/Cout, -2001/(100000*Cout), -1/(100000*Cout), 1/(100000*Cout)], [-1/10, -1/1000000, -1000001/1000000, 1000001/1000000], [1/10, 1/1000000, 1000001/1000000, -1000001/1000000]]', 'b': '[[0], [0], [-1], [1]]', 'c': '[[0, 0, -1, 0], [1, 0, -1, 1], [0, 0, -1, 1], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '8', '0', '12'], 'net_list': [['Sa0', 'IN', '8'], ['Sb0', 'IN', 'OUT'], ['L0', 'OUT', '8'], ['C0', '0', '12'], ['C1', 'IN', '12']]}
['VIN - Sa - L - VOUT', 'VIN - Sb - VOUT', 'VIN - C - C - GND', 'VOUT - Sb - C - C - GND', 'VOUT - L - Sa - C - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-C1']), ('C1', ['0', 'N-C0-C1']), ('L0', ['N-L0-Sa0', 'OUT']), ('Sa0', ['IN', 'N-L0-Sa0']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000, 1/100, 1/100, -1/100], [-1/Cout, -51/(50*Cout), -1/Cout, 1/Cout], [-1/10, -1/10, -11/10, 11/10], [1/10, 1/10, 11/10, -11/10]]', 'b': '[[0], [0], [-1], [1]]', 'c': '[[0, 0, -1, 0], [100000, 0, -1, 1], [0, 0, -1, 1], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/100, 1/100, 1/100, -1/100], [-1/Cout, -2001/(100000*Cout), -1/(100000*Cout), 1/(100000*Cout)], [-1/10, -1/1000000, -1000001/1000000, 1000001/1000000], [1/10, 1/1000000, 1000001/1000000, -1000001/1000000]]', 'b': '[[0], [0], [-1], [1]]', 'c': '[[0, 0, -1, 0], [1, 0, -1, 1], [0, 0, -1, 1], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '8', '0', '12'], 'net_list': [['Sa0', 'IN', '8'], ['Sb0', 'IN', 'OUT'], ['L0', 'OUT', '8'], ['C0', '0', '12'], ['C1', 'IN', '12']]}
['VIN - Sa - L - VOUT', 'VIN - Sb - VOUT', 'VIN - C - C - GND', 'VOUT - Sb - C - C - GND', 'VOUT - L - Sa - C - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-C1']), ('C1', ['0', 'N-C0-C1']), ('L0', ['N-L0-Sa0', 'OUT']), ('Sa0', ['IN', 'N-L0-Sa0']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000, 1/100, 1/100, -1/100], [-1/Cout, -51/(50*Cout), -1/Cout, 1/Cout], [-1/10, -1/10, -11/10, 11/10], [1/10, 1/10, 11/10, -11/10]]', 'b': '[[0], [0], [-1], [1]]', 'c': '[[0, 0, -1, 0], [100000, 0, -1, 1], [0, 0, -1, 1], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/100, 1/100, 1/100, -1/100], [-1/Cout, -2001/(100000*Cout), -1/(100000*Cout), 1/(100000*Cout)], [-1/10, -1/1000000, -1000001/1000000, 1000001/1000000], [1/10, 1/1000000, 1000001/1000000, -1000001/1000000]]', 'b': '[[0], [0], [-1], [1]]', 'c': '[[0, 0, -1, 0], [1, 0, -1, 1], [0, 0, -1, 1], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '8', '0', '12'], 'net_list': [['Sa0', 'IN', '8'], ['Sb0', 'IN', 'OUT'], ['L0', 'OUT', '8'], ['C0', '0', '12'], ['C1', 'IN', '12']]}
['VIN - Sa - L - VOUT', 'VIN - Sb - VOUT', 'VIN - C - C - GND', 'VOUT - Sb - C - C - GND', 'VOUT - L - Sa - C - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-C1']), ('C1', ['0', 'N-C0-C1']), ('L0', ['N-L0-Sa0', 'OUT']), ('Sa0', ['IN', 'N-L0-Sa0']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000, 1/100, 1/100, -1/100], [-1/Cout, -51/(50*Cout), -1/Cout, 1/Cout], [-1/10, -1/10, -11/10, 11/10], [1/10, 1/10, 11/10, -11/10]]', 'b': '[[0], [0], [-1], [1]]', 'c': '[[0, 0, -1, 0], [100000, 0, -1, 1], [0, 0, -1, 1], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1/100, 1/100, 1/100, -1/100], [-1/Cout, -2001/(100000*Cout), -1/(100000*Cout), 1/(100000*Cout)], [-1/10, -1/1000000, -1000001/1000000, 1000001/1000000], [1/10, 1/1000000, 1000001/1000000, -1000001/1000000]]', 'b': '[[0], [0], [-1], [1]]', 'c': '[[0, 0, -1, 0], [1, 0, -1, 1], [0, 0, -1, 1], [0, 0, 0, 0], [0, 1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '8', '0', '12'], 'net_list': [['Sa0', 'IN', '8'], ['Sb0', 'IN', 'OUT'], ['L0', 'OUT', '8'], ['C0', '0', '12'], ['C1', 'IN', '12']]}
has to be unconnected
['VIN - Sa - L - Sa - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - L - GND', 'VIN - Sa - Sb - Sa - GND', 'VOUT - Sb - Sa - GND', 'VOUT - Sa - Sa - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-Sa0']), ('Sa0', ['IN', 'N-L0-Sa0']), ('Sa1', ['IN', 'OUT']), ('Sa2', ['0', 'N-Sa2-Sb0']), ('Sb0', ['N-Sa2-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000002000/1000001, -1/100000100], [1/(1000001*Cout), -100101100551/(5000055000050*Cout)]]', 'b': '[[-10000/1000001], [10/(1000001*Cout)]]', 'c': '[[100000200000/1000001, 1/1000001], [0, 100000/100001], [100000/1000001, 1/1000001], [0, 0], [0, 1]]', 'd': '[[1000000/1000001], [0], [1000000/1000001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-3/275, -1/1100], [1/(11*Cout), -4645551/(5000050*Cout)]]', 'b': '[[-1/110], [10/(11*Cout)]]', 'c': '[[12/11, 1/11], [0, 1/100001], [1/11, 1/11], [0, 0], [0, 1]]', 'd': '[[10/11], [0], [10/11], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'Ra2', 'Rb2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '5', '12'], 'net_list': [['Sa0', '0', '5'], ['Sb0', '5', 'OUT'], ['L0', '0', '12'], ['Sa1', 'OUT', 'IN'], ['Sa2', 'IN', '12']]}
['VIN - Sa - L - Sa - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - L - GND', 'VIN - Sa - Sb - Sa - GND', 'VOUT - Sb - Sa - GND', 'VOUT - Sa - Sa - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-Sa0']), ('Sa0', ['IN', 'N-L0-Sa0']), ('Sa1', ['IN', 'OUT']), ('Sa2', ['0', 'N-Sa2-Sb0']), ('Sb0', ['N-Sa2-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000002000/1000001, -1/100000100], [1/(1000001*Cout), -100101100551/(5000055000050*Cout)]]', 'b': '[[-10000/1000001], [10/(1000001*Cout)]]', 'c': '[[100000200000/1000001, 1/1000001], [0, 100000/100001], [100000/1000001, 1/1000001], [0, 0], [0, 1]]', 'd': '[[1000000/1000001], [0], [1000000/1000001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-3/275, -1/1100], [1/(11*Cout), -4645551/(5000050*Cout)]]', 'b': '[[-1/110], [10/(11*Cout)]]', 'c': '[[12/11, 1/11], [0, 1/100001], [1/11, 1/11], [0, 0], [0, 1]]', 'd': '[[10/11], [0], [10/11], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'Ra2', 'Rb2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '5', '12'], 'net_list': [['Sa0', '0', '5'], ['Sb0', '5', 'OUT'], ['L0', '0', '12'], ['Sa1', 'OUT', 'IN'], ['Sa2', 'IN', '12']]}
['VIN - Sa - L - Sa - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - L - GND', 'VIN - Sa - Sb - Sa - GND', 'VOUT - Sb - Sa - GND', 'VOUT - Sa - Sa - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-Sa0']), ('Sa0', ['IN', 'N-L0-Sa0']), ('Sa1', ['IN', 'OUT']), ('Sa2', ['0', 'N-Sa2-Sb0']), ('Sb0', ['N-Sa2-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000002000/1000001, -1/100000100], [1/(1000001*Cout), -100101100551/(5000055000050*Cout)]]', 'b': '[[-10000/1000001], [10/(1000001*Cout)]]', 'c': '[[100000200000/1000001, 1/1000001], [0, 100000/100001], [100000/1000001, 1/1000001], [0, 0], [0, 1]]', 'd': '[[1000000/1000001], [0], [1000000/1000001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-3/275, -1/1100], [1/(11*Cout), -4645551/(5000050*Cout)]]', 'b': '[[-1/110], [10/(11*Cout)]]', 'c': '[[12/11, 1/11], [0, 1/100001], [1/11, 1/11], [0, 0], [0, 1]]', 'd': '[[10/11], [0], [10/11], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'Ra2', 'Rb2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '5', '12'], 'net_list': [['Sa0', '0', '5'], ['Sb0', '5', 'OUT'], ['L0', '0', '12'], ['Sa1', 'OUT', 'IN'], ['Sa2', 'IN', '12']]}
['VIN - Sa - L - Sa - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - L - GND', 'VIN - Sa - Sb - Sa - GND', 'VOUT - Sb - Sa - GND', 'VOUT - Sa - Sa - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-Sa0']), ('Sa0', ['IN', 'N-L0-Sa0']), ('Sa1', ['IN', 'OUT']), ('Sa2', ['0', 'N-Sa2-Sb0']), ('Sb0', ['N-Sa2-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000002000/1000001, -1/100000100], [1/(1000001*Cout), -100101100551/(5000055000050*Cout)]]', 'b': '[[-10000/1000001], [10/(1000001*Cout)]]', 'c': '[[100000200000/1000001, 1/1000001], [0, 100000/100001], [100000/1000001, 1/1000001], [0, 0], [0, 1]]', 'd': '[[1000000/1000001], [0], [1000000/1000001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-3/275, -1/1100], [1/(11*Cout), -4645551/(5000050*Cout)]]', 'b': '[[-1/110], [10/(11*Cout)]]', 'c': '[[12/11, 1/11], [0, 1/100001], [1/11, 1/11], [0, 0], [0, 1]]', 'd': '[[10/11], [0], [10/11], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'Ra2', 'Rb2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '5', '12'], 'net_list': [['Sa0', '0', '5'], ['Sb0', '5', 'OUT'], ['L0', '0', '12'], ['Sa1', 'OUT', 'IN'], ['Sa2', 'IN', '12']]}
['VIN - Sa - L - Sa - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - L - GND', 'VIN - Sa - Sb - Sa - GND', 'VOUT - Sb - Sa - GND', 'VOUT - Sa - Sa - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-Sa0']), ('Sa0', ['IN', 'N-L0-Sa0']), ('Sa1', ['IN', 'OUT']), ('Sa2', ['0', 'N-Sa2-Sb0']), ('Sb0', ['N-Sa2-Sb0', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000002000/1000001, -1/100000100], [1/(1000001*Cout), -100101100551/(5000055000050*Cout)]]', 'b': '[[-10000/1000001], [10/(1000001*Cout)]]', 'c': '[[100000200000/1000001, 1/1000001], [0, 100000/100001], [100000/1000001, 1/1000001], [0, 0], [0, 1]]', 'd': '[[1000000/1000001], [0], [1000000/1000001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_5(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-3/275, -1/1100], [1/(11*Cout), -4645551/(5000050*Cout)]]', 'b': '[[-1/110], [10/(11*Cout)]]', 'c': '[[12/11, 1/11], [0, 1/100001], [1/11, 1/11], [0, 0], [0, 1]]', 'd': '[[10/11], [0], [10/11], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'Ra2', 'Rb2'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '5', '12'], 'net_list': [['Sa0', '0', '5'], ['Sb0', '5', 'OUT'], ['L0', '0', '12'], ['Sa1', 'OUT', 'IN'], ['Sa2', 'IN', '12']]}
has to be unconnected
has to be unconnected
has to be unconnected
has to be unconnected
total action num is: 2 update:  2 by selecting:  0
<Synchronized wrapper for c_int(16)>
root offset is:  1
['VIN - Sb - VOUT', 'VIN - Sa - L - VOUT', 'VIN - Sb - L - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - L - C - GND', 'VIN - Sb - L - C - GND', 'VOUT - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'OUT']), ('L0', ['N-L0-Sa0-Sb0', 'OUT']), ('Sa0', ['IN', 'N-L0-Sa0-Sb0']), ('Sb0', ['IN', 'N-L0-Sa0-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-37117 violations

['VIN - Sb - VOUT', 'VIN - Sa - L - VOUT', 'VIN - Sb - L - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - L - C - GND', 'VIN - Sb - L - C - GND', 'VOUT - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'OUT']), ('L0', ['N-L0-Sa0-Sb0', 'OUT']), ('Sa0', ['IN', 'N-L0-Sa0-Sb0']), ('Sb0', ['IN', 'N-L0-Sa0-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sa - L - VOUT', 'VIN - Sb - L - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - L - C - GND', 'VIN - Sb - L - C - GND', 'VOUT - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'OUT']), ('L0', ['N-L0-Sa0-Sb0', 'OUT']), ('Sa0', ['IN', 'N-L0-Sa0-Sb0']), ('Sb0', ['IN', 'N-L0-Sa0-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sa - L - VOUT', 'VIN - Sb - L - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - L - C - GND', 'VIN - Sb - L - C - GND', 'VOUT - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'OUT']), ('L0', ['N-L0-Sa0-Sb0', 'OUT']), ('Sa0', ['IN', 'N-L0-Sa0-Sb0']), ('Sb0', ['IN', 'N-L0-Sa0-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - VOUT', 'VIN - Sa - L - VOUT', 'VIN - Sb - L - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - L - C - GND', 'VIN - Sb - L - C - GND', 'VOUT - C - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'OUT']), ('L0', ['N-L0-Sa0-Sb0', 'OUT']), ('Sa0', ['IN', 'N-L0-Sa0-Sb0']), ('Sb0', ['IN', 'N-L0-Sa0-Sb0']), ('Sb1', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
has to be unconnected
has to be unconnected
has to be unconnected
['VIN - C - VOUT', 'VIN - C - Sa - C - Sb - GND', 'VIN - C - Sa - C - Sa - GND', 'VOUT - Sa - C - Sb - GND', 'VOUT - Sa - C - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'OUT']), ('C1', ['N-C1-Sa0', 'N-C1-Sa1-Sb0']), ('Sa0', ['N-C1-Sa0', 'OUT']), ('Sa1', ['0', 'N-C1-Sa1-Sb0']), ('Sb0', ['0', 'N-C1-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_10(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100202104001/(10000200000*Cout), -100001/(10000200000*Cout), -10/Cout], [-100001/100002000000, -100001/100002000000, 0], [-1, 0, -1]]', 'b': '[[10/Cout], [0], [1]]', 'c': '[[1/100002, -100001/100002, 0], [1/100002, 1/100002, 0], [1, 0, 1], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_10(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-105200551/(10000050*Cout), -100001/(200001*Cout), -10/Cout], [-100001/2000010, -100001/2000010, 0], [-1, 0, -1]]', 'b': '[[10/Cout], [0], [1]]', 'c': '[[100000/200001, -100001/200001, 0], [100000/200001, 100000/200001, 0], [1, 0, 1], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '7', '10'], 'net_list': [['Sa0', '0', '7'], ['Sb0', '0', '7'], ['C0', '7', '10'], ['Sa1', 'OUT', '10'], ['C1', 'IN', 'OUT']]}
['VIN - C - VOUT', 'VIN - C - Sa - C - Sb - GND', 'VIN - C - Sa - C - Sa - GND', 'VOUT - Sa - C - Sb - GND', 'VOUT - Sa - C - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'OUT']), ('C1', ['N-C1-Sa0', 'N-C1-Sa1-Sb0']), ('Sa0', ['N-C1-Sa0', 'OUT']), ('Sa1', ['0', 'N-C1-Sa1-Sb0']), ('Sb0', ['0', 'N-C1-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_10(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100202104001/(10000200000*Cout), -100001/(10000200000*Cout), -10/Cout], [-100001/100002000000, -100001/100002000000, 0], [-1, 0, -1]]', 'b': '[[10/Cout], [0], [1]]', 'c': '[[1/100002, -100001/100002, 0], [1/100002, 1/100002, 0], [1, 0, 1], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_10(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-105200551/(10000050*Cout), -100001/(200001*Cout), -10/Cout], [-100001/2000010, -100001/2000010, 0], [-1, 0, -1]]', 'b': '[[10/Cout], [0], [1]]', 'c': '[[100000/200001, -100001/200001, 0], [100000/200001, 100000/200001, 0], [1, 0, 1], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '7', '10'], 'net_list': [['Sa0', '0', '7'], ['Sb0', '0', '7'], ['C0', '7', '10'], ['Sa1', 'OUT', '10'], ['C1', 'IN', 'OUT']]}
['VIN - C - VOUT', 'VIN - C - Sa - C - Sb - GND', 'VIN - C - Sa - C - Sa - GND', 'VOUT - Sa - C - Sb - GND', 'VOUT - Sa - C - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'OUT']), ('C1', ['N-C1-Sa0', 'N-C1-Sa1-Sb0']), ('Sa0', ['N-C1-Sa0', 'OUT']), ('Sa1', ['0', 'N-C1-Sa1-Sb0']), ('Sb0', ['0', 'N-C1-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_10(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100202104001/(10000200000*Cout), -100001/(10000200000*Cout), -10/Cout], [-100001/100002000000, -100001/100002000000, 0], [-1, 0, -1]]', 'b': '[[10/Cout], [0], [1]]', 'c': '[[1/100002, -100001/100002, 0], [1/100002, 1/100002, 0], [1, 0, 1], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_10(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-105200551/(10000050*Cout), -100001/(200001*Cout), -10/Cout], [-100001/2000010, -100001/2000010, 0], [-1, 0, -1]]', 'b': '[[10/Cout], [0], [1]]', 'c': '[[100000/200001, -100001/200001, 0], [100000/200001, 100000/200001, 0], [1, 0, 1], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '7', '10'], 'net_list': [['Sa0', '0', '7'], ['Sb0', '0', '7'], ['C0', '7', '10'], ['Sa1', 'OUT', '10'], ['C1', 'IN', 'OUT']]}
['VIN - C - VOUT', 'VIN - C - Sa - C - Sb - GND', 'VIN - C - Sa - C - Sa - GND', 'VOUT - Sa - C - Sb - GND', 'VOUT - Sa - C - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'OUT']), ('C1', ['N-C1-Sa0', 'N-C1-Sa1-Sb0']), ('Sa0', ['N-C1-Sa0', 'OUT']), ('Sa1', ['0', 'N-C1-Sa1-Sb0']), ('Sb0', ['0', 'N-C1-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_10(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100202104001/(10000200000*Cout), -100001/(10000200000*Cout), -10/Cout], [-100001/100002000000, -100001/100002000000, 0], [-1, 0, -1]]', 'b': '[[10/Cout], [0], [1]]', 'c': '[[1/100002, -100001/100002, 0], [1/100002, 1/100002, 0], [1, 0, 1], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_10(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-105200551/(10000050*Cout), -100001/(200001*Cout), -10/Cout], [-100001/2000010, -100001/2000010, 0], [-1, 0, -1]]', 'b': '[[10/Cout], [0], [1]]', 'c': '[[100000/200001, -100001/200001, 0], [100000/200001, 100000/200001, 0], [1, 0, 1], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '7', '10'], 'net_list': [['Sa0', '0', '7'], ['Sb0', '0', '7'], ['C0', '7', '10'], ['Sa1', 'OUT', '10'], ['C1', 'IN', 'OUT']]}
['VIN - C - VOUT', 'VIN - C - Sa - C - Sb - GND', 'VIN - C - Sa - C - Sa - GND', 'VOUT - Sa - C - Sb - GND', 'VOUT - Sa - C - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'OUT']), ('C1', ['N-C1-Sa0', 'N-C1-Sa1-Sb0']), ('Sa0', ['N-C1-Sa0', 'OUT']), ('Sa1', ['0', 'N-C1-Sa1-Sb0']), ('Sb0', ['0', 'N-C1-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_10(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100202104001/(10000200000*Cout), -100001/(10000200000*Cout), -10/Cout], [-100001/100002000000, -100001/100002000000, 0], [-1, 0, -1]]', 'b': '[[10/Cout], [0], [1]]', 'c': '[[1/100002, -100001/100002, 0], [1/100002, 1/100002, 0], [1, 0, 1], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'B state': {'x': '[[v_Cout(t)], [v_C0(t)], [v_C1(t)]]', 'y': '[[v_10(t)], [v_7(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-105200551/(10000050*Cout), -100001/(200001*Cout), -10/Cout], [-100001/2000010, -100001/2000010, 0], [-1, 0, -1]]', 'b': '[[10/Cout], [0], [1]]', 'c': '[[100000/200001, -100001/200001, 0], [100000/200001, 100000/200001, 0], [1, 0, 1], [0, 0, 0], [1, 0, 0]]', 'd': '[[0], [0], [0], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1', 'C1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '7', '10'], 'net_list': [['Sa0', '0', '7'], ['Sb0', '0', '7'], ['C0', '7', '10'], ['Sa1', 'OUT', '10'], ['C1', 'IN', 'OUT']]}
has to be unconnected
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - L - C - GND', 'VIN - L - Sa - GND', 'VOUT - Sb - L - C - GND', 'VOUT - Sb - L - Sa - GND', 'VOUT - Sa - L - C - GND', 'VOUT - Sa - L - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-L0-Sa0']), ('L0', ['IN', 'N-C0-L0-Sa0']), ('Sa0', ['0', 'N-C0-L0-Sa0']), ('Sa1', ['IN', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1100001, 100001/110000100, 1/100], [-100001/(1100001*Cout), -51100501/(55000050*Cout), 0], [-1/10, 0, -1/1000000]]', 'b': '[[10000/1100001], [1000010/(1100001*Cout)], [0]]', 'c': '[[0, 0, -1], [-100000/1100001, 100001/1100001, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [1000000/1100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1100001, 100001/110000100, 1/100], [-100001/(1100001*Cout), -51100501/(55000050*Cout), 0], [-1/10, 0, -1/10]]', 'b': '[[10000/1100001], [1000010/(1100001*Cout)], [0]]', 'c': '[[0, 0, -1], [-100000/1100001, 100001/1100001, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [1000000/1100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['L0', 'IN', '12'], ['C0', '0', '12'], ['Sa1', '0', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - L - C - GND', 'VIN - L - Sa - GND', 'VOUT - Sb - L - C - GND', 'VOUT - Sb - L - Sa - GND', 'VOUT - Sa - L - C - GND', 'VOUT - Sa - L - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-L0-Sa0']), ('L0', ['IN', 'N-C0-L0-Sa0']), ('Sa0', ['0', 'N-C0-L0-Sa0']), ('Sa1', ['IN', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1100001, 100001/110000100, 1/100], [-100001/(1100001*Cout), -51100501/(55000050*Cout), 0], [-1/10, 0, -1/1000000]]', 'b': '[[10000/1100001], [1000010/(1100001*Cout)], [0]]', 'c': '[[0, 0, -1], [-100000/1100001, 100001/1100001, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [1000000/1100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1100001, 100001/110000100, 1/100], [-100001/(1100001*Cout), -51100501/(55000050*Cout), 0], [-1/10, 0, -1/10]]', 'b': '[[10000/1100001], [1000010/(1100001*Cout)], [0]]', 'c': '[[0, 0, -1], [-100000/1100001, 100001/1100001, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [1000000/1100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['L0', 'IN', '12'], ['C0', '0', '12'], ['Sa1', '0', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - L - C - GND', 'VIN - L - Sa - GND', 'VOUT - Sb - L - C - GND', 'VOUT - Sb - L - Sa - GND', 'VOUT - Sa - L - C - GND', 'VOUT - Sa - L - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-L0-Sa0']), ('L0', ['IN', 'N-C0-L0-Sa0']), ('Sa0', ['0', 'N-C0-L0-Sa0']), ('Sa1', ['IN', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1100001, 100001/110000100, 1/100], [-100001/(1100001*Cout), -51100501/(55000050*Cout), 0], [-1/10, 0, -1/1000000]]', 'b': '[[10000/1100001], [1000010/(1100001*Cout)], [0]]', 'c': '[[0, 0, -1], [-100000/1100001, 100001/1100001, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [1000000/1100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1100001, 100001/110000100, 1/100], [-100001/(1100001*Cout), -51100501/(55000050*Cout), 0], [-1/10, 0, -1/10]]', 'b': '[[10000/1100001], [1000010/(1100001*Cout)], [0]]', 'c': '[[0, 0, -1], [-100000/1100001, 100001/1100001, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [1000000/1100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['L0', 'IN', '12'], ['C0', '0', '12'], ['Sa1', '0', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - L - C - GND', 'VIN - L - Sa - GND', 'VOUT - Sb - L - C - GND', 'VOUT - Sb - L - Sa - GND', 'VOUT - Sa - L - C - GND', 'VOUT - Sa - L - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-L0-Sa0']), ('L0', ['IN', 'N-C0-L0-Sa0']), ('Sa0', ['0', 'N-C0-L0-Sa0']), ('Sa1', ['IN', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1100001, 100001/110000100, 1/100], [-100001/(1100001*Cout), -51100501/(55000050*Cout), 0], [-1/10, 0, -1/1000000]]', 'b': '[[10000/1100001], [1000010/(1100001*Cout)], [0]]', 'c': '[[0, 0, -1], [-100000/1100001, 100001/1100001, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [1000000/1100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1100001, 100001/110000100, 1/100], [-100001/(1100001*Cout), -51100501/(55000050*Cout), 0], [-1/10, 0, -1/10]]', 'b': '[[10000/1100001], [1000010/(1100001*Cout)], [0]]', 'c': '[[0, 0, -1], [-100000/1100001, 100001/1100001, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [1000000/1100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['L0', 'IN', '12'], ['C0', '0', '12'], ['Sa1', '0', '12']]}
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - L - C - GND', 'VIN - L - Sa - GND', 'VOUT - Sb - L - C - GND', 'VOUT - Sb - L - Sa - GND', 'VOUT - Sa - L - C - GND', 'VOUT - Sa - L - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['0', 'N-C0-L0-Sa0']), ('L0', ['IN', 'N-C0-L0-Sa0']), ('Sa0', ['0', 'N-C0-L0-Sa0']), ('Sa1', ['IN', 'OUT']), ('Sb0', ['IN', 'OUT'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1100001, 100001/110000100, 1/100], [-100001/(1100001*Cout), -51100501/(55000050*Cout), 0], [-1/10, 0, -1/1000000]]', 'b': '[[10000/1100001], [1000010/(1100001*Cout)], [0]]', 'c': '[[0, 0, -1], [-100000/1100001, 100001/1100001, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [1000000/1100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1000/1100001, 100001/110000100, 1/100], [-100001/(1100001*Cout), -51100501/(55000050*Cout), 0], [-1/10, 0, -1/10]]', 'b': '[[10000/1100001], [1000010/(1100001*Cout)], [0]]', 'c': '[[0, 0, -1], [-100000/1100001, 100001/1100001, 0], [0, 0, 0], [0, 1, 0]]', 'd': '[[0], [1000000/1100001], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '0'], 'net_list': [['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['L0', 'IN', '12'], ['C0', '0', '12'], ['Sa1', '0', '12']]}
has to be unconnected
has to be unconnected
has to be unconnected
has to be unconnected
has to be unconnected
total action num is: 2 update:  2 by selecting:  1
<Synchronized wrapper for c_int(6)>
root offset is:  1
['VIN - C - L - VOUT', 'VIN - C - Sa - Sb - GND', 'VIN - C - Sa - Sa - GND', 'VOUT - L - Sa - Sb - GND', 'VOUT - L - Sa - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-L0-Sa1']), ('L0', ['N-C0-L0-Sa1', 'OUT']), ('Sa0', ['0', 'N-Sa0-Sa1-Sb0']), ('Sa1', ['N-C0-L0-Sa1', 'N-Sa0-Sa1-Sb0']), ('Sb0', ['0', 'N-Sa0-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100002000/100002100001, 1/100, 1000020000/100002100001], [-1/Cout, -1/(50*Cout), 0], [-10000200000/100002100001, 0, -100001/100002100001]]', 'b': '[[-1000020000/100002100001], [0], [100001/100002100001]]', 'c': '[[10000200000/100002100001, 0, -100002000000/100002100001], [100000/100002100001, 0, -1000000/100002100001], [10000200000/100002100001, 0, 100001/100002100001], [0, 0, 0], [0, 1, 0]]', 'd': '[[100002000000/100002100001], [1000000/100002100001], [100002000000/100002100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-200001/210001100, 1/100, 200001/21000110], [-1/Cout, -1/(50*Cout), 0], [-200001/2100011, 0, -100001/2100011]]', 'b': '[[-200001/21000110], [0], [100001/2100011]]', 'c': '[[200001/2100011, 0, -2000010/2100011], [100000/2100011, 0, -1000000/2100011], [200001/2100011, 0, 100001/2100011], [0, 0, 0], [0, 1, 0]]', 'd': '[[2000010/2100011], [1000000/2100011], [2000010/2100011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '10', '0'], 'net_list': [['Sa0', '12', '10'], ['Sb0', '0', '12'], ['L0', 'OUT', '10'], ['C0', 'IN', '10'], ['Sa1', '0', '12']]}
['VIN - C - L - VOUT', 'VIN - C - Sa - Sb - GND', 'VIN - C - Sa - Sa - GND', 'VOUT - L - Sa - Sb - GND', 'VOUT - L - Sa - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-L0-Sa1']), ('L0', ['N-C0-L0-Sa1', 'OUT']), ('Sa0', ['0', 'N-Sa0-Sa1-Sb0']), ('Sa1', ['N-C0-L0-Sa1', 'N-Sa0-Sa1-Sb0']), ('Sb0', ['0', 'N-Sa0-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100002000/100002100001, 1/100, 1000020000/100002100001], [-1/Cout, -1/(50*Cout), 0], [-10000200000/100002100001, 0, -100001/100002100001]]', 'b': '[[-1000020000/100002100001], [0], [100001/100002100001]]', 'c': '[[10000200000/100002100001, 0, -100002000000/100002100001], [100000/100002100001, 0, -1000000/100002100001], [10000200000/100002100001, 0, 100001/100002100001], [0, 0, 0], [0, 1, 0]]', 'd': '[[100002000000/100002100001], [1000000/100002100001], [100002000000/100002100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-200001/210001100, 1/100, 200001/21000110], [-1/Cout, -1/(50*Cout), 0], [-200001/2100011, 0, -100001/2100011]]', 'b': '[[-200001/21000110], [0], [100001/2100011]]', 'c': '[[200001/2100011, 0, -2000010/2100011], [100000/2100011, 0, -1000000/2100011], [200001/2100011, 0, 100001/2100011], [0, 0, 0], [0, 1, 0]]', 'd': '[[2000010/2100011], [1000000/2100011], [2000010/2100011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '10', '0'], 'net_list': [['Sa0', '12', '10'], ['Sb0', '0', '12'], ['L0', 'OUT', '10'], ['C0', 'IN', '10'], ['Sa1', '0', '12']]}
['VIN - C - L - VOUT', 'VIN - C - Sa - Sb - GND', 'VIN - C - Sa - Sa - GND', 'VOUT - L - Sa - Sb - GND', 'VOUT - L - Sa - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-L0-Sa1']), ('L0', ['N-C0-L0-Sa1', 'OUT']), ('Sa0', ['0', 'N-Sa0-Sa1-Sb0']), ('Sa1', ['N-C0-L0-Sa1', 'N-Sa0-Sa1-Sb0']), ('Sb0', ['0', 'N-Sa0-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100002000/100002100001, 1/100, 1000020000/100002100001], [-1/Cout, -1/(50*Cout), 0], [-10000200000/100002100001, 0, -100001/100002100001]]', 'b': '[[-1000020000/100002100001], [0], [100001/100002100001]]', 'c': '[[10000200000/100002100001, 0, -100002000000/100002100001], [100000/100002100001, 0, -1000000/100002100001], [10000200000/100002100001, 0, 100001/100002100001], [0, 0, 0], [0, 1, 0]]', 'd': '[[100002000000/100002100001], [1000000/100002100001], [100002000000/100002100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-200001/210001100, 1/100, 200001/21000110], [-1/Cout, -1/(50*Cout), 0], [-200001/2100011, 0, -100001/2100011]]', 'b': '[[-200001/21000110], [0], [100001/2100011]]', 'c': '[[200001/2100011, 0, -2000010/2100011], [100000/2100011, 0, -1000000/2100011], [200001/2100011, 0, 100001/2100011], [0, 0, 0], [0, 1, 0]]', 'd': '[[2000010/2100011], [1000000/2100011], [2000010/2100011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '10', '0'], 'net_list': [['Sa0', '12', '10'], ['Sb0', '0', '12'], ['L0', 'OUT', '10'], ['C0', 'IN', '10'], ['Sa1', '0', '12']]}
['VIN - C - L - VOUT', 'VIN - C - Sa - Sb - GND', 'VIN - C - Sa - Sa - GND', 'VOUT - L - Sa - Sb - GND', 'VOUT - L - Sa - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-L0-Sa1']), ('L0', ['N-C0-L0-Sa1', 'OUT']), ('Sa0', ['0', 'N-Sa0-Sa1-Sb0']), ('Sa1', ['N-C0-L0-Sa1', 'N-Sa0-Sa1-Sb0']), ('Sb0', ['0', 'N-Sa0-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100002000/100002100001, 1/100, 1000020000/100002100001], [-1/Cout, -1/(50*Cout), 0], [-10000200000/100002100001, 0, -100001/100002100001]]', 'b': '[[-1000020000/100002100001], [0], [100001/100002100001]]', 'c': '[[10000200000/100002100001, 0, -100002000000/100002100001], [100000/100002100001, 0, -1000000/100002100001], [10000200000/100002100001, 0, 100001/100002100001], [0, 0, 0], [0, 1, 0]]', 'd': '[[100002000000/100002100001], [1000000/100002100001], [100002000000/100002100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-200001/210001100, 1/100, 200001/21000110], [-1/Cout, -1/(50*Cout), 0], [-200001/2100011, 0, -100001/2100011]]', 'b': '[[-200001/21000110], [0], [100001/2100011]]', 'c': '[[200001/2100011, 0, -2000010/2100011], [100000/2100011, 0, -1000000/2100011], [200001/2100011, 0, 100001/2100011], [0, 0, 0], [0, 1, 0]]', 'd': '[[2000010/2100011], [1000000/2100011], [2000010/2100011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '10', '0'], 'net_list': [['Sa0', '12', '10'], ['Sb0', '0', '12'], ['L0', 'OUT', '10'], ['C0', 'IN', '10'], ['Sa1', '0', '12']]}
['VIN - C - L - VOUT', 'VIN - C - Sa - Sb - GND', 'VIN - C - Sa - Sa - GND', 'VOUT - L - Sa - Sb - GND', 'VOUT - L - Sa - Sa - GND']

 PCC-37117
1
OrderedDict([('C0', ['IN', 'N-C0-L0-Sa1']), ('L0', ['N-C0-L0-Sa1', 'OUT']), ('Sa0', ['0', 'N-Sa0-Sa1-Sb0']), ('Sa1', ['N-C0-L0-Sa1', 'N-Sa0-Sa1-Sb0']), ('Sb0', ['0', 'N-Sa0-Sa1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100002000/100002100001, 1/100, 1000020000/100002100001], [-1/Cout, -1/(50*Cout), 0], [-10000200000/100002100001, 0, -100001/100002100001]]', 'b': '[[-1000020000/100002100001], [0], [100001/100002100001]]', 'c': '[[10000200000/100002100001, 0, -100002000000/100002100001], [100000/100002100001, 0, -1000000/100002100001], [10000200000/100002100001, 0, 100001/100002100001], [0, 0, 0], [0, 1, 0]]', 'd': '[[100002000000/100002100001], [1000000/100002100001], [100002000000/100002100001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)], [v_C0(t)]]', 'y': '[[v_10(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-200001/210001100, 1/100, 200001/21000110], [-1/Cout, -1/(50*Cout), 0], [-200001/2100011, 0, -100001/2100011]]', 'b': '[[-200001/21000110], [0], [100001/2100011]]', 'c': '[[200001/2100011, 0, -2000010/2100011], [100000/2100011, 0, -1000000/2100011], [200001/2100011, 0, 100001/2100011], [0, 0, 0], [0, 1, 0]]', 'd': '[[2000010/2100011], [1000000/2100011], [2000010/2100011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '12', '10', '0'], 'net_list': [['Sa0', '12', '10'], ['Sb0', '0', '12'], ['L0', 'OUT', '10'], ['C0', 'IN', '10'], ['Sa1', '0', '12']]}
has to be unconnected
['VIN - Sb - Sa - L - L - VOUT', 'VIN - L - L - VOUT', 'VIN - Sb - Sa - GND', 'VIN - L - L - GND', 'VOUT - L - L - Sb - Sa - GND', 'VOUT - L - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-L1-L2']), ('L1', ['N-L0-L1-L2', 'OUT']), ('L2', ['IN', 'N-L0-L1-L2']), ('Sa0', ['0', 'N-Sa0-Sb0']), ('Sb0', ['IN', 'N-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
PCC-37117 violations

['VIN - Sb - Sa - L - L - VOUT', 'VIN - L - L - VOUT', 'VIN - Sb - Sa - GND', 'VIN - L - L - GND', 'VOUT - L - L - Sb - Sa - GND', 'VOUT - L - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-L1-L2']), ('L1', ['N-L0-L1-L2', 'OUT']), ('L2', ['IN', 'N-L0-L1-L2']), ('Sa0', ['0', 'N-Sa0-Sb0']), ('Sb0', ['IN', 'N-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - Sa - L - L - VOUT', 'VIN - L - L - VOUT', 'VIN - Sb - Sa - GND', 'VIN - L - L - GND', 'VOUT - L - L - Sb - Sa - GND', 'VOUT - L - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-L1-L2']), ('L1', ['N-L0-L1-L2', 'OUT']), ('L2', ['IN', 'N-L0-L1-L2']), ('Sa0', ['0', 'N-Sa0-Sb0']), ('Sb0', ['IN', 'N-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - Sa - L - L - VOUT', 'VIN - L - L - VOUT', 'VIN - Sb - Sa - GND', 'VIN - L - L - GND', 'VOUT - L - L - Sb - Sa - GND', 'VOUT - L - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-L1-L2']), ('L1', ['N-L0-L1-L2', 'OUT']), ('L2', ['IN', 'N-L0-L1-L2']), ('Sa0', ['0', 'N-Sa0-Sb0']), ('Sb0', ['IN', 'N-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
['VIN - Sb - Sa - L - L - VOUT', 'VIN - L - L - VOUT', 'VIN - Sb - Sa - GND', 'VIN - L - L - GND', 'VOUT - L - L - Sb - Sa - GND', 'VOUT - L - L - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-L1-L2']), ('L1', ['N-L0-L1-L2', 'OUT']), ('L2', ['IN', 'N-L0-L1-L2']), ('Sa0', ['0', 'N-Sa0-Sb0']), ('Sb0', ['IN', 'N-Sa0-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
has to be unconnected
has to be unconnected
total action num is: 2 update:  2 by selecting:  1
<Synchronized wrapper for c_int(3)>
root offset is:  1
['VIN - Sb - Sa - L - Sb - VOUT', 'VIN - Sa - Sb - VOUT', 'VIN - Sb - Sa - GND', 'VIN - Sa - L - GND', 'VOUT - Sb - L - GND', 'VOUT - Sb - Sa - Sb - Sa - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-Sa0-Sb0']), ('Sa0', ['IN', 'N-L0-Sa0-Sb0']), ('Sa1', ['0', 'N-Sa1-Sb1']), ('Sb0', ['N-L0-Sa0-Sb0', 'OUT']), ('Sb1', ['IN', 'N-Sa1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_6(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001200001/10000220001200, -100001200001/10000220001200], [100001200001/(100002200012*Cout), -50026100281/(2500055000300*Cout)]]', 'b': '[[-1/10000120], [5/(500006*Cout)]]', 'c': '[[100001200001/100002200012, 100001200001/100002200012], [25000/25000550003, 25000/25000550003], [1/1000012, 1/1000012], [0, 0], [0, 1]]', 'd': '[[5/500006], [250000/250003], [500005/500006], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_6(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-275003000/25000550003, -275003/2500055000300], [275003/(25000550003*Cout), -50026100281/(2500055000300*Cout)]]', 'b': '[[-2500/250003], [5/(500006*Cout)]]', 'c': '[[27500300000/25000550003, 275003/25000550003], [25000/25000550003, 1/100002200012], [25000/250003, 1/1000012], [0, 0], [0, 1]]', 'd': '[[250000/250003], [5/500006], [500005/500006], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '6', '12'], 'net_list': [['Sa0', '0', '6'], ['Sb0', 'IN', '6'], ['L0', '0', '12'], ['Sa1', 'IN', '12'], ['Sb1', 'OUT', '12']]}
['VIN - Sb - Sa - L - Sb - VOUT', 'VIN - Sa - Sb - VOUT', 'VIN - Sb - Sa - GND', 'VIN - Sa - L - GND', 'VOUT - Sb - L - GND', 'VOUT - Sb - Sa - Sb - Sa - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-Sa0-Sb0']), ('Sa0', ['IN', 'N-L0-Sa0-Sb0']), ('Sa1', ['0', 'N-Sa1-Sb1']), ('Sb0', ['N-L0-Sa0-Sb0', 'OUT']), ('Sb1', ['IN', 'N-Sa1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_6(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001200001/10000220001200, -100001200001/10000220001200], [100001200001/(100002200012*Cout), -50026100281/(2500055000300*Cout)]]', 'b': '[[-1/10000120], [5/(500006*Cout)]]', 'c': '[[100001200001/100002200012, 100001200001/100002200012], [25000/25000550003, 25000/25000550003], [1/1000012, 1/1000012], [0, 0], [0, 1]]', 'd': '[[5/500006], [250000/250003], [500005/500006], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_6(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-275003000/25000550003, -275003/2500055000300], [275003/(25000550003*Cout), -50026100281/(2500055000300*Cout)]]', 'b': '[[-2500/250003], [5/(500006*Cout)]]', 'c': '[[27500300000/25000550003, 275003/25000550003], [25000/25000550003, 1/100002200012], [25000/250003, 1/1000012], [0, 0], [0, 1]]', 'd': '[[250000/250003], [5/500006], [500005/500006], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '6', '12'], 'net_list': [['Sa0', '0', '6'], ['Sb0', 'IN', '6'], ['L0', '0', '12'], ['Sa1', 'IN', '12'], ['Sb1', 'OUT', '12']]}
['VIN - Sb - Sa - L - Sb - VOUT', 'VIN - Sa - Sb - VOUT', 'VIN - Sb - Sa - GND', 'VIN - Sa - L - GND', 'VOUT - Sb - L - GND', 'VOUT - Sb - Sa - Sb - Sa - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-Sa0-Sb0']), ('Sa0', ['IN', 'N-L0-Sa0-Sb0']), ('Sa1', ['0', 'N-Sa1-Sb1']), ('Sb0', ['N-L0-Sa0-Sb0', 'OUT']), ('Sb1', ['IN', 'N-Sa1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_6(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001200001/10000220001200, -100001200001/10000220001200], [100001200001/(100002200012*Cout), -50026100281/(2500055000300*Cout)]]', 'b': '[[-1/10000120], [5/(500006*Cout)]]', 'c': '[[100001200001/100002200012, 100001200001/100002200012], [25000/25000550003, 25000/25000550003], [1/1000012, 1/1000012], [0, 0], [0, 1]]', 'd': '[[5/500006], [250000/250003], [500005/500006], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_6(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-275003000/25000550003, -275003/2500055000300], [275003/(25000550003*Cout), -50026100281/(2500055000300*Cout)]]', 'b': '[[-2500/250003], [5/(500006*Cout)]]', 'c': '[[27500300000/25000550003, 275003/25000550003], [25000/25000550003, 1/100002200012], [25000/250003, 1/1000012], [0, 0], [0, 1]]', 'd': '[[250000/250003], [5/500006], [500005/500006], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '6', '12'], 'net_list': [['Sa0', '0', '6'], ['Sb0', 'IN', '6'], ['L0', '0', '12'], ['Sa1', 'IN', '12'], ['Sb1', 'OUT', '12']]}
['VIN - Sb - Sa - L - Sb - VOUT', 'VIN - Sa - Sb - VOUT', 'VIN - Sb - Sa - GND', 'VIN - Sa - L - GND', 'VOUT - Sb - L - GND', 'VOUT - Sb - Sa - Sb - Sa - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-Sa0-Sb0']), ('Sa0', ['IN', 'N-L0-Sa0-Sb0']), ('Sa1', ['0', 'N-Sa1-Sb1']), ('Sb0', ['N-L0-Sa0-Sb0', 'OUT']), ('Sb1', ['IN', 'N-Sa1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_6(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001200001/10000220001200, -100001200001/10000220001200], [100001200001/(100002200012*Cout), -50026100281/(2500055000300*Cout)]]', 'b': '[[-1/10000120], [5/(500006*Cout)]]', 'c': '[[100001200001/100002200012, 100001200001/100002200012], [25000/25000550003, 25000/25000550003], [1/1000012, 1/1000012], [0, 0], [0, 1]]', 'd': '[[5/500006], [250000/250003], [500005/500006], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_6(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-275003000/25000550003, -275003/2500055000300], [275003/(25000550003*Cout), -50026100281/(2500055000300*Cout)]]', 'b': '[[-2500/250003], [5/(500006*Cout)]]', 'c': '[[27500300000/25000550003, 275003/25000550003], [25000/25000550003, 1/100002200012], [25000/250003, 1/1000012], [0, 0], [0, 1]]', 'd': '[[250000/250003], [5/500006], [500005/500006], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '6', '12'], 'net_list': [['Sa0', '0', '6'], ['Sb0', 'IN', '6'], ['L0', '0', '12'], ['Sa1', 'IN', '12'], ['Sb1', 'OUT', '12']]}
['VIN - Sb - Sa - L - Sb - VOUT', 'VIN - Sa - Sb - VOUT', 'VIN - Sb - Sa - GND', 'VIN - Sa - L - GND', 'VOUT - Sb - L - GND', 'VOUT - Sb - Sa - Sb - Sa - GND']

 PCC-37117
1
OrderedDict([('L0', ['0', 'N-L0-Sa0-Sb0']), ('Sa0', ['IN', 'N-L0-Sa0-Sb0']), ('Sa1', ['0', 'N-Sa1-Sb1']), ('Sb0', ['N-L0-Sa0-Sb0', 'OUT']), ('Sb1', ['IN', 'N-Sa1-Sb1'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_6(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-100001200001/10000220001200, -100001200001/10000220001200], [100001200001/(100002200012*Cout), -50026100281/(2500055000300*Cout)]]', 'b': '[[-1/10000120], [5/(500006*Cout)]]', 'c': '[[100001200001/100002200012, 100001200001/100002200012], [25000/25000550003, 25000/25000550003], [1/1000012, 1/1000012], [0, 0], [0, 1]]', 'd': '[[5/500006], [250000/250003], [500005/500006], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_6(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-275003000/25000550003, -275003/2500055000300], [275003/(25000550003*Cout), -50026100281/(2500055000300*Cout)]]', 'b': '[[-2500/250003], [5/(500006*Cout)]]', 'c': '[[27500300000/25000550003, 275003/25000550003], [25000/25000550003, 1/100002200012], [25000/250003, 1/1000012], [0, 0], [0, 1]]', 'd': '[[250000/250003], [5/500006], [500005/500006], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1'], 'node_list': ['IN', 'OUT', 'IN_exact', '0', '6', '12'], 'net_list': [['Sa0', '0', '6'], ['Sb0', 'IN', '6'], ['L0', '0', '12'], ['Sa1', 'IN', '12'], ['Sb1', 'OUT', '12']]}
['VIN - Sb - L - VOUT', 'VIN - Sa - VOUT', 'VIN - L - Sa - GND', 'VOUT - Sa - L - Sa - GND', 'VOUT - L - Sb - L - Sa - GND']

 PCC-37117
1
OrderedDict([('L0', ['IN', 'N-L0-Sa0']), ('L1', ['N-L1-Sb0', 'OUT']), ('Sa0', ['0', 'N-L0-Sa0']), ('Sa1', ['IN', 'OUT']), ('Sb0', ['IN', 'N-L1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/100000100, 1000/1000001, 10000/1000001], [1000/1000001, -1000002000/1000001, 1/100000100], [-1000000/(1000001*Cout), -1/(1000001*Cout), -1000501/(50000050*Cout)]]', 'b': '[[-10000/1000001], [10000/1000001], [10/(1000001*Cout)]]', 'c': '[[0, 100000, 0], [1100001/1000001, -100000/1000001, 1/1000001], [100000/1000001, -100000/1000001, 1/1000001], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [1000000/1000001], [1000000/1000001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/1100, 1/1100, 1/110], [1/1100, -3/275, 1/1100], [-10/(11*Cout), -1/(11*Cout), -511/(550*Cout)]]', 'b': '[[-1/110], [1/110], [10/(11*Cout)]]', 'c': '[[0, 1, 0], [1100001/11, -1/11, 1/11], [1/11, -1/11, 1/11], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [10/11], [10/11], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '8', '0', '12'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', 'IN', '8'], ['L0', 'OUT', '8'], ['Sa1', '0', '12'], ['L1', 'IN', '12']]}
['VIN - Sb - L - VOUT', 'VIN - Sa - VOUT', 'VIN - L - Sa - GND', 'VOUT - Sa - L - Sa - GND', 'VOUT - L - Sb - L - Sa - GND']

 PCC-37117
1
OrderedDict([('L0', ['IN', 'N-L0-Sa0']), ('L1', ['N-L1-Sb0', 'OUT']), ('Sa0', ['0', 'N-L0-Sa0']), ('Sa1', ['IN', 'OUT']), ('Sb0', ['IN', 'N-L1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/100000100, 1000/1000001, 10000/1000001], [1000/1000001, -1000002000/1000001, 1/100000100], [-1000000/(1000001*Cout), -1/(1000001*Cout), -1000501/(50000050*Cout)]]', 'b': '[[-10000/1000001], [10000/1000001], [10/(1000001*Cout)]]', 'c': '[[0, 100000, 0], [1100001/1000001, -100000/1000001, 1/1000001], [100000/1000001, -100000/1000001, 1/1000001], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [1000000/1000001], [1000000/1000001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/1100, 1/1100, 1/110], [1/1100, -3/275, 1/1100], [-10/(11*Cout), -1/(11*Cout), -511/(550*Cout)]]', 'b': '[[-1/110], [1/110], [10/(11*Cout)]]', 'c': '[[0, 1, 0], [1100001/11, -1/11, 1/11], [1/11, -1/11, 1/11], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [10/11], [10/11], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '8', '0', '12'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', 'IN', '8'], ['L0', 'OUT', '8'], ['Sa1', '0', '12'], ['L1', 'IN', '12']]}
['VIN - Sb - L - VOUT', 'VIN - Sa - VOUT', 'VIN - L - Sa - GND', 'VOUT - Sa - L - Sa - GND', 'VOUT - L - Sb - L - Sa - GND']

 PCC-37117
1
OrderedDict([('L0', ['IN', 'N-L0-Sa0']), ('L1', ['N-L1-Sb0', 'OUT']), ('Sa0', ['0', 'N-L0-Sa0']), ('Sa1', ['IN', 'OUT']), ('Sb0', ['IN', 'N-L1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/100000100, 1000/1000001, 10000/1000001], [1000/1000001, -1000002000/1000001, 1/100000100], [-1000000/(1000001*Cout), -1/(1000001*Cout), -1000501/(50000050*Cout)]]', 'b': '[[-10000/1000001], [10000/1000001], [10/(1000001*Cout)]]', 'c': '[[0, 100000, 0], [1100001/1000001, -100000/1000001, 1/1000001], [100000/1000001, -100000/1000001, 1/1000001], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [1000000/1000001], [1000000/1000001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/1100, 1/1100, 1/110], [1/1100, -3/275, 1/1100], [-10/(11*Cout), -1/(11*Cout), -511/(550*Cout)]]', 'b': '[[-1/110], [1/110], [10/(11*Cout)]]', 'c': '[[0, 1, 0], [1100001/11, -1/11, 1/11], [1/11, -1/11, 1/11], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [10/11], [10/11], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '8', '0', '12'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', 'IN', '8'], ['L0', 'OUT', '8'], ['Sa1', '0', '12'], ['L1', 'IN', '12']]}
['VIN - Sb - L - VOUT', 'VIN - Sa - VOUT', 'VIN - L - Sa - GND', 'VOUT - Sa - L - Sa - GND', 'VOUT - L - Sb - L - Sa - GND']

 PCC-37117
1
OrderedDict([('L0', ['IN', 'N-L0-Sa0']), ('L1', ['N-L1-Sb0', 'OUT']), ('Sa0', ['0', 'N-L0-Sa0']), ('Sa1', ['IN', 'OUT']), ('Sb0', ['IN', 'N-L1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/100000100, 1000/1000001, 10000/1000001], [1000/1000001, -1000002000/1000001, 1/100000100], [-1000000/(1000001*Cout), -1/(1000001*Cout), -1000501/(50000050*Cout)]]', 'b': '[[-10000/1000001], [10000/1000001], [10/(1000001*Cout)]]', 'c': '[[0, 100000, 0], [1100001/1000001, -100000/1000001, 1/1000001], [100000/1000001, -100000/1000001, 1/1000001], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [1000000/1000001], [1000000/1000001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/1100, 1/1100, 1/110], [1/1100, -3/275, 1/1100], [-10/(11*Cout), -1/(11*Cout), -511/(550*Cout)]]', 'b': '[[-1/110], [1/110], [10/(11*Cout)]]', 'c': '[[0, 1, 0], [1100001/11, -1/11, 1/11], [1/11, -1/11, 1/11], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [10/11], [10/11], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '8', '0', '12'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', 'IN', '8'], ['L0', 'OUT', '8'], ['Sa1', '0', '12'], ['L1', 'IN', '12']]}
['VIN - Sb - L - VOUT', 'VIN - Sa - VOUT', 'VIN - L - Sa - GND', 'VOUT - Sa - L - Sa - GND', 'VOUT - L - Sb - L - Sa - GND']

 PCC-37117
1
OrderedDict([('L0', ['IN', 'N-L0-Sa0']), ('L1', ['N-L1-Sb0', 'OUT']), ('Sa0', ['0', 'N-L0-Sa0']), ('Sa1', ['IN', 'OUT']), ('Sb0', ['IN', 'N-L1-Sb0'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/100000100, 1000/1000001, 10000/1000001], [1000/1000001, -1000002000/1000001, 1/100000100], [-1000000/(1000001*Cout), -1/(1000001*Cout), -1000501/(50000050*Cout)]]', 'b': '[[-10000/1000001], [10000/1000001], [10/(1000001*Cout)]]', 'c': '[[0, 100000, 0], [1100001/1000001, -100000/1000001, 1/1000001], [100000/1000001, -100000/1000001, 1/1000001], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [1000000/1000001], [1000000/1000001], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [i_L1(t)], [v_Cout(t)]]', 'y': '[[v_12(t)], [v_8(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100001/1100, 1/1100, 1/110], [1/1100, -3/275, 1/1100], [-10/(11*Cout), -1/(11*Cout), -511/(550*Cout)]]', 'b': '[[-1/110], [1/110], [10/(11*Cout)]]', 'c': '[[0, 1, 0], [1100001/11, -1/11, 1/11], [1/11, -1/11, 1/11], [0, 0, 0], [0, 0, 1]]', 'd': '[[0], [10/11], [10/11], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1', 'L1'], 'node_list': ['IN', 'OUT', 'IN_exact', '8', '0', '12'], 'net_list': [['Sa0', 'IN', 'OUT'], ['Sb0', 'IN', '8'], ['L0', 'OUT', '8'], ['Sa1', '0', '12'], ['L1', 'IN', '12']]}
['VIN - Sb - L - VOUT', 'VIN - Sa - Sb - Sb - GND', 'VOUT - L - Sb - Sa - Sb - Sb - GND']

 PCC-37117
1
OrderedDict([('L0', ['N-L0-Sb1', 'OUT']), ('Sa0', ['IN', 'N-Sa0-Sb0']), ('Sb0', ['N-Sa0-Sb0', 'N-Sb0-Sb2']), ('Sb1', ['IN', 'N-L0-Sb1']), ('Sb2', ['0', 'N-Sb0-Sb2'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.1], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_10(t)], [v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100023/100002100, 1/100], [-1/Cout, -1/(50*Cout)]]', 'b': '[[-50001/5000105], [0]]', 'c': '[[1100023/1000021, 0], [2/1000021, 0], [1/1000021, 0], [100002/1000021, 0], [0, 0], [0, 1]]', 'd': '[[1000020/1000021], [20/1000021], [10/1000021], [1000020/1000021], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_10(t)], [v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-200001300001/200001100, 1/100], [-1/Cout, -1/(50*Cout)]]', 'b': '[[-200001/20000110], [0]]', 'c': '[[200001300001/2000011, 0], [200000/2000011, 0], [100000/2000011, 0], [200001/2000011, 0], [0, 0], [0, 1]]', 'd': '[[2000010/2000011], [2000000/2000011], [1000000/2000011], [2000010/2000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'Rb2', 'Ra2'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '0', '12', '10'], 'net_list': [['Sa0', 'IN', '11'], ['Sb0', '0', '12'], ['L0', 'OUT', '10'], ['Sb1', 'IN', '10'], ['Sb2', '11', '12']]}
['VIN - Sb - L - VOUT', 'VIN - Sa - Sb - Sb - GND', 'VOUT - L - Sb - Sa - Sb - Sb - GND']

 PCC-37117
1
OrderedDict([('L0', ['N-L0-Sb1', 'OUT']), ('Sa0', ['IN', 'N-Sa0-Sb0']), ('Sb0', ['N-Sa0-Sb0', 'N-Sb0-Sb2']), ('Sb1', ['IN', 'N-L0-Sb1']), ('Sb2', ['0', 'N-Sb0-Sb2'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.3], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_10(t)], [v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100023/100002100, 1/100], [-1/Cout, -1/(50*Cout)]]', 'b': '[[-50001/5000105], [0]]', 'c': '[[1100023/1000021, 0], [2/1000021, 0], [1/1000021, 0], [100002/1000021, 0], [0, 0], [0, 1]]', 'd': '[[1000020/1000021], [20/1000021], [10/1000021], [1000020/1000021], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_10(t)], [v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-200001300001/200001100, 1/100], [-1/Cout, -1/(50*Cout)]]', 'b': '[[-200001/20000110], [0]]', 'c': '[[200001300001/2000011, 0], [200000/2000011, 0], [100000/2000011, 0], [200001/2000011, 0], [0, 0], [0, 1]]', 'd': '[[2000010/2000011], [2000000/2000011], [1000000/2000011], [2000010/2000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'Rb2', 'Ra2'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '0', '12', '10'], 'net_list': [['Sa0', 'IN', '11'], ['Sb0', '0', '12'], ['L0', 'OUT', '10'], ['Sb1', 'IN', '10'], ['Sb2', '11', '12']]}
['VIN - Sb - L - VOUT', 'VIN - Sa - Sb - Sb - GND', 'VOUT - L - Sb - Sa - Sb - Sb - GND']

 PCC-37117
1
OrderedDict([('L0', ['N-L0-Sb1', 'OUT']), ('Sa0', ['IN', 'N-Sa0-Sb0']), ('Sb0', ['N-Sa0-Sb0', 'N-Sb0-Sb2']), ('Sb1', ['IN', 'N-L0-Sb1']), ('Sb2', ['0', 'N-Sb0-Sb2'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.5], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_10(t)], [v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100023/100002100, 1/100], [-1/Cout, -1/(50*Cout)]]', 'b': '[[-50001/5000105], [0]]', 'c': '[[1100023/1000021, 0], [2/1000021, 0], [1/1000021, 0], [100002/1000021, 0], [0, 0], [0, 1]]', 'd': '[[1000020/1000021], [20/1000021], [10/1000021], [1000020/1000021], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_10(t)], [v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-200001300001/200001100, 1/100], [-1/Cout, -1/(50*Cout)]]', 'b': '[[-200001/20000110], [0]]', 'c': '[[200001300001/2000011, 0], [200000/2000011, 0], [100000/2000011, 0], [200001/2000011, 0], [0, 0], [0, 1]]', 'd': '[[2000010/2000011], [2000000/2000011], [1000000/2000011], [2000010/2000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'Rb2', 'Ra2'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '0', '12', '10'], 'net_list': [['Sa0', 'IN', '11'], ['Sb0', '0', '12'], ['L0', 'OUT', '10'], ['Sb1', 'IN', '10'], ['Sb2', '11', '12']]}
['VIN - Sb - L - VOUT', 'VIN - Sa - Sb - Sb - GND', 'VOUT - L - Sb - Sa - Sb - Sb - GND']

 PCC-37117
1
OrderedDict([('L0', ['N-L0-Sb1', 'OUT']), ('Sa0', ['IN', 'N-Sa0-Sb0']), ('Sb0', ['N-Sa0-Sb0', 'N-Sb0-Sb2']), ('Sb1', ['IN', 'N-L0-Sb1']), ('Sb2', ['0', 'N-Sb0-Sb2'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.7], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_10(t)], [v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100023/100002100, 1/100], [-1/Cout, -1/(50*Cout)]]', 'b': '[[-50001/5000105], [0]]', 'c': '[[1100023/1000021, 0], [2/1000021, 0], [1/1000021, 0], [100002/1000021, 0], [0, 0], [0, 1]]', 'd': '[[1000020/1000021], [20/1000021], [10/1000021], [1000020/1000021], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_10(t)], [v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-200001300001/200001100, 1/100], [-1/Cout, -1/(50*Cout)]]', 'b': '[[-200001/20000110], [0]]', 'c': '[[200001300001/2000011, 0], [200000/2000011, 0], [100000/2000011, 0], [200001/2000011, 0], [0, 0], [0, 1]]', 'd': '[[2000010/2000011], [2000000/2000011], [1000000/2000011], [2000010/2000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'Rb2', 'Ra2'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '0', '12', '10'], 'net_list': [['Sa0', 'IN', '11'], ['Sb0', '0', '12'], ['L0', 'OUT', '10'], ['Sb1', 'IN', '10'], ['Sb2', '11', '12']]}
['VIN - Sb - L - VOUT', 'VIN - Sa - Sb - Sb - GND', 'VOUT - L - Sb - Sa - Sb - Sb - GND']

 PCC-37117
1
OrderedDict([('L0', ['N-L0-Sb1', 'OUT']), ('Sa0', ['IN', 'N-Sa0-Sb0']), ('Sb0', ['N-Sa0-Sb0', 'N-Sb0-Sb2']), ('Sb1', ['IN', 'N-L0-Sb1']), ('Sb2', ['0', 'N-Sb0-Sb2'])])
{'Duty_Cycle': [0.1, 0.3, 0.5, 0.7, 0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
analytics parameter {'Duty_Cycle': [0.9], 'Frequency': [1], 'Rout': [50], 'Vin': [100], 'Cout': [10], 'Ra': [100000], 'Rb': [1], 'Rin': [0.1], 'C': [10], 'L': [100]}
debug exp {'A state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_10(t)], [v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-1100023/100002100, 1/100], [-1/Cout, -1/(50*Cout)]]', 'b': '[[-50001/5000105], [0]]', 'c': '[[1100023/1000021, 0], [2/1000021, 0], [1/1000021, 0], [100002/1000021, 0], [0, 0], [0, 1]]', 'd': '[[1000020/1000021], [20/1000021], [10/1000021], [1000020/1000021], [1], [0]]'}, 'B state': {'x': '[[i_L0(t)], [v_Cout(t)]]', 'y': '[[v_10(t)], [v_11(t)], [v_12(t)], [v_IN(t)], [v_IN_exact(t)], [v_OUT(t)]]', 'a': '[[-200001300001/200001100, 1/100], [-1/Cout, -1/(50*Cout)]]', 'b': '[[-200001/20000110], [0]]', 'c': '[[200001300001/2000011, 0], [200000/2000011, 0], [100000/2000011, 0], [200001/2000011, 0], [0, 0], [0, 1]]', 'd': '[[2000010/2000011], [2000000/2000011], [1000000/2000011], [2000010/2000011], [1], [0]]'}, 'device_list': ['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'Rb1', 'Ra1', 'Rb2', 'Ra2'], 'node_list': ['IN', 'OUT', 'IN_exact', '11', '0', '12', '10'], 'net_list': [['Sa0', 'IN', '11'], ['Sb0', '0', '12'], ['L0', 'OUT', '10'], ['Sb1', 'IN', '10'], ['Sb2', '11', '12']]}
total action num is: 2 update:  2 by selecting:  1
<Synchronized wrapper for c_int(1)>
root offset is:  1
total action num is: 2 update:  2 by selecting:  0
<Synchronized wrapper for c_int(1)>
root offset is:  1
has to be unconnected
total action num is: 2 update:  2 by selecting:  0
<Synchronized wrapper for c_int(1)>
root offset is:  1
has to be unconnected
total action num is: 5 update:  5 by selecting:  0
<Synchronized wrapper for c_int(1)>
root offset is:  1
has to be unconnected
total action num is: 5 update:  1 by selecting:  0
<Synchronized wrapper for c_int(1)>
root offset is:  1
has to be unconnected
total action num is: 3 update:  1 by selecting:  0
<Synchronized wrapper for c_int(1)>
root offset is:  1
has to be unconnected
total action num is: 7 update:  1 by selecting:  0
<Synchronized wrapper for c_int(1)>
root offset is:  1
has to be unconnected
total action num is: 6 update:  1 by selecting:  0
<Synchronized wrapper for c_int(1)>
root offset is:  1
has to be unconnected
total action num is: 3 update:  1 by selecting:  0
<Synchronized wrapper for c_int(1)>
root offset is:  1
has to be unconnected
total action num is: 3 update:  1 by selecting:  0
<Synchronized wrapper for c_int(1)>
root offset is:  1
has to be unconnected
total action num is: 2 update:  1 by selecting:  0
<Synchronized wrapper for c_int(1)>
root offset is:  1
has to be unconnected
total action num is: 1 update:  1 by selecting:  0
<Synchronized wrapper for c_int(1)>
root offset is:  1
has to be unconnected
has to be unconnected
total action num is: 1 update:  1 by selecting:  0
<Synchronized wrapper for c_int(1)>
has to be unconnected
root offset is:  1
has to be unconnected
has to be unconnected
rm: cannot remove 'PCC-*.cki': No such file or directory
rm: cannot remove 'PCC-*.simu': No such file or directory
rm: cannot remove 'PCC-*.simu': No such file or directory
1
[100, 42, 16, 6, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
current step is:  0
instant reward: 0 cumulate reward:  0 planning time: 78 cumulate planning time: 78
current step is:  1
instant reward: 0 cumulate reward:  0 planning time: 36 cumulate planning time: 114
current step is:  2
instant reward: 0 cumulate reward:  0 planning time: 13 cumulate planning time: 127
current step is:  3
instant reward: 0 cumulate reward:  0 planning time: 9 cumulate planning time: 136
current step is:  4
instant reward: 0 cumulate reward:  0 planning time: 12 cumulate planning time: 148
current step is:  5
instant reward: 0 cumulate reward:  0 planning time: 3 cumulate planning time: 151
current step is:  6
instant reward: 0 cumulate reward:  0 planning time: 3 cumulate planning time: 154
current step is:  7
instant reward: 0 cumulate reward:  0 planning time: 4 cumulate planning time: 158
current step is:  8
instant reward: 0 cumulate reward:  0 planning time: 3 cumulate planning time: 161
current step is:  9
instant reward: 0 cumulate reward:  0 planning time: 4 cumulate planning time: 165
current step is:  10
instant reward: 0 cumulate reward:  0 planning time: 3 cumulate planning time: 168
current step is:  11
instant reward: 0 cumulate reward:  0 planning time: 4 cumulate planning time: 172
current step is:  12
instant reward: 0 cumulate reward:  0 planning time: 3 cumulate planning time: 175
current step is:  13
instant reward: 0 cumulate reward:  0 planning time: 4 cumulate planning time: 179
current step is:  14
instant reward: 0 cumulate reward:  0 planning time: 3 cumulate planning time: 182
current step is:  15
instant reward: 0 cumulate reward:  0 planning time: 4 cumulate planning time: 186
current step is:  16
has to be unconnected
instant reward: 0 cumulate reward:  0 planning time: 3 cumulate planning time: 189
current step is:  17
instant reward: 0 cumulate reward:  0 planning time: 3 cumulate planning time: 192
title result with parameter:[0.1, 10, 100] 
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
{'[0.1, 10, 100]': {'para': [0.1, 10, 100], 'efficiency': 0.4770279079094855, 'Vout': 57.652814008599485}, '[0.3, 10, 100]': {'para': [0.3, 10, 100], 'efficiency': 0.7223240975419125, 'Vout': 81.2424887286263}, '[0.5, 10, 100]': {'para': [0.5, 10, 100], 'efficiency': 0.8306557768169515, 'Vout': 88.38524365263432}, '[0.7, 10, 100]': {'para': [0.7, 10, 100], 'efficiency': 0.895818242810203, 'Vout': 91.70801679781971}, '[0.9, 10, 100]': {'para': [0.9, 10, 100], 'efficiency': 0.9321762918352532, 'Vout': 93.54693917558274}}
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
{'[0.1, 10, 100]': {'para': [0.1, 10, 100], 'efficiency': 0.8078197525695446, 'Vout': 97.56893786168499}, '[0.3, 10, 100]': {'para': [0.3, 10, 100], 'efficiency': 0.8598231973223656, 'Vout': 96.91895788896908}, '[0.5, 10, 100]': {'para': [0.5, 10, 100], 'efficiency': 0.8977947063227802, 'Vout': 95.76856121417576}, '[0.7, 10, 100]': {'para': [0.7, 10, 100], 'efficiency': 0.9079302364626539, 'Vout': 93.20006402509806}, '[0.9, 10, 100]': {'para': [0.9, 10, 100], 'efficiency': 0.8172219100939665, 'Vout': 82.5315534026553}}
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
{'[0.1, 10, 100]': {'para': [0.1, 10, 100], 'efficiency': 0.07042345758336609, 'Vout': 78.5716433961595}, '[0.3, 10, 100]': {'para': [0.3, 10, 100], 'efficiency': 0.016206776533231566, 'Vout': 50.5150866608344}, '[0.5, 10, 100]': {'para': [0.5, 10, 100], 'efficiency': 0.006006731329294438, 'Vout': 30.745740098990336}, '[0.7, 10, 100]': {'para': [0.7, 10, 100], 'efficiency': 0.0022554483798586464, 'Vout': 16.06259333266698}, '[0.9, 10, 100]': {'para': [0.9, 10, 100], 'efficiency': 0.0005168046248008621, 'Vout': 4.727892893060691}}
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
find pre simulated &&&&&&&&&&&&&&&&&&&&&&
{'[0.1, 10, 100]': {'para': [0.1, 10, 100], 'efficiency': 0.4770279079094855, 'Vout': 57.652814008599485}, '[0.3, 10, 100]': {'para': [0.3, 10, 100], 'efficiency': 0.7223240975419125, 'Vout': 81.2424887286263}, '[0.5, 10, 100]': {'para': [0.5, 10, 100], 'efficiency': 0.8306557768169515, 'Vout': 88.38524365263432}, '[0.7, 10, 100]': {'para': [0.7, 10, 100], 'efficiency': 0.895818242810203, 'Vout': 91.70801679781971}, '[0.9, 10, 100]': {'para': [0.9, 10, 100], 'efficiency': 0.9321762918352532, 'Vout': 93.54693917558274}}
effis of topo: (0.21605458824214377, 0.61, 61.0, [0.1, 10, 100])
##################### finish current
figures are saved in:figures/2022-02-10-00-58-22_36465/

outputs are saved in:Results/2022-02-10-00-58-22_36465/10-result.txt

QFileSystemWatcher::removePaths: list is empty
QFileSystemWatcher::removePaths: list is empty
