nohup: ignoring input
figures already existed
Results already existed
261
194
1746
261
194
find
OrderedDict([('L0', ['N-L0-Sb0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-L0-Sb0'])])
figures/2021-03-18-11-39-29/ created
Viz/TreeStructures2021-03-18-11-39-29-50865/ created
max depth is -1 ,trajectory is 20 every thread has  20  trajectories

path with frequency:
('VIN - L - Sb - GND', 0.1447)
('VIN - L - Sa - VOUT', 0.1214)
('VIN - L - Sb - VOUT', 0.0998)
('VIN - Sa - L - VOUT', 0.0914)
('VIN - Sb - L - VOUT', 0.0914)
('VIN - L - Sa - GND', 0.0906)
('VOUT - Sb - Sa - GND', 0.0763)
('VOUT - Sa - Sb - GND', 0.0747)
('VIN - Sa - Sb - VOUT', 0.074)
('VIN - Sb - Sa - VOUT', 0.0707)
('VOUT - L - Sa - GND', 0.0671)
('VIN - L - Sa - Sa - VOUT', 0.065)
('VIN - Sa - L - GND', 0.0612)
('VIN - C - VOUT', 0.0583)
('VOUT - Sb - L - GND', 0.0579)
('VIN - Sb - L - GND', 0.0571)
('VOUT - Sa - Sa - Sb - GND', 0.0549)
('VOUT - Sa - L - GND', 0.0529)
('VIN - Sb - Sa - GND', 0.048)
('VIN - Sa - Sb - GND', 0.043)
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
sim.current.step 0
root offset is:  1
['Sb']
['Sb', 'Sa']
['Sa']
['Sa', 'Sb']
['Sb', 'L']
['Sa', 'L']
['Sb', 'C']
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '8', '0'], ['C0', 'OUT', '0'], ['Sa0', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '8', '0'], ['C0', 'OUT', '0'], ['Sa0', 'IN', '8']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 8 0', 'C0 OUT 0', 'Ra0 IN 8', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 8 0', 'C0 OUT 0', 'Rb0 IN 8', '']
[['Sb0', '8', '0'], ['C0', 'OUT', '0'], ['Sa0', 'IN', '8']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 8 0
C0 OUT 0
Ra0 IN 8

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 8 0
C0 OUT 0
Rb0 IN 8

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '8', '0'], ['C0', 'OUT', '0'], ['Sa0', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '8', '0'], ['C0', 'OUT', '0'], ['Sa0', 'IN', '8']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 8 0', 'C0 OUT 0', 'Ra0 IN 8', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 8 0', 'C0 OUT 0', 'Rb0 IN 8', '']
[['Sb0', '8', '0'], ['C0', 'OUT', '0'], ['Sa0', 'IN', '8']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 8 0
C0 OUT 0
Ra0 IN 8

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 8 0
C0 OUT 0
Rb0 IN 8

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '8', '0'], ['C0', 'OUT', '0'], ['Sa0', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '8', '0'], ['C0', 'OUT', '0'], ['Sa0', 'IN', '8']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 8 0', 'C0 OUT 0', 'Ra0 IN 8', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 8 0', 'C0 OUT 0', 'Rb0 IN 8', '']
[['Sb0', '8', '0'], ['C0', 'OUT', '0'], ['Sa0', 'IN', '8']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 8 0
C0 OUT 0
Ra0 IN 8

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 8 0
C0 OUT 0
Rb0 IN 8

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['Sa', 'Sa']
['Sb', 'Sa']
['Sa', 'Sb']
['Sb', 'Sb']
['Sa', 'C']
['VIN - L - Sa - C - VOUT', 'VIN - L - Sa - GND', 'VOUT - C - GND']
[['Sa0', '7', '0'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100)]
['VIN - L - Sa - C - VOUT', 'VIN - L - Sa - GND', 'VOUT - C - GND']
[['Sa0', '7', '0'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'L0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'L0 7 IN', '']
[['Sa0', '7', '0'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
L0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
L0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'L0']
PCC-50865 violations

['VIN - L - Sa - C - VOUT', 'VIN - L - Sa - GND', 'VOUT - C - GND']
[['Sa0', '7', '0'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100)]
['VIN - L - Sa - C - VOUT', 'VIN - L - Sa - GND', 'VOUT - C - GND']
[['Sa0', '7', '0'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'L0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'L0 7 IN', '']
[['Sa0', '7', '0'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
L0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
L0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'L0']
PCC-50865 violations

['VIN - L - Sa - C - VOUT', 'VIN - L - Sa - GND', 'VOUT - C - GND']
[['Sa0', '7', '0'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100)]
['VIN - L - Sa - C - VOUT', 'VIN - L - Sa - GND', 'VOUT - C - GND']
[['Sa0', '7', '0'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'L0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'L0 7 IN', '']
[['Sa0', '7', '0'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
L0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
L0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'L0']
PCC-50865 violations

action  0  : node on 1
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 0
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 2 cumulate planning time: 2
sim.current.step 1
root offset is:  1
['VIN - L - Sb - VOUT', 'VIN - L - L - GND', 'VOUT - Sb - L - GND']
[['Sb0', 'OUT', '8'], ['L0', '0', '8'], ['L1', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 OUT IN', 'C1 IN 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 OUT IN', 'C1 IN 0', '']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 OUT IN
C1 IN 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 OUT IN
C1 IN 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 OUT IN', 'C1 IN 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 OUT IN', 'C1 IN 0', '']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 OUT IN
C1 IN 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 OUT IN
C1 IN 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 OUT IN', 'C1 IN 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 OUT IN', 'C1 IN 0', '']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 OUT IN
C1 IN 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 OUT IN
C1 IN 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

action  0  : node on 3
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 2
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 0
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 1
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right']
state child 3 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 1 cumulate planning time: 3
sim.current.step 2
root offset is:  1
['VIN - C - Sb - L - VOUT', 'VIN - C - GND', 'VOUT - L - Sb - GND']
[['Sb0', '0', '6'], ['L0', 'OUT', '6'], ['C0', 'IN', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
['VIN - C - VOUT', 'VIN - Sb - L - GND', 'VOUT - C - Sb - L - GND']
[['Sb0', 'IN', '6'], ['L0', '0', '6'], ['C0', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
action  0  : node on 0
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 1
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sb1-left', 'Sb1-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 3
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'L1-left', 'L1-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 2
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'C0-left', 'C0-right']
state child 3 graph: defaultdict(<class 'set'>, {})
title adding node Sa
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 3
sim.current.step 3
root offset is:  1
['VIN - Sb - L - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - L - Sa - GND']
[['Sb0', 'IN', '8'], ['L0', 'OUT', '8'], ['Sa0', '0', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100)]
0.1 ['89', '9']
{'efficiency': 0.89, 'output_voltage': 9.0} -200 -300.0 -100.0
0 0
0.2 ['96', '19']
{'efficiency': 0.96, 'output_voltage': 19.0} -200 -300.0 -100.0
0 0
0.3 ['97', '29']
{'efficiency': 0.97, 'output_voltage': 29.0} -200 -300.0 -100.0
0 0
0.4 ['98', '39']
{'efficiency': 0.98, 'output_voltage': 39.0} -200 -300.0 -100.0
0 0
0.5 ['98', '49']
{'efficiency': 0.98, 'output_voltage': 49.0} -200 -300.0 -100.0
0 0
0.6 ['98', '59']
{'efficiency': 0.98, 'output_voltage': 59.0} -200 -300.0 -100.0
0 0
0.7 ['98', '69']
{'efficiency': 0.98, 'output_voltage': 69.0} -200 -300.0 -100.0
0 0
0.8 ['98', '79']
{'efficiency': 0.98, 'output_voltage': 79.0} -200 -300.0 -100.0
0 0
0.9 ['98', '89']
{'efficiency': 0.98, 'output_voltage': 89.0} -200 -300.0 -100.0
0 0
['VIN - Sa - Sb - VOUT', 'VIN - Sa - L - GND', 'VOUT - Sb - L - GND']
[['Sb0', '8', 'OUT'], ['L0', '0', '8'], ['Sa0', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100)]
0.1 ['47', '-430']
{'efficiency': 0.47, 'output_voltage': -430.0} -200 -300.0 -100.0
0 0
0.2 ['78', '-314']
{'efficiency': 0.78, 'output_voltage': -314.0} -200 -300.0 -100.0
0 0
0.3 ['89', '-208']
{'efficiency': 0.89, 'output_voltage': -208.0} -200 -300.0 -100.0
0 0.749024
0.4 ['93', '-140']
{'efficiency': 0.93, 'output_voltage': -140.0} -200 -300.0 -100.0
0.749024 0.007440000000000001
0.5 ['95', '-95']
{'efficiency': 0.95, 'output_voltage': -95.0} -200 -300.0 -100.0
0.749024 0
0.6 ['96', '-64']
{'efficiency': 0.96, 'output_voltage': -64.0} -200 -300.0 -100.0
0.749024 0
0.7 ['96', '-41']
{'efficiency': 0.96, 'output_voltage': -41.0} -200 -300.0 -100.0
0.749024 0
0.8 ['95', '-24']
{'efficiency': 0.95, 'output_voltage': -24.0} -200 -300.0 -100.0
0.749024 0
0.9 ['89', '-10']
{'efficiency': 0.89, 'output_voltage': -10.0} -200 -300.0 -100.0
0.749024 0
['VIN - L - Sb - VOUT', 'VIN - L - Sa - GND', 'VOUT - Sb - Sa - GND']
[['Sb0', 'OUT', '8'], ['L0', 'IN', '8'], ['Sa0', '0', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100)]
0.1 ['47', '475']
{'efficiency': 0.47, 'output_voltage': 475.0} -200 -300.0 -100.0
0 0
0.2 ['78', '392']
{'efficiency': 0.78, 'output_voltage': 392.0} -200 -300.0 -100.0
0 0
0.3 ['89', '296']
{'efficiency': 0.89, 'output_voltage': 296.0} -200 -300.0 -100.0
0 0
0.4 ['93', '233']
{'efficiency': 0.93, 'output_voltage': 233.0} -200 -300.0 -100.0
0 0
0.5 ['95', '191']
{'efficiency': 0.95, 'output_voltage': 191.0} -200 -300.0 -100.0
0 0
0.6 ['96', '161']
{'efficiency': 0.96, 'output_voltage': 161.0} -200 -300.0 -100.0
0 0
0.7 ['97', '139']
{'efficiency': 0.97, 'output_voltage': 139.0} -200 -300.0 -100.0
0 0
0.8 ['98', '122']
{'efficiency': 0.98, 'output_voltage': 122.0} -200 -300.0 -100.0
0 0
0.9 ['98', '109']
{'efficiency': 0.98, 'output_voltage': 109.0} -200 -300.0 -100.0
0 0
['VIN - Sa - VOUT', 'VIN - Sb - L - GND', 'VOUT - Sa - Sb - L - GND']
[['Sb0', 'IN', '5'], ['L0', '5', '0'], ['Sa0', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -200 -300.0 -100.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -200 -300.0 -100.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} -200 -300.0 -100.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} -200 -300.0 -100.0
0 0
0.9 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} -200 -300.0 -100.0
0 0
action  0  : edge on [0, 5]
action child  0  avg_return: 0.187256
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}})
action  1  : edge on [0, 3]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sa0-left', 'Sa0-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}})
action  2  : edge on [0, 6]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sa0-left', 'Sa0-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}})
action  3  : edge on [0, 8]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sa0-left', 'Sa0-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}})
action  4  : edge on [0, 4]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sa0-left', 'Sa0-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}})
action  5  : edge on [-1, -1]
action child  5  avg_return: 0.0
state child  5  reward: 0
state  5 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sa0-left', 'Sa0-right']
state child 5 graph: defaultdict(<class 'set'>, {})
action  6  : edge on [0, 7]
action child  6  avg_return: 0.0
state child  6  reward: 0
state  6 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sa0-left', 'Sa0-right']
state child 6 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}})
title connecting GND and L0-left
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 3
sim.current.step 4
root offset is:  1
['VIN - Sb - Sa - VOUT', 'VIN - Sb - L - GND', 'VOUT - Sa - L - GND']
[['Sb0', '8', 'IN'], ['L0', '0', '8'], ['Sa0', 'OUT', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100)]
0.1 ['89', '-10']
{'efficiency': 0.89, 'output_voltage': -10.0} -200 -300.0 -100.0
0 0
0.2 ['95', '-24']
{'efficiency': 0.95, 'output_voltage': -24.0} -200 -300.0 -100.0
0 0
0.3 ['96', '-41']
{'efficiency': 0.96, 'output_voltage': -41.0} -200 -300.0 -100.0
0 0
0.4 ['96', '-64']
{'efficiency': 0.96, 'output_voltage': -64.0} -200 -300.0 -100.0
0 0
0.5 ['95', '-95']
{'efficiency': 0.95, 'output_voltage': -95.0} -200 -300.0 -100.0
0 0
0.6 ['93', '-140']
{'efficiency': 0.93, 'output_voltage': -140.0} -200 -300.0 -100.0
0 0.007440000000000001
0.7 ['89', '-208']
{'efficiency': 0.89, 'output_voltage': -208.0} -200 -300.0 -100.0
0.007440000000000001 0.749024
0.8 ['78', '-314']
{'efficiency': 0.78, 'output_voltage': -314.0} -200 -300.0 -100.0
0.749024 0
0.9 ['47', '-430']
{'efficiency': 0.47, 'output_voltage': -430.0} -200 -300.0 -100.0
0.749024 0
['VIN - Sb - VOUT', 'VIN - Sa - L - GND', 'VOUT - Sb - Sa - L - GND']
[['Sb0', 'IN', 'OUT'], ['L0', '0', '8'], ['Sa0', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100)]
0.1 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} -200 -300.0 -100.0
0 0
0.2 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} -200 -300.0 -100.0
0 0
0.3 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} -200 -300.0 -100.0
0 0
0.4 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -200 -300.0 -100.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -200 -300.0 -100.0
0 0
0.6 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.9 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
action  0  : edge on [1, 8]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}, 1: {8}, 8: {1}})
action  1  : edge on [1, 7]
action child  1  avg_return: 0.2996096
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sa0-left', 'Sa0-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}, 1: {7}, 7: {1}})
action  2  : edge on [-1, -1]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sa0-left', 'Sa0-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}})
action  3  : edge on [1, 4]
action child  3  avg_return: 0.1498048
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sa0-left', 'Sa0-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}, 1: {4}, 4: {1}})
action  4  : edge on [1, 3]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sa0-left', 'Sa0-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}, 1: {3}, 3: {1}})
title connecting VIN and Sa0-left
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 3
sim.current.step 5
root offset is:  1
['VIN - Sa - VOUT', 'VIN - Sa - Sb - L - GND', 'VOUT - Sb - L - GND']
[['Sb0', 'OUT', '6'], ['L0', '0', '6'], ['Sa0', 'IN', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -200 -300.0 -100.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -200 -300.0 -100.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} -200 -300.0 -100.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} -200 -300.0 -100.0
0 0
0.9 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} -200 -300.0 -100.0
0 0
action  0  : edge on [2, 3]
action child  0  avg_return: 0.12483733333333333
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}, 1: {7}, 7: {1}, 2: {3}, 3: {2}})
action  1  : edge on [2, 4]
action child  1  avg_return: 0.2496746666666667
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sa0-left', 'Sa0-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}, 1: {7}, 7: {1}, 2: {4}, 4: {2}})
action  2  : edge on [2, 8]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sa0-left', 'Sa0-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}, 1: {7}, 7: {1}, 2: {8}, 8: {2}})
action  3  : edge on [-1, -1]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sa0-left', 'Sa0-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}, 1: {7}, 7: {1}})
title connecting VOUT and Sb0-right
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 3
sim.current.step 6
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}, 1: {7}, 7: {1}, 2: {4}, 4: {2}})
action  1  : edge on [3, 7]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sa0-left', 'Sa0-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}, 1: {7}, 7: {1, 3}, 2: {4}, 4: {2}, 3: {7}})
action  2  : edge on [3, 8]
action child  2  avg_return: 0.2496746666666667
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sa0-left', 'Sa0-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}, 1: {7}, 7: {1}, 2: {4}, 4: {2}, 3: {8}, 8: {3}})
action  3  : edge on [3, 6]
action child  3  avg_return: 0.37451200000000007
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sa0-left', 'Sa0-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}, 1: {7}, 7: {1}, 2: {4}, 4: {2}, 3: {6}, 6: {3}})
title connecting Sb0-left and L0-right
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 3
sim.current.step 7
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.43693066666666663
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}, 1: {7}, 7: {1}, 2: {4}, 4: {2}, 3: {6}, 6: {3}})
action  1  : edge on [4, 8]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sa0-left', 'Sa0-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}, 1: {7}, 7: {1}, 2: {4}, 4: {8, 2}, 3: {6}, 6: {3}, 8: {4}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 3
sim.current.step 8
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.42444693333333333
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}, 1: {7}, 7: {1}, 2: {4}, 4: {2}, 3: {6}, 6: {3}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 3
sim.current.step 9
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}, 1: {7}, 7: {1}, 2: {4}, 4: {2}, 3: {6}, 6: {3}})
action  1  : edge on [6, 8]
action child  1  avg_return: 0.749024
state child  1  reward: 0.749024
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sa0-left', 'Sa0-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}, 1: {7}, 7: {1}, 2: {4}, 4: {2}, 3: {6}, 6: {8, 3}, 8: {6}})
['VIN - Sa - Sb - VOUT', 'VIN - Sa - L - GND', 'VOUT - Sb - L - GND']
[['Sb0', '8', 'OUT'], ['L0', '0', '8'], ['Sa0', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100)]
0.1 ['47', '-430']
{'efficiency': 0.47, 'output_voltage': -430.0} -200 -300.0 -100.0
0 0
0.2 ['78', '-314']
{'efficiency': 0.78, 'output_voltage': -314.0} -200 -300.0 -100.0
0 0
0.3 ['89', '-208']
{'efficiency': 0.89, 'output_voltage': -208.0} -200 -300.0 -100.0
0 0.749024
0.4 ['93', '-140']
{'efficiency': 0.93, 'output_voltage': -140.0} -200 -300.0 -100.0
0.749024 0.007440000000000001
0.5 ['95', '-95']
{'efficiency': 0.95, 'output_voltage': -95.0} -200 -300.0 -100.0
0.749024 0
0.6 ['96', '-64']
{'efficiency': 0.96, 'output_voltage': -64.0} -200 -300.0 -100.0
0.749024 0
0.7 ['96', '-41']
{'efficiency': 0.96, 'output_voltage': -41.0} -200 -300.0 -100.0
0.749024 0
0.8 ['95', '-24']
{'efficiency': 0.95, 'output_voltage': -24.0} -200 -300.0 -100.0
0.749024 0
0.9 ['89', '-10']
{'efficiency': 0.89, 'output_voltage': -10.0} -200 -300.0 -100.0
0.749024 0
title connecting L0-right and Sa0-right
instant reward: 0 cumulate reward:  0.749024 planning time: 0 cumulate planning time: 3
sim.current.step 10
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0.0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}, 1: {7}, 7: {1}, 2: {4}, 4: {2}, 3: {6}, 6: {8, 3}, 8: {6}})
action  1  : terminal on 0
action child  1  avg_return: 0.0
state child  1  reward: 0.0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sa0-left', 'Sa0-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}, 1: {7}, 7: {1}, 2: {4}, 4: {2}, 3: {6}, 6: {8, 3}, 8: {6}})
title skip connecting
instant reward: 0 cumulate reward:  0.749024 planning time: 0 cumulate planning time: 3
sim.current.step 11
root offset is:  1
action  0  : terminal on 0
action child  0  avg_return: 0.0
state child  0  reward: 0.0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}, 1: {7}, 7: {1}, 2: {4}, 4: {2}, 3: {6}, 6: {8, 3}, 8: {6}})
action  1  : edge on [-1, -1]
action child  1  avg_return: 0.0
state child  1  reward: 0.0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sa0-left', 'Sa0-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}, 1: {7}, 7: {1}, 2: {4}, 4: {2}, 3: {6}, 6: {8, 3}, 8: {6}})
title terminal
instant reward: 0 cumulate reward:  0.749024 planning time: 0 cumulate planning time: 3
effis of topo: [{'parameter': '0.3', 'efficiency': {'efficiency': 0.89, 'output_voltage': -208.0}, 'output_voltage': -208.0}]
#####################Game: 0   steps:  12   average cumulate reward:  0.749024
title result with parameter:0.3 
-1 , 20 : 12.0
[{'parameter': '0.3', 'efficiency': {'efficiency': 0.89, 'output_voltage': -208.0}, 'output_voltage': -208.0}]
figures are saved in:figures/2021-03-18-11-39-29/

outputs are saved in:Results/mutitest_-200-2021-03-18-11-39-29-50865.txt

figures already existed
Results already existed
261
194
1746
261
194
find
OrderedDict([('L0', ['N-L0-Sb0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-L0-Sb0'])])
figures/2021-03-18-11-39-36/ created
Viz/TreeStructures2021-03-18-11-39-36-50865/ created
max depth is -1 ,trajectory is 20 every thread has  20  trajectories

path with frequency:
('VIN - L - Sb - GND', 0.1447)
('VIN - L - Sa - VOUT', 0.1214)
('VIN - L - Sb - VOUT', 0.0998)
('VIN - Sa - L - VOUT', 0.0914)
('VIN - Sb - L - VOUT', 0.0914)
('VIN - L - Sa - GND', 0.0906)
('VOUT - Sb - Sa - GND', 0.0763)
('VOUT - Sa - Sb - GND', 0.0747)
('VIN - Sa - Sb - VOUT', 0.074)
('VIN - Sb - Sa - VOUT', 0.0707)
('VOUT - L - Sa - GND', 0.0671)
('VIN - L - Sa - Sa - VOUT', 0.065)
('VIN - Sa - L - GND', 0.0612)
('VIN - C - VOUT', 0.0583)
('VOUT - Sb - L - GND', 0.0579)
('VIN - Sb - L - GND', 0.0571)
('VOUT - Sa - Sa - Sb - GND', 0.0549)
('VOUT - Sa - L - GND', 0.0529)
('VIN - Sb - Sa - GND', 0.048)
('VIN - Sa - Sb - GND', 0.043)
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
sim.current.step 0
root offset is:  1
['Sb']
['Sb', 'C']
['Sa']
['Sa', 'Sb']
['VIN - Sb - Sa - C - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - C - GND']
[['Sa0', '5', '0'], ['Sb0', '5', 'IN'], ['C0', '0', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - Sa - C - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - C - GND']
[['Sa0', '5', '0'], ['Sb0', '5', 'IN'], ['C0', '0', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 5 0', 'Rb0 5 IN', 'C0 0 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 5 0', 'Ra0 5 IN', 'C0 0 OUT', '']
[['Sa0', '5', '0'], ['Sb0', '5', 'IN'], ['C0', '0', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 5 0
Rb0 5 IN
C0 0 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 5 0
Ra0 5 IN
C0 0 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - Sa - C - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - C - GND']
[['Sa0', '5', '0'], ['Sb0', '5', 'IN'], ['C0', '0', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - Sa - C - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - C - GND']
[['Sa0', '5', '0'], ['Sb0', '5', 'IN'], ['C0', '0', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 5 0', 'Rb0 5 IN', 'C0 0 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 5 0', 'Ra0 5 IN', 'C0 0 OUT', '']
[['Sa0', '5', '0'], ['Sb0', '5', 'IN'], ['C0', '0', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 5 0
Rb0 5 IN
C0 0 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 5 0
Ra0 5 IN
C0 0 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - Sa - C - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - C - GND']
[['Sa0', '5', '0'], ['Sb0', '5', 'IN'], ['C0', '0', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - Sa - C - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - C - GND']
[['Sa0', '5', '0'], ['Sb0', '5', 'IN'], ['C0', '0', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 5 0', 'Rb0 5 IN', 'C0 0 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 5 0', 'Ra0 5 IN', 'C0 0 OUT', '']
[['Sa0', '5', '0'], ['Sb0', '5', 'IN'], ['C0', '0', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 5 0
Rb0 5 IN
C0 0 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 5 0
Ra0 5 IN
C0 0 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['Sb', 'Sa']
['VIN - C - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - C - Sb - Sa - GND']
[['Sb0', 'IN', '5'], ['Sa0', '5', '0'], ['C0', 'IN', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
['Sa', 'C']
['Sb', 'C']
['VIN - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - Sa - Sb - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', 'IN'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
['Sa', 'L']
['Sb', 'L']
['Sa', 'Sb']
['VIN - Sa - VOUT', 'VIN - Sa - L - Sb - GND', 'VOUT - L - Sb - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', '0', '8'], ['L0', 'OUT', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -200 -300.0 -100.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -200 -300.0 -100.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} -200 -300.0 -100.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} -200 -300.0 -100.0
0 0
0.9 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} -200 -300.0 -100.0
0 0
['Sb', 'Sb']
['Sa', 'Sa']
action  0  : node on 1
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 0
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 2 cumulate planning time: 2
sim.current.step 1
root offset is:  1
['VIN - L - Sb - VOUT', 'VIN - L - Sa - GND', 'VOUT - Sb - Sa - GND']
[['Sb0', '7', 'OUT'], ['Sa0', '7', '0'], ['L0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100)]
0.1 ['47', '475']
{'efficiency': 0.47, 'output_voltage': 475.0} -200 -300.0 -100.0
0 0
0.2 ['78', '392']
{'efficiency': 0.78, 'output_voltage': 392.0} -200 -300.0 -100.0
0 0
0.3 ['89', '296']
{'efficiency': 0.89, 'output_voltage': 296.0} -200 -300.0 -100.0
0 0
0.4 ['93', '233']
{'efficiency': 0.93, 'output_voltage': 233.0} -200 -300.0 -100.0
0 0
0.5 ['95', '191']
{'efficiency': 0.95, 'output_voltage': 191.0} -200 -300.0 -100.0
0 0
0.6 ['96', '161']
{'efficiency': 0.96, 'output_voltage': 161.0} -200 -300.0 -100.0
0 0
0.7 ['97', '139']
{'efficiency': 0.97, 'output_voltage': 139.0} -200 -300.0 -100.0
0 0
0.8 ['98', '122']
{'efficiency': 0.98, 'output_voltage': 122.0} -200 -300.0 -100.0
0 0
0.9 ['98', '109']
{'efficiency': 0.98, 'output_voltage': 109.0} -200 -300.0 -100.0
0 0
['VIN - Sb - VOUT', 'VIN - Sb - Sa - Sb - GND', 'VOUT - Sa - Sb - GND']
[['Sb0', '5', '0'], ['Sa0', '5', 'OUT'], ['Sb1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'Rb1': [1], 'Ra1': [100000]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'Rb1', 'Ra1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000)]
0.1 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} -200 -300.0 -100.0
0 0
0.2 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} -200 -300.0 -100.0
0 0
0.3 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} -200 -300.0 -100.0
0 0
0.4 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -200 -300.0 -100.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -200 -300.0 -100.0
0 0
0.6 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.9 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
action  0  : node on 0
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 2
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 3
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 1
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right']
state child 3 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 2
sim.current.step 2
root offset is:  1
['VIN - Sb - C - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - C - Sa - GND']
[['Sb0', '7', 'IN'], ['Sa0', '7', '0'], ['C0', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
action  0  : node on 1
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sb1-left', 'Sb1-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 0
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 2
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 3
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right']
state child 3 graph: defaultdict(<class 'set'>, {})
title adding node Sb
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 2
sim.current.step 3
root offset is:  1
action  0  : edge on [0, 4]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sb1-left', 'Sb1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}})
action  1  : edge on [0, 8]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sb1-left', 'Sb1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}})
action  2  : edge on [0, 7]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sb1-left', 'Sb1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}})
action  3  : edge on [0, 6]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sb1-left', 'Sb1-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}})
action  4  : edge on [0, 3]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sb1-left', 'Sb1-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}})
action  5  : edge on [-1, -1]
action child  5  avg_return: 0.0
state child  5  reward: 0
state  5 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sb1-left', 'Sb1-right']
state child 5 graph: defaultdict(<class 'set'>, {})
action  6  : edge on [0, 5]
action child  6  avg_return: 0.0
state child  6  reward: 0
state  6 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sb1-left', 'Sb1-right']
state child 6 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}})
title connecting GND and Sb0-right
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 2
sim.current.step 4
root offset is:  1
['VIN - Sb - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - Sb - Sa - Sb - GND']
[['Sb0', '5', '0'], ['Sa0', '5', 'IN'], ['Sb1', 'IN', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'Rb1': [1], 'Ra1': [100000]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'Rb1', 'Ra1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000)]
0.1 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} -200 -300.0 -100.0
0 0
0.2 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} -200 -300.0 -100.0
0 0
0.3 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} -200 -300.0 -100.0
0 0
0.4 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -200 -300.0 -100.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -200 -300.0 -100.0
0 0
0.6 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.9 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
action  0  : edge on [1, 8]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sb1-left', 'Sb1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {8}, 8: {1}})
action  1  : edge on [1, 5]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sb1-left', 'Sb1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {5}, 5: {1}})
action  2  : edge on [1, 6]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sb1-left', 'Sb1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {6}, 6: {1}})
action  3  : edge on [-1, -1]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sb1-left', 'Sb1-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}})
action  4  : edge on [1, 7]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sb1-left', 'Sb1-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1}})
title connecting VIN and Sb1-right
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 2
sim.current.step 5
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sb1-left', 'Sb1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {8}, 8: {1}})
action  1  : edge on [2, 6]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sb1-left', 'Sb1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {8}, 8: {1}, 2: {6}, 6: {2}})
action  2  : edge on [2, 5]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sb1-left', 'Sb1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {8}, 8: {1}, 2: {5}, 5: {2}})
action  3  : edge on [2, 7]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sb1-left', 'Sb1-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {8}, 8: {1}, 2: {7}, 7: {2}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 2
sim.current.step 6
root offset is:  1
action  0  : edge on [3, 5]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sb1-left', 'Sb1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {8}, 8: {1}, 3: {5}, 5: {3}})
action  1  : edge on [-1, -1]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sb1-left', 'Sb1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {8}, 8: {1}})
action  2  : edge on [3, 6]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sb1-left', 'Sb1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {8}, 8: {1}, 3: {6}, 6: {3}})
title connecting Sb0-left and Sa0-left
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 2
sim.current.step 7
root offset is:  1
action  0  : edge on [4, 6]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sb1-left', 'Sb1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0, 6}, 1: {8}, 8: {1}, 3: {5}, 5: {3}, 6: {4}})
action  1  : edge on [-1, -1]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sb1-left', 'Sb1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {8}, 8: {1}, 3: {5}, 5: {3}})
title connecting Sb0-right and Sa0-right
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 2
sim.current.step 8
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sb1-left', 'Sb1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0, 6}, 1: {8}, 8: {1}, 3: {5}, 5: {3}, 6: {4}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 2
sim.current.step 9
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sb1-left', 'Sb1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0, 6}, 1: {8}, 8: {1}, 3: {5}, 5: {3}, 6: {4}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 2
sim.current.step 10
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sb1-left', 'Sb1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0, 6}, 1: {8}, 8: {1}, 3: {5}, 5: {3}, 6: {4}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 2
sim.current.step 11
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sb1-left', 'Sb1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0, 6}, 1: {8}, 8: {1}, 3: {5}, 5: {3}, 6: {4}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 2
effis of topo: [{'parameter': 'None', 'efficiency': 0, 'output_voltage': -500}]
#####################Game: 0   steps:  12   average cumulate reward:  0
title result with parameter:None 
-1 , 20 : 12.0
[{'parameter': 'None', 'efficiency': 0, 'output_voltage': -500}]
figures are saved in:figures/2021-03-18-11-39-36/

outputs are saved in:Results/mutitest_-200-2021-03-18-11-39-36-50865.txt

figures already existed
Results already existed
261
194
1746
261
194
find
OrderedDict([('L0', ['N-L0-Sb0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-L0-Sb0'])])
figures/2021-03-18-11-39-41/ created
Viz/TreeStructures2021-03-18-11-39-41-50865/ created
max depth is -1 ,trajectory is 20 every thread has  20  trajectories

path with frequency:
('VIN - L - Sb - GND', 0.1447)
('VIN - L - Sa - VOUT', 0.1214)
('VIN - L - Sb - VOUT', 0.0998)
('VIN - Sa - L - VOUT', 0.0914)
('VIN - Sb - L - VOUT', 0.0914)
('VIN - L - Sa - GND', 0.0906)
('VOUT - Sb - Sa - GND', 0.0763)
('VOUT - Sa - Sb - GND', 0.0747)
('VIN - Sa - Sb - VOUT', 0.074)
('VIN - Sb - Sa - VOUT', 0.0707)
('VOUT - L - Sa - GND', 0.0671)
('VIN - L - Sa - Sa - VOUT', 0.065)
('VIN - Sa - L - GND', 0.0612)
('VIN - C - VOUT', 0.0583)
('VOUT - Sb - L - GND', 0.0579)
('VIN - Sb - L - GND', 0.0571)
('VOUT - Sa - Sa - Sb - GND', 0.0549)
('VOUT - Sa - L - GND', 0.0529)
('VIN - Sb - Sa - GND', 0.048)
('VIN - Sa - Sb - GND', 0.043)
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
sim.current.step 0
root offset is:  1
['Sb']
['Sb', 'Sa']
['Sa']
['Sa', 'L']
['Sb', 'C']
['VIN - C - VOUT', 'VIN - C - Sb - Sa - GND', 'VOUT - Sb - Sa - GND']
[['Sb0', '8', 'OUT'], ['C0', 'OUT', 'IN'], ['Sa0', '0', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
['Sa', 'Sb']
['Sb', 'Sb']
['Sa', 'C']
['VIN - C - VOUT', 'VIN - L - Sa - GND', 'VOUT - C - L - Sa - GND']
[['Sa0', '7', '0'], ['C0', 'IN', 'OUT'], ['L0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
['Sb', 'L']
['Sa', 'L']
['Sb', 'Sa']
['Sa', 'Sa']
['VIN - Sa - VOUT', 'VIN - Sa - Sa - Sb - GND', 'VOUT - Sa - Sb - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', '8', '0'], ['Sa1', 'OUT', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -200 -300.0 -100.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -200 -300.0 -100.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} -200 -300.0 -100.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} -200 -300.0 -100.0
0 0
0.9 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} -200 -300.0 -100.0
0 0
['VIN - Sb - Sb - VOUT', 'VIN - Sb - L - GND', 'VOUT - Sb - L - GND']
[['Sb0', 'OUT', '8'], ['L0', '8', '0'], ['Sb1', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100], 'Rb1': [1], 'Ra1': [100000]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0', 'Rb1', 'Ra1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000)]
0.1 ['82', '82']
{'efficiency': 0.82, 'output_voltage': 82.0} -200 -300.0 -100.0
0 0
0.2 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} -200 -300.0 -100.0
0 0
0.3 ['93', '93']
{'efficiency': 0.93, 'output_voltage': 93.0} -200 -300.0 -100.0
0 0
0.4 ['94', '95']
{'efficiency': 0.94, 'output_voltage': 95.0} -200 -300.0 -100.0
0 0
0.5 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} -200 -300.0 -100.0
0 0
0.6 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} -200 -300.0 -100.0
0 0
0.7 ['96', '97']
{'efficiency': 0.96, 'output_voltage': 97.0} -200 -300.0 -100.0
0 0
0.8 ['96', '97']
{'efficiency': 0.96, 'output_voltage': 97.0} -200 -300.0 -100.0
0 0
0.9 ['95', '97']
{'efficiency': 0.95, 'output_voltage': 97.0} -200 -300.0 -100.0
0 0
['VIN - Sa - Sa - VOUT', 'VIN - Sa - L - GND', 'VOUT - Sa - L - GND']
[['Sa0', 'IN', '7'], ['Sa1', '7', 'OUT'], ['L0', '7', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'Ra1': [100000], 'Rb1': [1], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'Ra1', 'Rb1', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100)]
0.1 ['95', '97']
{'efficiency': 0.95, 'output_voltage': 97.0} -200 -300.0 -100.0
0 0
0.2 ['96', '97']
{'efficiency': 0.96, 'output_voltage': 97.0} -200 -300.0 -100.0
0 0
0.3 ['96', '97']
{'efficiency': 0.96, 'output_voltage': 97.0} -200 -300.0 -100.0
0 0
0.4 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} -200 -300.0 -100.0
0 0
0.5 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} -200 -300.0 -100.0
0 0
0.6 ['94', '95']
{'efficiency': 0.94, 'output_voltage': 95.0} -200 -300.0 -100.0
0 0
0.7 ['93', '93']
{'efficiency': 0.93, 'output_voltage': 93.0} -200 -300.0 -100.0
0 0
0.8 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} -200 -300.0 -100.0
0 0
0.9 ['82', '82']
{'efficiency': 0.82, 'output_voltage': 82.0} -200 -300.0 -100.0
0 0
action  0  : node on 1
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 0
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 0
sim.current.step 1
root offset is:  1
['VIN - L - Sb - C - VOUT', 'VIN - L - Sb - GND', 'VOUT - C - GND']
[['Sb0', '5', '0'], ['L0', '5', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10)]
['VIN - L - Sb - C - VOUT', 'VIN - L - Sb - GND', 'VOUT - C - GND']
[['Sb0', '5', '0'], ['L0', '5', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 5 0', 'L0 5 IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 5 0', 'L0 5 IN', 'C0 OUT 0', '']
[['Sb0', '5', '0'], ['L0', '5', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 5 0
L0 5 IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 5 0
L0 5 IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0']
PCC-50865 violations

['VIN - L - Sb - C - VOUT', 'VIN - L - Sb - GND', 'VOUT - C - GND']
[['Sb0', '5', '0'], ['L0', '5', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10)]
['VIN - L - Sb - C - VOUT', 'VIN - L - Sb - GND', 'VOUT - C - GND']
[['Sb0', '5', '0'], ['L0', '5', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 5 0', 'L0 5 IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 5 0', 'L0 5 IN', 'C0 OUT 0', '']
[['Sb0', '5', '0'], ['L0', '5', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 5 0
L0 5 IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 5 0
L0 5 IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0']
PCC-50865 violations

['VIN - L - Sb - C - VOUT', 'VIN - L - Sb - GND', 'VOUT - C - GND']
[['Sb0', '5', '0'], ['L0', '5', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10)]
['VIN - L - Sb - C - VOUT', 'VIN - L - Sb - GND', 'VOUT - C - GND']
[['Sb0', '5', '0'], ['L0', '5', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 5 0', 'L0 5 IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 5 0', 'L0 5 IN', 'C0 OUT 0', '']
[['Sb0', '5', '0'], ['L0', '5', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 5 0
L0 5 IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 5 0
L0 5 IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0']
PCC-50865 violations

action  0  : node on 2
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 1
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 3
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 0
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right']
state child 3 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 1 cumulate planning time: 1
sim.current.step 2
root offset is:  1
['VIN - C - Sb - L - VOUT', 'VIN - C - GND', 'VOUT - L - Sb - GND']
[['Sb0', '0', '7'], ['C0', 'IN', '0'], ['L0', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
['VIN - Sb - VOUT', 'VIN - C - Sb - GND', 'VOUT - Sb - C - Sb - GND']
[['Sb0', '6', '0'], ['C0', 'IN', '6'], ['Sb1', 'IN', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'Rb1': [1], 'Ra1': [100000]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'Rb1', 'Ra1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000)]
0.1 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} -200 -300.0 -100.0
0 0
0.2 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} -200 -300.0 -100.0
0 0
0.3 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} -200 -300.0 -100.0
0 0
0.4 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -200 -300.0 -100.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -200 -300.0 -100.0
0 0
0.6 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.9 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '8', '0'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '8', '0'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 8 0', 'C0 OUT 0', 'C1 IN 8', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 8 0', 'C0 OUT 0', 'C1 IN 8', '']
[['Sb0', '8', '0'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 8 0
C0 OUT 0
C1 IN 8

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 8 0
C0 OUT 0
C1 IN 8

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '8', '0'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '8', '0'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 8 0', 'C0 OUT 0', 'C1 IN 8', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 8 0', 'C0 OUT 0', 'C1 IN 8', '']
[['Sb0', '8', '0'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 8 0
C0 OUT 0
C1 IN 8

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 8 0
C0 OUT 0
C1 IN 8

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '8', '0'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '8', '0'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 8 0', 'C0 OUT 0', 'C1 IN 8', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 8 0', 'C0 OUT 0', 'C1 IN 8', '']
[['Sb0', '8', '0'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 8 0
C0 OUT 0
C1 IN 8

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 8 0
C0 OUT 0
C1 IN 8

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - Sb - C - VOUT', 'VIN - Sb - L - GND', 'VOUT - C - L - GND']
[['Sb0', '8', 'IN'], ['C0', '8', 'OUT'], ['L0', '0', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
['VIN - C - VOUT', 'VIN - C - Sa - Sb - GND', 'VOUT - Sa - Sb - GND']
[['Sb0', '0', '7'], ['C0', 'OUT', 'IN'], ['Sa0', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
['VIN - Sa - Sb - VOUT', 'VIN - Sa - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', '7'], ['C0', '7', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
0.1 ['89', '89']
{'efficiency': 0.89, 'output_voltage': 89.0} -200 -300.0 -100.0
0 0
0.2 ['93', '94']
{'efficiency': 0.93, 'output_voltage': 94.0} -200 -300.0 -100.0
0 0
0.3 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} -200 -300.0 -100.0
0 0
0.4 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} -200 -300.0 -100.0
0 0
0.5 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} -200 -300.0 -100.0
0 0
0.6 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} -200 -300.0 -100.0
0 0
0.7 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} -200 -300.0 -100.0
0 0
0.8 ['93', '93']
{'efficiency': 0.93, 'output_voltage': 93.0} -200 -300.0 -100.0
0 0
0.9 ['89', '89']
{'efficiency': 0.89, 'output_voltage': 89.0} -200 -300.0 -100.0
0 0
action  0  : node on 3
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 0
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 1
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 2
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 3 graph: defaultdict(<class 'set'>, {})
title adding node L
instant reward: 0 cumulate reward:  0 planning time: 3 cumulate planning time: 4
sim.current.step 3
root offset is:  1
['VIN - Sb - L - VOUT', 'VIN - C - GND', 'VOUT - L - Sb - C - GND']
[['Sb0', '8', 'IN'], ['C0', '0', 'IN'], ['L0', 'OUT', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : edge on [0, 6]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}})
action  2  : edge on [0, 8]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}})
action  3  : edge on [0, 7]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}})
action  4  : edge on [0, 4]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}})
action  5  : edge on [0, 3]
action child  5  avg_return: 0.0
state child  5  reward: 0
state  5 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 5 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}})
action  6  : edge on [0, 5]
action child  6  avg_return: 0.0
state child  6  reward: 0
state  6 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 6 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 4
sim.current.step 4
root offset is:  1
action  0  : edge on [1, 3]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 0 graph: defaultdict(<class 'set'>, {1: {3}, 3: {1}})
action  1  : edge on [1, 6]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 1 graph: defaultdict(<class 'set'>, {1: {6}, 6: {1}})
action  2  : edge on [1, 5]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 2 graph: defaultdict(<class 'set'>, {1: {5}, 5: {1}})
action  3  : edge on [1, 4]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 3 graph: defaultdict(<class 'set'>, {1: {4}, 4: {1}})
action  4  : edge on [1, 8]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 4 graph: defaultdict(<class 'set'>, {1: {8}, 8: {1}})
action  5  : edge on [-1, -1]
action child  5  avg_return: 0.0
state child  5  reward: 0
state  5 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 5 graph: defaultdict(<class 'set'>, {})
action  6  : edge on [1, 7]
action child  6  avg_return: 0.0
state child  6  reward: 0
state  6 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 6 graph: defaultdict(<class 'set'>, {1: {7}, 7: {1}})
title connecting VIN and Sb0-left
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 4
sim.current.step 5
root offset is:  1
action  0  : edge on [2, 7]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 0 graph: defaultdict(<class 'set'>, {1: {3}, 3: {1}, 2: {7}, 7: {2}})
action  1  : edge on [2, 5]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 1 graph: defaultdict(<class 'set'>, {1: {3}, 3: {1}, 2: {5}, 5: {2}})
action  2  : edge on [2, 6]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 2 graph: defaultdict(<class 'set'>, {1: {3}, 3: {1}, 2: {6}, 6: {2}})
action  3  : edge on [2, 8]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 3 graph: defaultdict(<class 'set'>, {1: {3}, 3: {1}, 2: {8}, 8: {2}})
action  4  : edge on [-1, -1]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 4 graph: defaultdict(<class 'set'>, {1: {3}, 3: {1}})
action  5  : edge on [2, 4]
action child  5  avg_return: 0.0
state child  5  reward: 0
state  5 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 5 graph: defaultdict(<class 'set'>, {1: {3}, 3: {1}, 2: {4}, 4: {2}})
title connecting VOUT and L0-left
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 4
sim.current.step 6
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 0 graph: defaultdict(<class 'set'>, {1: {3}, 3: {1}, 2: {7}, 7: {2}})
action  1  : edge on [3, 6]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 1 graph: defaultdict(<class 'set'>, {1: {3}, 3: {1, 6}, 2: {7}, 7: {2}, 6: {3}})
action  2  : edge on [3, 5]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 2 graph: defaultdict(<class 'set'>, {1: {3}, 3: {1, 5}, 2: {7}, 7: {2}, 5: {3}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 4
sim.current.step 7
root offset is:  1
action  0  : edge on [4, 7]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 0 graph: defaultdict(<class 'set'>, {1: {3}, 3: {1}, 2: {7}, 7: {2, 4}, 4: {7}})
action  1  : edge on [4, 5]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 1 graph: defaultdict(<class 'set'>, {1: {3}, 3: {1}, 2: {7}, 7: {2}, 4: {5}, 5: {4}})
action  2  : edge on [4, 8]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 2 graph: defaultdict(<class 'set'>, {1: {3}, 3: {1}, 2: {7}, 7: {2}, 4: {8}, 8: {4}})
action  3  : edge on [-1, -1]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 3 graph: defaultdict(<class 'set'>, {1: {3}, 3: {1}, 2: {7}, 7: {2}})
action  4  : edge on [4, 6]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 4 graph: defaultdict(<class 'set'>, {1: {3}, 3: {1}, 2: {7}, 7: {2}, 4: {6}, 6: {4}})
title connecting Sb0-right and L0-left
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 4
sim.current.step 8
root offset is:  1
action  0  : edge on [5, 8]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 0 graph: defaultdict(<class 'set'>, {1: {3}, 3: {1}, 2: {7}, 7: {2, 4}, 4: {7}, 5: {8}, 8: {5}})
action  1  : edge on [-1, -1]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 1 graph: defaultdict(<class 'set'>, {1: {3}, 3: {1}, 2: {7}, 7: {2, 4}, 4: {7}})
action  2  : edge on [5, 7]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 2 graph: defaultdict(<class 'set'>, {1: {3}, 3: {1}, 2: {7}, 7: {2, 4, 5}, 4: {7}, 5: {7}})
title connecting C0-left and L0-right
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 4
sim.current.step 9
root offset is:  1
action  0  : edge on [6, 7]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 0 graph: defaultdict(<class 'set'>, {1: {3}, 3: {1}, 2: {7}, 7: {2, 4, 6}, 4: {7}, 5: {8}, 8: {5}, 6: {7}})
action  1  : edge on [-1, -1]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 1 graph: defaultdict(<class 'set'>, {1: {3}, 3: {1}, 2: {7}, 7: {2, 4}, 4: {7}, 5: {8}, 8: {5}})
title connecting C0-right and L0-left
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 4
sim.current.step 10
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 0 graph: defaultdict(<class 'set'>, {1: {3}, 3: {1}, 2: {7}, 7: {2, 4, 6}, 4: {7}, 5: {8}, 8: {5}, 6: {7}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 4
sim.current.step 11
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 0 graph: defaultdict(<class 'set'>, {1: {3}, 3: {1}, 2: {7}, 7: {2, 4, 6}, 4: {7}, 5: {8}, 8: {5}, 6: {7}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 4
effis of topo: [{'parameter': 'None', 'efficiency': 0, 'output_voltage': -500}]
#####################Game: 0   steps:  12   average cumulate reward:  0
title result with parameter:None 
-1 , 20 : 12.0
[{'parameter': 'None', 'efficiency': 0, 'output_voltage': -500}]
figures are saved in:figures/2021-03-18-11-39-41/

outputs are saved in:Results/mutitest_-200-2021-03-18-11-39-41-50865.txt

figures already existed
Results already existed
261
194
1746
261
194
find
OrderedDict([('L0', ['N-L0-Sb0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-L0-Sb0'])])
figures/2021-03-18-11-39-50/ created
Viz/TreeStructures2021-03-18-11-39-50-50865/ created
max depth is -1 ,trajectory is 20 every thread has  20  trajectories

path with frequency:
('VIN - L - Sb - GND', 0.1447)
('VIN - L - Sa - VOUT', 0.1214)
('VIN - L - Sb - VOUT', 0.0998)
('VIN - Sa - L - VOUT', 0.0914)
('VIN - Sb - L - VOUT', 0.0914)
('VIN - L - Sa - GND', 0.0906)
('VOUT - Sb - Sa - GND', 0.0763)
('VOUT - Sa - Sb - GND', 0.0747)
('VIN - Sa - Sb - VOUT', 0.074)
('VIN - Sb - Sa - VOUT', 0.0707)
('VOUT - L - Sa - GND', 0.0671)
('VIN - L - Sa - Sa - VOUT', 0.065)
('VIN - Sa - L - GND', 0.0612)
('VIN - C - VOUT', 0.0583)
('VOUT - Sb - L - GND', 0.0579)
('VIN - Sb - L - GND', 0.0571)
('VOUT - Sa - Sa - Sb - GND', 0.0549)
('VOUT - Sa - L - GND', 0.0529)
('VIN - Sb - Sa - GND', 0.048)
('VIN - Sa - Sb - GND', 0.043)
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
sim.current.step 0
root offset is:  1
['Sa']
['Sa', 'L']
['Sb']
['Sb', 'L']
['Sa', 'L']
['Sb', 'Sa']
['Sa', 'Sb']
['Sb', 'Sb']
['Sa', 'C']
['VIN - Sa - VOUT', 'VIN - C - C - GND', 'VOUT - Sa - C - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', '8', 'IN'], ['C1', '0', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
0.1 [0, -500]
{'efficiency': 0.0, 'output_voltage': -500.0} -200 -300.0 -100.0
0 0
0.2 [0, -500]
{'efficiency': 0.0, 'output_voltage': -500.0} -200 -300.0 -100.0
0 0
0.3 [0, -500]
{'efficiency': 0.0, 'output_voltage': -500.0} -200 -300.0 -100.0
0 0
0.4 [0, -500]
{'efficiency': 0.0, 'output_voltage': -500.0} -200 -300.0 -100.0
0 0
0.5 [0, -500]
{'efficiency': 0.0, 'output_voltage': -500.0} -200 -300.0 -100.0
0 0
0.6 [0, -500]
{'efficiency': 0.0, 'output_voltage': -500.0} -200 -300.0 -100.0
0 0
0.7 [0, -500]
{'efficiency': 0.0, 'output_voltage': -500.0} -200 -300.0 -100.0
0 0
0.8 [0, -500]
{'efficiency': 0.0, 'output_voltage': -500.0} -200 -300.0 -100.0
0 0
0.9 [0, -500]
{'efficiency': 0.0, 'output_voltage': -500.0} -200 -300.0 -100.0
0 0
['Sb', 'L']
['Sa', 'Sa']
['Sb', 'C']
['VIN - C - Sb - Sa - VOUT', 'VIN - C - GND', 'VOUT - Sa - Sb - GND']
[['Sb0', '6', '0'], ['Sa0', 'OUT', '6'], ['C0', 'IN', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
['VIN - Sb - C - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - C - Sa - GND']
[['Sa0', '0', '8'], ['C0', '8', 'OUT'], ['Sb0', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
action  0  : node on 0
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 1
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 0
sim.current.step 1
root offset is:  1
['VIN - L - Sa - VOUT', 'VIN - L - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'OUT', '7'], ['L0', '7', 'IN'], ['C0', '7', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -200 -300.0 -100.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -200 -300.0 -100.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} -200 -300.0 -100.0
0 0
0.8 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} -200 -300.0 -100.0
0 0
0.9 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} -200 -300.0 -100.0
0 0
['VIN - L - L - VOUT', 'VIN - L - Sa - GND', 'VOUT - L - Sa - GND']
[['Sa0', '8', '0'], ['L0', 'OUT', '8'], ['L1', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100)]
0.1 ['98', '99']
{'efficiency': 0.98, 'output_voltage': 99.0} -200 -300.0 -100.0
0 0
0.2 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} -200 -300.0 -100.0
0 0
0.3 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} -200 -300.0 -100.0
0 0
0.4 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} -200 -300.0 -100.0
0 0
0.5 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} -200 -300.0 -100.0
0 0
0.6 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} -200 -300.0 -100.0
0 0
0.7 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} -200 -300.0 -100.0
0 0
0.8 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} -200 -300.0 -100.0
0 0
0.9 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} -200 -300.0 -100.0
0 0
['VIN - Sb - VOUT', 'VIN - Sb - Sb - Sa - GND', 'VOUT - Sb - Sa - GND']
[['Sa0', '6', '0'], ['Sb0', 'OUT', '6'], ['Sb1', 'IN', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'Rb1': [1], 'Ra1': [100000]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'Rb1', 'Ra1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 1, 100000), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 1, 100000), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 1, 100000), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 1, 100000), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 1, 100000), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 1, 100000), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 1, 100000), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 1, 100000), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 1, 100000)]
0.1 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} -200 -300.0 -100.0
0 0
0.2 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} -200 -300.0 -100.0
0 0
0.3 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} -200 -300.0 -100.0
0 0
0.4 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -200 -300.0 -100.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -200 -300.0 -100.0
0 0
0.6 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
0.9 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -200 -300.0 -100.0
0 0
action  0  : node on 3
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 1
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 2
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 0
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 3 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 0
sim.current.step 2
root offset is:  1
['VIN - Sa - L - VOUT', 'VIN - Sa - L - C - GND', 'VOUT - C - GND']
[['Sa0', '5', 'IN'], ['L0', '5', 'OUT'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10)]
['VIN - Sa - L - VOUT', 'VIN - Sa - L - C - GND', 'VOUT - C - GND']
[['Sa0', '5', 'IN'], ['L0', '5', 'OUT'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 5 IN', 'L0 5 OUT', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 5 IN', 'L0 5 OUT', 'C0 OUT 0', '']
[['Sa0', '5', 'IN'], ['L0', '5', 'OUT'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 5 IN
L0 5 OUT
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 5 IN
L0 5 OUT
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0']
PCC-50865 violations

['VIN - Sa - L - VOUT', 'VIN - Sa - L - C - GND', 'VOUT - C - GND']
[['Sa0', '5', 'IN'], ['L0', '5', 'OUT'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10)]
['VIN - Sa - L - VOUT', 'VIN - Sa - L - C - GND', 'VOUT - C - GND']
[['Sa0', '5', 'IN'], ['L0', '5', 'OUT'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 5 IN', 'L0 5 OUT', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 5 IN', 'L0 5 OUT', 'C0 OUT 0', '']
[['Sa0', '5', 'IN'], ['L0', '5', 'OUT'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 5 IN
L0 5 OUT
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 5 IN
L0 5 OUT
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0']
PCC-50865 violations

['VIN - Sa - L - VOUT', 'VIN - Sa - L - C - GND', 'VOUT - C - GND']
[['Sa0', '5', 'IN'], ['L0', '5', 'OUT'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10)]
['VIN - Sa - L - VOUT', 'VIN - Sa - L - C - GND', 'VOUT - C - GND']
[['Sa0', '5', 'IN'], ['L0', '5', 'OUT'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 5 IN', 'L0 5 OUT', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 5 IN', 'L0 5 OUT', 'C0 OUT 0', '']
[['Sa0', '5', 'IN'], ['L0', '5', 'OUT'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 5 IN
L0 5 OUT
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 5 IN
L0 5 OUT
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0']
PCC-50865 violations

action  0  : node on 3
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'L1-left', 'L1-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 1
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'Sb0-left', 'Sb0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 0
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'Sa1-left', 'Sa1-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 2
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'C0-left', 'C0-right']
state child 3 graph: defaultdict(<class 'set'>, {})
title adding node L
instant reward: 0 cumulate reward:  0 planning time: 5 cumulate planning time: 5
sim.current.step 3
root offset is:  1
['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'OUT', 'IN'], ['L0', 'OUT', '8'], ['L1', '0', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100)]
['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'OUT', 'IN'], ['L0', 'OUT', '8'], ['L1', '0', '8']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'L0 OUT 8', 'L1 0 8', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'L0 OUT 8', 'L1 0 8', '']
[['Sa0', 'OUT', 'IN'], ['L0', 'OUT', '8'], ['L1', '0', '8']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
L0 OUT 8
L1 0 8

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
L0 OUT 8
L1 0 8

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'OUT', 'IN'], ['L0', 'OUT', '8'], ['L1', '0', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100)]
['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'OUT', 'IN'], ['L0', 'OUT', '8'], ['L1', '0', '8']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'L0 OUT 8', 'L1 0 8', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'L0 OUT 8', 'L1 0 8', '']
[['Sa0', 'OUT', 'IN'], ['L0', 'OUT', '8'], ['L1', '0', '8']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
L0 OUT 8
L1 0 8

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
L0 OUT 8
L1 0 8

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'OUT', 'IN'], ['L0', 'OUT', '8'], ['L1', '0', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100)]
['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'OUT', 'IN'], ['L0', 'OUT', '8'], ['L1', '0', '8']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'L0 OUT 8', 'L1 0 8', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'L0 OUT 8', 'L1 0 8', '']
[['Sa0', 'OUT', 'IN'], ['L0', 'OUT', '8'], ['L1', '0', '8']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
L0 OUT 8
L1 0 8

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
L0 OUT 8
L1 0 8

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'OUT', 'IN'], ['L0', 'OUT', '8'], ['L1', '0', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100)]
['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'OUT', 'IN'], ['L0', 'OUT', '8'], ['L1', '0', '8']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'L0 OUT 8', 'L1 0 8', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'L0 OUT 8', 'L1 0 8', '']
[['Sa0', 'OUT', 'IN'], ['L0', 'OUT', '8'], ['L1', '0', '8']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
L0 OUT 8
L1 0 8

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
L0 OUT 8
L1 0 8

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'OUT', 'IN'], ['L0', 'OUT', '8'], ['L1', '0', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100)]
['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'OUT', 'IN'], ['L0', 'OUT', '8'], ['L1', '0', '8']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'L0 OUT 8', 'L1 0 8', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'L0 OUT 8', 'L1 0 8', '']
[['Sa0', 'OUT', 'IN'], ['L0', 'OUT', '8'], ['L1', '0', '8']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
L0 OUT 8
L1 0 8

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
L0 OUT 8
L1 0 8

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'OUT', 'IN'], ['L0', '0', '7'], ['L1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100)]
['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'OUT', 'IN'], ['L0', '0', '7'], ['L1', '7', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'L0 0 7', 'L1 7 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'L0 0 7', 'L1 7 OUT', '']
[['Sa0', 'OUT', 'IN'], ['L0', '0', '7'], ['L1', '7', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
L0 0 7
L1 7 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
L0 0 7
L1 7 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'OUT', 'IN'], ['L0', '0', '7'], ['L1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100)]
['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'OUT', 'IN'], ['L0', '0', '7'], ['L1', '7', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'L0 0 7', 'L1 7 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'L0 0 7', 'L1 7 OUT', '']
[['Sa0', 'OUT', 'IN'], ['L0', '0', '7'], ['L1', '7', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
L0 0 7
L1 7 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
L0 0 7
L1 7 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'OUT', 'IN'], ['L0', '0', '7'], ['L1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100)]
['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'OUT', 'IN'], ['L0', '0', '7'], ['L1', '7', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'L0 0 7', 'L1 7 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'L0 0 7', 'L1 7 OUT', '']
[['Sa0', 'OUT', 'IN'], ['L0', '0', '7'], ['L1', '7', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
L0 0 7
L1 7 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
L0 0 7
L1 7 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'OUT', 'IN'], ['L0', '0', '7'], ['L1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100)]
['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'OUT', 'IN'], ['L0', '0', '7'], ['L1', '7', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'L0 0 7', 'L1 7 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'L0 0 7', 'L1 7 OUT', '']
[['Sa0', 'OUT', 'IN'], ['L0', '0', '7'], ['L1', '7', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
L0 0 7
L1 7 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
L0 0 7
L1 7 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'OUT', 'IN'], ['L0', '0', '7'], ['L1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100)]
['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'OUT', 'IN'], ['L0', '0', '7'], ['L1', '7', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'L0 0 7', 'L1 7 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'L0 0 7', 'L1 7 OUT', '']
[['Sa0', 'OUT', 'IN'], ['L0', '0', '7'], ['L1', '7', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
L0 0 7
L1 7 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
L0 0 7
L1 7 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1']
PCC-50865 violations

['VIN - L - Sa - VOUT', 'VIN - L - L - GND', 'VOUT - Sa - L - GND']
[['Sa0', 'OUT', '8'], ['L0', 'IN', '8'], ['L1', '0', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
['VIN - Sa - L - VOUT', 'VIN - Sa - L - GND', 'VOUT - L - L - GND']
[['Sa0', '7', 'IN'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -200 -300.0 -100.0
0 0
['VIN - L - L - VOUT', 'VIN - L - Sa - GND', 'VOUT - L - Sa - GND']
[['Sa0', '7', '0'], ['L0', 'IN', '7'], ['L1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100)]
0.1 ['98', '99']
{'efficiency': 0.98, 'output_voltage': 99.0} -200 -300.0 -100.0
0 0
0.2 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} -200 -300.0 -100.0
0 0
0.3 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} -200 -300.0 -100.0
0 0
0.4 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} -200 -300.0 -100.0
0 0
0.5 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} -200 -300.0 -100.0
0 0
0.6 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} -200 -300.0 -100.0
0 0
0.7 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} -200 -300.0 -100.0
0 0
0.8 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} -200 -300.0 -100.0
0 0
0.9 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} -200 -300.0 -100.0
0 0
action  0  : edge on [0, 4]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'L1-left', 'L1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}})
action  1  : edge on [0, 8]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'L1-left', 'L1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}})
action  2  : edge on [-1, -1]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'L1-left', 'L1-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : edge on [0, 3]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'L1-left', 'L1-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}})
action  4  : edge on [0, 7]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'L1-left', 'L1-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}})
action  5  : edge on [0, 6]
action child  5  avg_return: 0.0
state child  5  reward: 0
state  5 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'L1-left', 'L1-right']
state child 5 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}})
action  6  : edge on [0, 5]
action child  6  avg_return: 0.0
state child  6  reward: 0
state  6 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'L1-left', 'L1-right']
state child 6 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}})
title connecting GND and Sa0-right
instant reward: 0 cumulate reward:  0 planning time: 8 cumulate planning time: 13
sim.current.step 4
root offset is:  1
action  0  : edge on [1, 7]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'L1-left', 'L1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1}})
action  1  : edge on [1, 8]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'L1-left', 'L1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {8}, 8: {1}})
action  2  : edge on [1, 5]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'L1-left', 'L1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {5}, 5: {1}})
action  3  : edge on [1, 6]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'L1-left', 'L1-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {6}, 6: {1}})
action  4  : edge on [-1, -1]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'L1-left', 'L1-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}})
title connecting VIN and L1-left
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 13
sim.current.step 5
root offset is:  1
action  0  : edge on [2, 6]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'L1-left', 'L1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1}, 2: {6}, 6: {2}})
action  1  : edge on [-1, -1]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'L1-left', 'L1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1}})
action  2  : edge on [2, 5]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'L1-left', 'L1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1}, 2: {5}, 5: {2}})
title connecting VOUT and L0-right
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 13
sim.current.step 6
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'L1-left', 'L1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1}, 2: {6}, 6: {2}})
action  1  : edge on [3, 8]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'L1-left', 'L1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1}, 2: {6}, 6: {2}, 3: {8}, 8: {3}})
action  2  : edge on [3, 5]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'L1-left', 'L1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1}, 2: {6}, 6: {2}, 3: {5}, 5: {3}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 13
sim.current.step 7
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'L1-left', 'L1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1}, 2: {6}, 6: {2}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 13
sim.current.step 8
root offset is:  1
action  0  : edge on [5, 8]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'L1-left', 'L1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1}, 2: {6}, 6: {2}, 5: {8}, 8: {5}})
action  1  : edge on [-1, -1]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'L1-left', 'L1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1}, 2: {6}, 6: {2}})
title connecting L0-left and L1-right
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 13
sim.current.step 9
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'L1-left', 'L1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1}, 2: {6}, 6: {2}, 5: {8}, 8: {5}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 13
sim.current.step 10
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'L1-left', 'L1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1}, 2: {6}, 6: {2}, 5: {8}, 8: {5}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 13
sim.current.step 11
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'L1-left', 'L1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1}, 2: {6}, 6: {2}, 5: {8}, 8: {5}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 13
effis of topo: [{'parameter': 'None', 'efficiency': 0, 'output_voltage': -500}]
#####################Game: 0   steps:  12   average cumulate reward:  0
title result with parameter:None 
-1 , 20 : 12.0
[{'parameter': 'None', 'efficiency': 0, 'output_voltage': -500}]
figures are saved in:figures/2021-03-18-11-39-50/

outputs are saved in:Results/mutitest_-200-2021-03-18-11-39-50-50865.txt

figures already existed
Results already existed
261
194
1746
261
194
find
OrderedDict([('L0', ['N-L0-Sb0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-L0-Sb0'])])
figures/2021-03-18-11-40-10/ created
Viz/TreeStructures2021-03-18-11-40-10-50865/ created
max depth is -1 ,trajectory is 20 every thread has  20  trajectories

path with frequency:
('VIN - L - Sb - GND', 0.1447)
('VIN - L - Sa - VOUT', 0.1214)
('VIN - L - Sb - VOUT', 0.0998)
('VIN - Sa - L - VOUT', 0.0914)
('VIN - Sb - L - VOUT', 0.0914)
('VIN - L - Sa - GND', 0.0906)
('VOUT - Sb - Sa - GND', 0.0763)
('VOUT - Sa - Sb - GND', 0.0747)
('VIN - Sa - Sb - VOUT', 0.074)
('VIN - Sb - Sa - VOUT', 0.0707)
('VOUT - L - Sa - GND', 0.0671)
('VIN - L - Sa - Sa - VOUT', 0.065)
('VIN - Sa - L - GND', 0.0612)
('VIN - C - VOUT', 0.0583)
('VOUT - Sb - L - GND', 0.0579)
('VIN - Sb - L - GND', 0.0571)
('VOUT - Sa - Sa - Sb - GND', 0.0549)
('VOUT - Sa - L - GND', 0.0529)
('VIN - Sb - Sa - GND', 0.048)
('VIN - Sa - Sb - GND', 0.043)
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
sim.current.step 0
root offset is:  1
['Sa']
['Sa', 'L']
['VIN - Sa - L - VOUT', 'VIN - C - GND', 'VOUT - L - Sa - C - GND']
[['Sa0', 'IN', '5'], ['L0', '5', 'OUT'], ['C0', '0', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
['Sb']
['Sb', 'Sa']
['Sa', 'Sa']
['Sb', 'Sb']
['Sa', 'Sb']
['Sb', 'Sa']
['Sa', 'C']
['VIN - L - Sa - VOUT', 'VIN - L - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '7'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100)]
['VIN - L - Sa - VOUT', 'VIN - L - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '7'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT 7', 'C0 OUT 0', 'L0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT 7', 'C0 OUT 0', 'L0 7 IN', '']
[['Sa0', 'OUT', '7'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT 7
C0 OUT 0
L0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT 7
C0 OUT 0
L0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'L0']
PCC-50865 violations

['VIN - L - Sa - VOUT', 'VIN - L - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '7'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100)]
['VIN - L - Sa - VOUT', 'VIN - L - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '7'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT 7', 'C0 OUT 0', 'L0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT 7', 'C0 OUT 0', 'L0 7 IN', '']
[['Sa0', 'OUT', '7'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT 7
C0 OUT 0
L0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT 7
C0 OUT 0
L0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'L0']
PCC-50865 violations

['VIN - L - Sa - VOUT', 'VIN - L - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '7'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100)]
['VIN - L - Sa - VOUT', 'VIN - L - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '7'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT 7', 'C0 OUT 0', 'L0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT 7', 'C0 OUT 0', 'L0 7 IN', '']
[['Sa0', 'OUT', '7'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT 7
C0 OUT 0
L0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT 7
C0 OUT 0
L0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'L0']
PCC-50865 violations

['Sb', 'C']
['VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VOUT - Sa - Sb - C - GND']
[['Sb0', '5', 'IN'], ['C0', '5', '0'], ['Sa0', 'IN', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} -50 -75.0 -25.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} -50 -75.0 -25.0
0 0
0.9 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} -50 -75.0 -25.0
0 0
['Sa', 'L']
['Sb', 'L']
['VIN - C - L - VOUT', 'VIN - C - Sb - GND', 'VOUT - L - Sb - GND']
[['Sb0', '0', '7'], ['L0', 'OUT', '7'], ['C0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
['VIN - Sa - VOUT', 'VIN - Sa - L - Sa - GND', 'VOUT - L - Sa - GND']
[['Sa0', 'OUT', 'IN'], ['Sa1', '8', '0'], ['L0', 'OUT', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'Ra1': [100000], 'Rb1': [1], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'Ra1', 'Rb1', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100)]
0.1 ['97', '98']
{'efficiency': 0.97, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.4 ['97', '98']
{'efficiency': 0.97, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} -50 -75.0 -25.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} -50 -75.0 -25.0
0 0
0.9 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} -50 -75.0 -25.0
0 0
action  0  : node on 0
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 1
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 5 cumulate planning time: 5
sim.current.step 1
root offset is:  1
['VIN - C - VOUT', 'VIN - C - Sa - L - GND', 'VOUT - Sa - L - GND']
[['Sa0', '6', 'OUT'], ['L0', '0', '6'], ['C0', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
['VIN - Sa - VOUT', 'VIN - L - L - GND', 'VOUT - Sa - L - L - GND']
[['Sa0', 'OUT', 'IN'], ['L0', '7', 'IN'], ['L1', '7', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100)]
['VIN - Sa - VOUT', 'VIN - L - L - GND', 'VOUT - Sa - L - L - GND']
[['Sa0', 'OUT', 'IN'], ['L0', '7', 'IN'], ['L1', '7', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'L0 7 IN', 'L1 7 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'L0 7 IN', 'L1 7 0', '']
[['Sa0', 'OUT', 'IN'], ['L0', '7', 'IN'], ['L1', '7', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
L0 7 IN
L1 7 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
L0 7 IN
L1 7 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - L - L - GND', 'VOUT - Sa - L - L - GND']
[['Sa0', 'OUT', 'IN'], ['L0', '7', 'IN'], ['L1', '7', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100)]
['VIN - Sa - VOUT', 'VIN - L - L - GND', 'VOUT - Sa - L - L - GND']
[['Sa0', 'OUT', 'IN'], ['L0', '7', 'IN'], ['L1', '7', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'L0 7 IN', 'L1 7 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'L0 7 IN', 'L1 7 0', '']
[['Sa0', 'OUT', 'IN'], ['L0', '7', 'IN'], ['L1', '7', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
L0 7 IN
L1 7 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
L0 7 IN
L1 7 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - L - L - GND', 'VOUT - Sa - L - L - GND']
[['Sa0', 'OUT', 'IN'], ['L0', '7', 'IN'], ['L1', '7', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100)]
['VIN - Sa - VOUT', 'VIN - L - L - GND', 'VOUT - Sa - L - L - GND']
[['Sa0', 'OUT', 'IN'], ['L0', '7', 'IN'], ['L1', '7', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'L0 7 IN', 'L1 7 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'L0 7 IN', 'L1 7 0', '']
[['Sa0', 'OUT', 'IN'], ['L0', '7', 'IN'], ['L1', '7', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
L0 7 IN
L1 7 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
L0 7 IN
L1 7 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - L - L - GND', 'VOUT - Sa - L - L - GND']
[['Sa0', 'OUT', 'IN'], ['L0', '7', 'IN'], ['L1', '7', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100)]
['VIN - Sa - VOUT', 'VIN - L - L - GND', 'VOUT - Sa - L - L - GND']
[['Sa0', 'OUT', 'IN'], ['L0', '7', 'IN'], ['L1', '7', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'L0 7 IN', 'L1 7 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'L0 7 IN', 'L1 7 0', '']
[['Sa0', 'OUT', 'IN'], ['L0', '7', 'IN'], ['L1', '7', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
L0 7 IN
L1 7 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
L0 7 IN
L1 7 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - L - L - GND', 'VOUT - Sa - L - L - GND']
[['Sa0', 'OUT', 'IN'], ['L0', '7', 'IN'], ['L1', '7', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100)]
['VIN - Sa - VOUT', 'VIN - L - L - GND', 'VOUT - Sa - L - L - GND']
[['Sa0', 'OUT', 'IN'], ['L0', '7', 'IN'], ['L1', '7', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'L0 7 IN', 'L1 7 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'L0 7 IN', 'L1 7 0', '']
[['Sa0', 'OUT', 'IN'], ['L0', '7', 'IN'], ['L1', '7', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
L0 7 IN
L1 7 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
L0 7 IN
L1 7 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1']
PCC-50865 violations

action  0  : node on 0
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 1
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 2
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 3
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right']
state child 3 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 4 cumulate planning time: 9
sim.current.step 2
root offset is:  1
['VIN - Sa - VOUT', 'VIN - L - Sa - GND', 'VOUT - Sa - L - Sa - GND']
[['Sa0', 'IN', 'OUT'], ['Sa1', '0', '8'], ['L0', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'Ra1': [100000], 'Rb1': [1], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'Ra1', 'Rb1', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100)]
0.1 ['97', '98']
{'efficiency': 0.97, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.4 ['97', '98']
{'efficiency': 0.97, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} -50 -75.0 -25.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} -50 -75.0 -25.0
0 0
0.9 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} -50 -75.0 -25.0
0 0
['VIN - Sa - Sa - VOUT', 'VIN - Sa - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', '8'], ['Sa1', '8', 'OUT'], ['C0', '0', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'Ra1': [100000], 'Rb1': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'Ra1', 'Rb1', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10)]
0.1 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.2 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.3 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.4 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} -50 -75.0 -25.0
0 0
0.5 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} -50 -75.0 -25.0
0 0
0.6 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} -50 -75.0 -25.0
0 0
0.7 ['93', '93']
{'efficiency': 0.93, 'output_voltage': 93.0} -50 -75.0 -25.0
0 0
0.8 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} -50 -75.0 -25.0
0 0
0.9 ['82', '82']
{'efficiency': 0.82, 'output_voltage': 82.0} -50 -75.0 -25.0
0 0
action  0  : node on 0
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right', 'Sa2-left', 'Sa2-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 3
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right', 'L0-left', 'L0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 2
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right', 'C0-left', 'C0-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 1
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right', 'Sb0-left', 'Sb0-right']
state child 3 graph: defaultdict(<class 'set'>, {})
title adding node Sa
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 9
sim.current.step 3
root offset is:  1
action  0  : edge on [0, 3]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right', 'Sa2-left', 'Sa2-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}})
action  1  : edge on [-1, -1]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right', 'Sa2-left', 'Sa2-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : edge on [0, 8]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right', 'Sa2-left', 'Sa2-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}})
action  3  : edge on [0, 4]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right', 'Sa2-left', 'Sa2-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}})
action  4  : edge on [0, 6]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right', 'Sa2-left', 'Sa2-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}})
action  5  : edge on [0, 7]
action child  5  avg_return: 0.0
state child  5  reward: 0
state  5 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right', 'Sa2-left', 'Sa2-right']
state child 5 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}})
action  6  : edge on [0, 5]
action child  6  avg_return: 0.0
state child  6  reward: 0
state  6 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right', 'Sa2-left', 'Sa2-right']
state child 6 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}})
title connecting GND and Sa0-left
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 9
sim.current.step 4
root offset is:  1
action  0  : edge on [1, 7]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right', 'Sa2-left', 'Sa2-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {7}, 7: {1}})
action  1  : edge on [1, 5]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right', 'Sa2-left', 'Sa2-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {5}, 5: {1}})
action  2  : edge on [-1, -1]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right', 'Sa2-left', 'Sa2-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}})
action  3  : edge on [1, 8]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right', 'Sa2-left', 'Sa2-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {8}, 8: {1}})
action  4  : edge on [1, 6]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right', 'Sa2-left', 'Sa2-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {6}, 6: {1}})
title connecting VIN and Sa2-left
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 9
sim.current.step 5
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right', 'Sa2-left', 'Sa2-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {7}, 7: {1}})
action  1  : edge on [2, 6]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right', 'Sa2-left', 'Sa2-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {7}, 7: {1}, 2: {6}, 6: {2}})
action  2  : edge on [2, 8]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right', 'Sa2-left', 'Sa2-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {7}, 7: {1}, 2: {8}, 8: {2}})
action  3  : edge on [2, 5]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right', 'Sa2-left', 'Sa2-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {7}, 7: {1}, 2: {5}, 5: {2}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 9
sim.current.step 6
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right', 'Sa2-left', 'Sa2-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {7}, 7: {1}})
action  1  : edge on [3, 5]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right', 'Sa2-left', 'Sa2-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0, 5}, 1: {7}, 7: {1}, 5: {3}})
action  2  : edge on [3, 6]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right', 'Sa2-left', 'Sa2-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0, 6}, 1: {7}, 7: {1}, 6: {3}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 9
sim.current.step 7
root offset is:  1
action  0  : edge on [4, 6]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right', 'Sa2-left', 'Sa2-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {7}, 7: {1}, 4: {6}, 6: {4}})
action  1  : edge on [4, 5]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right', 'Sa2-left', 'Sa2-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {7}, 7: {1}, 4: {5}, 5: {4}})
action  2  : edge on [-1, -1]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right', 'Sa2-left', 'Sa2-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {7}, 7: {1}})
title connecting Sa0-right and Sa1-right
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 9
sim.current.step 8
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right', 'Sa2-left', 'Sa2-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {7}, 7: {1}, 4: {6}, 6: {4}})
action  1  : edge on [5, 8]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right', 'Sa2-left', 'Sa2-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {7}, 7: {1}, 4: {6}, 6: {4}, 5: {8}, 8: {5}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 9
sim.current.step 9
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right', 'Sa2-left', 'Sa2-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {7}, 7: {1}, 4: {6}, 6: {4}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 9
sim.current.step 10
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right', 'Sa2-left', 'Sa2-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {7}, 7: {1}, 4: {6}, 6: {4}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 9
sim.current.step 11
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right', 'Sa2-left', 'Sa2-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {7}, 7: {1}, 4: {6}, 6: {4}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 9
effis of topo: [{'parameter': 'None', 'efficiency': 0, 'output_voltage': -500}]
#####################Game: 0   steps:  12   average cumulate reward:  0
title result with parameter:None 
-1 , 20 : 12.0
[{'parameter': 'None', 'efficiency': 0, 'output_voltage': -500}]
figures are saved in:figures/2021-03-18-11-40-10/

outputs are saved in:Results/mutitest_-50-2021-03-18-11-40-10-50865.txt

figures already existed
Results already existed
261
194
1746
261
194
find
OrderedDict([('L0', ['N-L0-Sb0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-L0-Sb0'])])
figures/2021-03-18-11-40-26/ created
Viz/TreeStructures2021-03-18-11-40-26-50865/ created
max depth is -1 ,trajectory is 20 every thread has  20  trajectories

path with frequency:
('VIN - L - Sb - GND', 0.1447)
('VIN - L - Sa - VOUT', 0.1214)
('VIN - L - Sb - VOUT', 0.0998)
('VIN - Sa - L - VOUT', 0.0914)
('VIN - Sb - L - VOUT', 0.0914)
('VIN - L - Sa - GND', 0.0906)
('VOUT - Sb - Sa - GND', 0.0763)
('VOUT - Sa - Sb - GND', 0.0747)
('VIN - Sa - Sb - VOUT', 0.074)
('VIN - Sb - Sa - VOUT', 0.0707)
('VOUT - L - Sa - GND', 0.0671)
('VIN - L - Sa - Sa - VOUT', 0.065)
('VIN - Sa - L - GND', 0.0612)
('VIN - C - VOUT', 0.0583)
('VOUT - Sb - L - GND', 0.0579)
('VIN - Sb - L - GND', 0.0571)
('VOUT - Sa - Sa - Sb - GND', 0.0549)
('VOUT - Sa - L - GND', 0.0529)
('VIN - Sb - Sa - GND', 0.048)
('VIN - Sa - Sb - GND', 0.043)
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
sim.current.step 0
root offset is:  1
['Sa']
['Sa', 'C']
['Sb']
['Sb', 'L']
['Sa', 'Sb']
['Sb', 'C']
['Sa', 'Sa']
['Sb', 'L']
['Sa', 'C']
['VIN - C - VOUT', 'VIN - Sa - L - GND', 'VOUT - C - Sa - L - GND']
[['Sa0', '8', 'IN'], ['C0', 'OUT', 'IN'], ['L0', '0', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
['Sb', 'Sb']
['Sa', 'L']
['Sb', 'Sa']
['VIN - C - L - Sa - VOUT', 'VIN - C - GND', 'VOUT - Sa - L - GND']
[['Sa0', 'OUT', '8'], ['C0', '0', 'IN'], ['L0', '0', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
action  0  : node on 0
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 1
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 0
sim.current.step 1
root offset is:  1
['VIN - C - Sa - VOUT', 'VIN - C - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '8'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - Sa - VOUT', 'VIN - C - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '8'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT 8', 'C0 OUT 0', 'C1 IN 8', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT 8', 'C0 OUT 0', 'C1 IN 8', '']
[['Sa0', 'OUT', '8'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT 8
C0 OUT 0
C1 IN 8

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT 8
C0 OUT 0
C1 IN 8

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - Sa - VOUT', 'VIN - C - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '8'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - Sa - VOUT', 'VIN - C - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '8'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT 8', 'C0 OUT 0', 'C1 IN 8', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT 8', 'C0 OUT 0', 'C1 IN 8', '']
[['Sa0', 'OUT', '8'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT 8
C0 OUT 0
C1 IN 8

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT 8
C0 OUT 0
C1 IN 8

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - Sa - Sa - Sb - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', '8', '0'], ['Sa1', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} -50 -75.0 -25.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} -50 -75.0 -25.0
0 0
0.9 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} -50 -75.0 -25.0
0 0
['VIN - Sa - Sb - VOUT', 'VIN - C - GND', 'VOUT - Sb - Sa - C - GND']
[['Sa0', '6', 'IN'], ['Sb0', 'OUT', '6'], ['C0', 'IN', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
action  0  : node on 1
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 0
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 2
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 3
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right']
state child 3 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 4 cumulate planning time: 4
sim.current.step 2
root offset is:  1
['VIN - Sa - VOUT', 'VIN - Sb - L - GND', 'VOUT - Sa - Sb - L - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', '7', 'IN'], ['L0', '7', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} -50 -75.0 -25.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} -50 -75.0 -25.0
0 0
0.9 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} -50 -75.0 -25.0
0 0
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['C0', '0', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['C0', '0', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'Rb0 IN OUT', 'C0 0 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'Ra0 IN OUT', 'C0 0 OUT', '']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['C0', '0', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
Rb0 IN OUT
C0 0 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
Ra0 IN OUT
C0 0 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['C0', '0', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['C0', '0', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'Rb0 IN OUT', 'C0 0 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'Ra0 IN OUT', 'C0 0 OUT', '']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['C0', '0', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
Rb0 IN OUT
C0 0 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
Ra0 IN OUT
C0 0 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['C0', '0', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['C0', '0', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'Rb0 IN OUT', 'C0 0 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'Ra0 IN OUT', 'C0 0 OUT', '']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['C0', '0', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
Rb0 IN OUT
C0 0 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
Ra0 IN OUT
C0 0 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['C0', '0', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['C0', '0', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'Rb0 IN OUT', 'C0 0 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'Ra0 IN OUT', 'C0 0 OUT', '']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['C0', '0', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
Rb0 IN OUT
C0 0 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
Ra0 IN OUT
C0 0 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['C0', '0', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['C0', '0', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'Rb0 IN OUT', 'C0 0 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'Ra0 IN OUT', 'C0 0 OUT', '']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['C0', '0', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
Rb0 IN OUT
C0 0 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
Ra0 IN OUT
C0 0 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - Sa - Sb - Sa - GND']
[['Sa0', '0', '6'], ['Sb0', 'IN', '6'], ['Sa1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} -50 -75.0 -25.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} -50 -75.0 -25.0
0 0
0.9 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} -50 -75.0 -25.0
0 0
action  0  : node on 2
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 1
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 3
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 0
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'Sa1-left', 'Sa1-right']
state child 3 graph: defaultdict(<class 'set'>, {})
title adding node C
instant reward: 0 cumulate reward:  0 planning time: 6 cumulate planning time: 10
sim.current.step 3
root offset is:  1
['VIN - C - Sb - Sa - VOUT', 'VIN - C - GND', 'VOUT - Sa - Sb - GND']
[['Sa0', '6', 'OUT'], ['Sb0', '0', '6'], ['C0', 'IN', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['C0', '0', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['C0', '0', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'Rb0 IN OUT', 'C0 0 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'Ra0 IN OUT', 'C0 0 OUT', '']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['C0', '0', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
Rb0 IN OUT
C0 0 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
Ra0 IN OUT
C0 0 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['C0', '0', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['C0', '0', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'Rb0 IN OUT', 'C0 0 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'Ra0 IN OUT', 'C0 0 OUT', '']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['C0', '0', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
Rb0 IN OUT
C0 0 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
Ra0 IN OUT
C0 0 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['C0', '0', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['C0', '0', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'Rb0 IN OUT', 'C0 0 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'Ra0 IN OUT', 'C0 0 OUT', '']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['C0', '0', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
Rb0 IN OUT
C0 0 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
Ra0 IN OUT
C0 0 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['C0', '0', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['C0', '0', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'Rb0 IN OUT', 'C0 0 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'Ra0 IN OUT', 'C0 0 OUT', '']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['C0', '0', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
Rb0 IN OUT
C0 0 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
Ra0 IN OUT
C0 0 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['C0', '0', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['C0', '0', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'Rb0 IN OUT', 'C0 0 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'Ra0 IN OUT', 'C0 0 OUT', '']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'IN', 'OUT'], ['C0', '0', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
Rb0 IN OUT
C0 0 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
Ra0 IN OUT
C0 0 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - C - Sa - GND', 'VOUT - Sb - C - Sa - GND']
[['Sa0', '7', '0'], ['Sb0', 'IN', 'OUT'], ['C0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
0.1 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} -50 -75.0 -25.0
0 0
0.2 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} -50 -75.0 -25.0
0 0
0.3 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} -50 -75.0 -25.0
0 0
0.4 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.6 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.9 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
['VIN - Sb - Sa - C - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - C - GND']
[['Sa0', '0', '6'], ['Sb0', 'IN', '6'], ['C0', '0', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - Sa - C - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - C - GND']
[['Sa0', '0', '6'], ['Sb0', 'IN', '6'], ['C0', '0', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 0 6', 'Rb0 IN 6', 'C0 0 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 0 6', 'Ra0 IN 6', 'C0 0 OUT', '']
[['Sa0', '0', '6'], ['Sb0', 'IN', '6'], ['C0', '0', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 0 6
Rb0 IN 6
C0 0 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 0 6
Ra0 IN 6
C0 0 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - Sa - C - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - C - GND']
[['Sa0', '0', '6'], ['Sb0', 'IN', '6'], ['C0', '0', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - Sa - C - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - C - GND']
[['Sa0', '0', '6'], ['Sb0', 'IN', '6'], ['C0', '0', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 0 6', 'Rb0 IN 6', 'C0 0 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 0 6', 'Ra0 IN 6', 'C0 0 OUT', '']
[['Sa0', '0', '6'], ['Sb0', 'IN', '6'], ['C0', '0', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 0 6
Rb0 IN 6
C0 0 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 0 6
Ra0 IN 6
C0 0 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - Sa - C - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - C - GND']
[['Sa0', '0', '6'], ['Sb0', 'IN', '6'], ['C0', '0', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - Sa - C - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - C - GND']
[['Sa0', '0', '6'], ['Sb0', 'IN', '6'], ['C0', '0', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 0 6', 'Rb0 IN 6', 'C0 0 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 0 6', 'Ra0 IN 6', 'C0 0 OUT', '']
[['Sa0', '0', '6'], ['Sb0', 'IN', '6'], ['C0', '0', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 0 6
Rb0 IN 6
C0 0 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 0 6
Ra0 IN 6
C0 0 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - C - Sa - VOUT', 'VIN - C - Sb - GND', 'VOUT - Sa - Sb - GND']
[['Sa0', '7', 'OUT'], ['Sb0', '7', '0'], ['C0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
['VIN - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - Sa - Sb - GND']
[['Sa0', '6', 'IN'], ['Sb0', '0', '6'], ['C0', 'IN', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
action  0  : edge on [0, 8]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}})
action  1  : edge on [0, 6]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}})
action  2  : edge on [0, 7]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}})
action  3  : edge on [0, 5]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}})
action  4  : edge on [0, 4]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}})
action  5  : edge on [0, 3]
action child  5  avg_return: 0.0
state child  5  reward: 0
state  5 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 5 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}})
action  6  : edge on [-1, -1]
action child  6  avg_return: 0.0
state child  6  reward: 0
state  6 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 6 graph: defaultdict(<class 'set'>, {})
title connecting GND and C0-right
instant reward: 0 cumulate reward:  0 planning time: 10 cumulate planning time: 20
sim.current.step 4
root offset is:  1
['VIN - Sb - VOUT', 'VIN - Sa - C - GND', 'VOUT - Sb - Sa - C - GND']
[['Sa0', '7', 'IN'], ['Sb0', 'IN', 'OUT'], ['C0', '7', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
0.1 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} -50 -75.0 -25.0
0 0
0.2 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} -50 -75.0 -25.0
0 0
0.3 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} -50 -75.0 -25.0
0 0
0.4 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.6 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.9 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - Sb - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'IN', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.5 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.6 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.9 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'IN', 'OUT'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'IN', 'OUT'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'Rb0 IN OUT', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'Ra0 IN OUT', 'C0 OUT 0', '']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'IN', 'OUT'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
Rb0 IN OUT
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
Ra0 IN OUT
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'IN', 'OUT'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'IN', 'OUT'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'Rb0 IN OUT', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'Ra0 IN OUT', 'C0 OUT 0', '']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'IN', 'OUT'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
Rb0 IN OUT
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
Ra0 IN OUT
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'IN', 'OUT'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'IN', 'OUT'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'Rb0 IN OUT', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'Ra0 IN OUT', 'C0 OUT 0', '']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'IN', 'OUT'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
Rb0 IN OUT
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
Ra0 IN OUT
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'IN', 'OUT'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'IN', 'OUT'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'Rb0 IN OUT', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'Ra0 IN OUT', 'C0 OUT 0', '']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'IN', 'OUT'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
Rb0 IN OUT
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
Ra0 IN OUT
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'IN', 'OUT'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'IN', 'OUT'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'Rb0 IN OUT', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'Ra0 IN OUT', 'C0 OUT 0', '']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'IN', 'OUT'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
Rb0 IN OUT
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
Ra0 IN OUT
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '6'], ['Sb0', 'IN', '6'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '6'], ['Sb0', 'IN', '6'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT 6', 'Rb0 IN 6', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT 6', 'Ra0 IN 6', 'C0 OUT 0', '']
[['Sa0', 'OUT', '6'], ['Sb0', 'IN', '6'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT 6
Rb0 IN 6
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT 6
Ra0 IN 6
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '6'], ['Sb0', 'IN', '6'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '6'], ['Sb0', 'IN', '6'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT 6', 'Rb0 IN 6', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT 6', 'Ra0 IN 6', 'C0 OUT 0', '']
[['Sa0', 'OUT', '6'], ['Sb0', 'IN', '6'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT 6
Rb0 IN 6
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT 6
Ra0 IN 6
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '6'], ['Sb0', 'IN', '6'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '6'], ['Sb0', 'IN', '6'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT 6', 'Rb0 IN 6', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT 6', 'Ra0 IN 6', 'C0 OUT 0', '']
[['Sa0', 'OUT', '6'], ['Sb0', 'IN', '6'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT 6
Rb0 IN 6
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT 6
Ra0 IN 6
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '6'], ['Sb0', 'IN', '6'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '6'], ['Sb0', 'IN', '6'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT 6', 'Rb0 IN 6', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT 6', 'Ra0 IN 6', 'C0 OUT 0', '']
[['Sa0', 'OUT', '6'], ['Sb0', 'IN', '6'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT 6
Rb0 IN 6
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT 6
Ra0 IN 6
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '6'], ['Sb0', 'IN', '6'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '6'], ['Sb0', 'IN', '6'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT 6', 'Rb0 IN 6', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT 6', 'Ra0 IN 6', 'C0 OUT 0', '']
[['Sa0', 'OUT', '6'], ['Sb0', 'IN', '6'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT 6
Rb0 IN 6
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT 6
Ra0 IN 6
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '6'], ['Sb0', 'IN', '6'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '6'], ['Sb0', 'IN', '6'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT 6', 'Rb0 IN 6', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT 6', 'Ra0 IN 6', 'C0 OUT 0', '']
[['Sa0', 'OUT', '6'], ['Sb0', 'IN', '6'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT 6
Rb0 IN 6
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT 6
Ra0 IN 6
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '6'], ['Sb0', 'IN', '6'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '6'], ['Sb0', 'IN', '6'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT 6', 'Rb0 IN 6', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT 6', 'Ra0 IN 6', 'C0 OUT 0', '']
[['Sa0', 'OUT', '6'], ['Sb0', 'IN', '6'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT 6
Rb0 IN 6
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT 6
Ra0 IN 6
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - VOUT', 'VIN - Sa - C - GND', 'VOUT - Sb - C - GND']
[['Sa0', 'IN', '7'], ['Sb0', 'OUT', '7'], ['C0', '7', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
0.1 ['89', '89']
{'efficiency': 0.89, 'output_voltage': 89.0} -50 -75.0 -25.0
0 0
0.2 ['93', '94']
{'efficiency': 0.93, 'output_voltage': 94.0} -50 -75.0 -25.0
0 0
0.3 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} -50 -75.0 -25.0
0 0
0.4 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} -50 -75.0 -25.0
0 0
0.5 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} -50 -75.0 -25.0
0 0
0.6 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} -50 -75.0 -25.0
0 0
0.7 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} -50 -75.0 -25.0
0 0
0.8 ['93', '93']
{'efficiency': 0.93, 'output_voltage': 93.0} -50 -75.0 -25.0
0 0
0.9 ['89', '89']
{'efficiency': 0.89, 'output_voltage': 89.0} -50 -75.0 -25.0
0 0
action  0  : edge on [1, 6]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}, 1: {6}, 6: {1}})
action  1  : edge on [1, 7]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}, 1: {7}, 7: {1}})
action  2  : edge on [-1, -1]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}})
action  3  : edge on [1, 3]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}, 1: {3}, 3: {1}})
action  4  : edge on [1, 4]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}, 1: {4}, 4: {1}})
action  5  : edge on [1, 5]
action child  5  avg_return: 0.0
state child  5  reward: 0
state  5 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 5 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}, 1: {5}, 5: {1}})
title connecting VIN and Sb0-right
instant reward: 0 cumulate reward:  0 planning time: 21 cumulate planning time: 41
sim.current.step 5
root offset is:  1
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'Rb0 OUT IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'Ra0 OUT IN', 'C0 OUT 0', '']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
Rb0 OUT IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
Ra0 OUT IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'Rb0 OUT IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'Ra0 OUT IN', 'C0 OUT 0', '']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
Rb0 OUT IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
Ra0 OUT IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'Rb0 OUT IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'Ra0 OUT IN', 'C0 OUT 0', '']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
Rb0 OUT IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
Ra0 OUT IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - Sa - VOUT', 'VIN - Sb - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', '7', 'OUT'], ['Sb0', '7', 'IN'], ['C0', '7', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
0.1 ['89', '89']
{'efficiency': 0.89, 'output_voltage': 89.0} -50 -75.0 -25.0
0 0
0.2 ['93', '93']
{'efficiency': 0.93, 'output_voltage': 93.0} -50 -75.0 -25.0
0 0
0.3 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} -50 -75.0 -25.0
0 0
0.4 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} -50 -75.0 -25.0
0 0
0.5 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} -50 -75.0 -25.0
0 0
0.6 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} -50 -75.0 -25.0
0 0
0.7 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} -50 -75.0 -25.0
0 0
0.8 ['93', '94']
{'efficiency': 0.93, 'output_voltage': 94.0} -50 -75.0 -25.0
0 0
0.9 ['89', '89']
{'efficiency': 0.89, 'output_voltage': 89.0} -50 -75.0 -25.0
0 0
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'Rb0 OUT IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'Ra0 OUT IN', 'C0 OUT 0', '']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
Rb0 OUT IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
Ra0 OUT IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'Rb0 OUT IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'Ra0 OUT IN', 'C0 OUT 0', '']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
Rb0 OUT IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
Ra0 OUT IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'Rb0 OUT IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'Ra0 OUT IN', 'C0 OUT 0', '']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
Rb0 OUT IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
Ra0 OUT IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'Rb0 OUT IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'Ra0 OUT IN', 'C0 OUT 0', '']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
Rb0 OUT IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
Ra0 OUT IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'Rb0 OUT IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'Ra0 OUT IN', 'C0 OUT 0', '']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
Rb0 OUT IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
Ra0 OUT IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'Rb0 OUT IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'Ra0 OUT IN', 'C0 OUT 0', '']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
Rb0 OUT IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
Ra0 OUT IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'Rb0 OUT IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'Ra0 OUT IN', 'C0 OUT 0', '']
[['Sa0', 'IN', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
Rb0 OUT IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
Ra0 OUT IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'Rb0 OUT IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'Ra0 OUT IN', 'C0 OUT 0', '']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
Rb0 OUT IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
Ra0 OUT IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'Rb0 OUT IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'Ra0 OUT IN', 'C0 OUT 0', '']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
Rb0 OUT IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
Ra0 OUT IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'Rb0 OUT IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'Ra0 OUT IN', 'C0 OUT 0', '']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
Rb0 OUT IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
Ra0 OUT IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'Rb0 OUT IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'Ra0 OUT IN', 'C0 OUT 0', '']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
Rb0 OUT IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
Ra0 OUT IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'Rb0 OUT IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'Ra0 OUT IN', 'C0 OUT 0', '']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
Rb0 OUT IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
Ra0 OUT IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'Rb0 OUT IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'Ra0 OUT IN', 'C0 OUT 0', '']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
Rb0 OUT IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
Ra0 OUT IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'Rb0 OUT IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'Ra0 OUT IN', 'C0 OUT 0', '']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
Rb0 OUT IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
Ra0 OUT IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'Rb0 OUT IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'Ra0 OUT IN', 'C0 OUT 0', '']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
Rb0 OUT IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
Ra0 OUT IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '5'], ['Sb0', '5', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '5'], ['Sb0', '5', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT 5', 'Rb0 5 IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT 5', 'Ra0 5 IN', 'C0 OUT 0', '']
[['Sa0', 'OUT', '5'], ['Sb0', '5', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT 5
Rb0 5 IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT 5
Ra0 5 IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '5'], ['Sb0', '5', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '5'], ['Sb0', '5', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT 5', 'Rb0 5 IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT 5', 'Ra0 5 IN', 'C0 OUT 0', '']
[['Sa0', 'OUT', '5'], ['Sb0', '5', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT 5
Rb0 5 IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT 5
Ra0 5 IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '5'], ['Sb0', '5', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '5'], ['Sb0', '5', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT 5', 'Rb0 5 IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT 5', 'Ra0 5 IN', 'C0 OUT 0', '']
[['Sa0', 'OUT', '5'], ['Sb0', '5', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT 5
Rb0 5 IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT 5
Ra0 5 IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '5'], ['Sb0', '5', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '5'], ['Sb0', '5', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT 5', 'Rb0 5 IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT 5', 'Ra0 5 IN', 'C0 OUT 0', '']
[['Sa0', 'OUT', '5'], ['Sb0', '5', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT 5
Rb0 5 IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT 5
Ra0 5 IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '5'], ['Sb0', '5', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - Sa - VOUT', 'VIN - Sb - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', '5'], ['Sb0', '5', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT 5', 'Rb0 5 IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT 5', 'Ra0 5 IN', 'C0 OUT 0', '']
[['Sa0', 'OUT', '5'], ['Sb0', '5', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT 5
Rb0 5 IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT 5
Ra0 5 IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - Sa - C - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - C - GND']
[['Sa0', '0', '5'], ['Sb0', '5', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - Sa - C - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - C - GND']
[['Sa0', '0', '5'], ['Sb0', '5', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 0 5', 'Rb0 5 IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 0 5', 'Ra0 5 IN', 'C0 OUT 0', '']
[['Sa0', '0', '5'], ['Sb0', '5', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 0 5
Rb0 5 IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 0 5
Ra0 5 IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - Sa - C - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - C - GND']
[['Sa0', '0', '5'], ['Sb0', '5', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - Sa - C - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - C - GND']
[['Sa0', '0', '5'], ['Sb0', '5', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 0 5', 'Rb0 5 IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 0 5', 'Ra0 5 IN', 'C0 OUT 0', '']
[['Sa0', '0', '5'], ['Sb0', '5', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 0 5
Rb0 5 IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 0 5
Ra0 5 IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - Sa - C - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - C - GND']
[['Sa0', '0', '5'], ['Sb0', '5', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - Sa - C - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - C - GND']
[['Sa0', '0', '5'], ['Sb0', '5', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 0 5', 'Rb0 5 IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 0 5', 'Ra0 5 IN', 'C0 OUT 0', '']
[['Sa0', '0', '5'], ['Sb0', '5', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 0 5
Rb0 5 IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 0 5
Ra0 5 IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - Sa - C - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - C - GND']
[['Sa0', '0', '5'], ['Sb0', '5', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - Sa - C - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - C - GND']
[['Sa0', '0', '5'], ['Sb0', '5', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 0 5', 'Rb0 5 IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 0 5', 'Ra0 5 IN', 'C0 OUT 0', '']
[['Sa0', '0', '5'], ['Sb0', '5', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 0 5
Rb0 5 IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 0 5
Ra0 5 IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - Sa - C - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - C - GND']
[['Sa0', '0', '5'], ['Sb0', '5', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - Sa - C - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - C - GND']
[['Sa0', '0', '5'], ['Sb0', '5', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 0 5', 'Rb0 5 IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 0 5', 'Ra0 5 IN', 'C0 OUT 0', '']
[['Sa0', '0', '5'], ['Sb0', '5', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 0 5
Rb0 5 IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 0 5
Ra0 5 IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sb - Sa - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', '7', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', '7', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
0.1 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} -50 -75.0 -25.0
0 0
0.2 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} -50 -75.0 -25.0
0 0
0.3 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} -50 -75.0 -25.0
0 0
0.4 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.6 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.9 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
action  0  : edge on [2, 5]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}, 1: {6}, 6: {1}, 2: {5}, 5: {2}})
action  1  : edge on [-1, -1]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}, 1: {6}, 6: {1}})
action  2  : edge on [2, 4]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}, 1: {6}, 6: {1}, 2: {4}, 4: {2}})
action  3  : edge on [2, 3]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}, 1: {6}, 6: {1}, 2: {3}, 3: {2}})
action  4  : edge on [2, 7]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}, 1: {6}, 6: {1}, 2: {7}, 7: {2}})
title connecting VOUT and Sb0-left
instant reward: 0 cumulate reward:  0 planning time: 35 cumulate planning time: 76
sim.current.step 6
root offset is:  1
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'Rb0 OUT IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'Ra0 OUT IN', 'C0 OUT 0', '']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
Rb0 OUT IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
Ra0 OUT IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'Rb0 OUT IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'Ra0 OUT IN', 'C0 OUT 0', '']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
Rb0 OUT IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
Ra0 OUT IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'Rb0 OUT IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'Ra0 OUT IN', 'C0 OUT 0', '']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
Rb0 OUT IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
Ra0 OUT IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'Rb0 OUT IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'Ra0 OUT IN', 'C0 OUT 0', '']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
Rb0 OUT IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
Ra0 OUT IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'Rb0 OUT IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'Ra0 OUT IN', 'C0 OUT 0', '']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
Rb0 OUT IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
Ra0 OUT IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'Rb0 OUT IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'Ra0 OUT IN', 'C0 OUT 0', '']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
Rb0 OUT IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
Ra0 OUT IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'Rb0 OUT IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'Ra0 OUT IN', 'C0 OUT 0', '']
[['Sa0', 'OUT', 'IN'], ['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
Rb0 OUT IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
Ra0 OUT IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}, 1: {6}, 6: {1}, 2: {5}, 5: {2}})
action  1  : edge on [3, 8]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0, 3}, 1: {6}, 6: {1}, 2: {5}, 5: {2}, 3: {8}})
action  2  : edge on [3, 5]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}, 1: {6}, 6: {1}, 2: {5}, 5: {2, 3}, 3: {5}})
action  3  : edge on [3, 7]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}, 1: {6}, 6: {1}, 2: {5}, 5: {2}, 3: {7}, 7: {3}})
action  4  : edge on [3, 6]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}, 1: {6}, 6: {1, 3}, 2: {5}, 5: {2}, 3: {6}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 7 cumulate planning time: 83
sim.current.step 7
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}, 1: {6}, 6: {1}, 2: {5}, 5: {2}})
action  1  : edge on [4, 7]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}, 1: {6}, 6: {1}, 2: {5}, 5: {2}, 4: {7}, 7: {4}})
action  2  : edge on [4, 8]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0, 4}, 1: {6}, 6: {1}, 2: {5}, 5: {2}, 4: {8}})
action  3  : edge on [4, 5]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}, 1: {6}, 6: {1}, 2: {5}, 5: {2, 4}, 4: {5}})
action  4  : edge on [4, 6]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}, 1: {6}, 6: {1, 4}, 2: {5}, 5: {2}, 4: {6}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 83
sim.current.step 8
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}, 1: {6}, 6: {1}, 2: {5}, 5: {2}})
action  1  : edge on [5, 7]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}, 1: {6}, 6: {1}, 2: {5}, 5: {2, 7}, 7: {5}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 83
sim.current.step 9
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}, 1: {6}, 6: {1}, 2: {5}, 5: {2}})
action  1  : edge on [6, 7]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}, 1: {6}, 6: {1, 7}, 2: {5}, 5: {2}, 7: {6}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 83
sim.current.step 10
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}, 1: {6}, 6: {1}, 2: {5}, 5: {2}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 83
sim.current.step 11
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}, 1: {6}, 6: {1}, 2: {5}, 5: {2}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 83
effis of topo: [{'parameter': 'None', 'efficiency': 0, 'output_voltage': -500}]
#####################Game: 0   steps:  12   average cumulate reward:  0
title result with parameter:None 
-1 , 20 : 12.0
[{'parameter': 'None', 'efficiency': 0, 'output_voltage': -500}]
figures are saved in:figures/2021-03-18-11-40-26/

outputs are saved in:Results/mutitest_-50-2021-03-18-11-40-26-50865.txt

figures already existed
Results already existed
261
194
1746
261
194
find
OrderedDict([('L0', ['N-L0-Sb0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-L0-Sb0'])])
figures/2021-03-18-11-41-56/ created
Viz/TreeStructures2021-03-18-11-41-56-50865/ created
max depth is -1 ,trajectory is 20 every thread has  20  trajectories

path with frequency:
('VIN - L - Sb - GND', 0.1447)
('VIN - L - Sa - VOUT', 0.1214)
('VIN - L - Sb - VOUT', 0.0998)
('VIN - Sa - L - VOUT', 0.0914)
('VIN - Sb - L - VOUT', 0.0914)
('VIN - L - Sa - GND', 0.0906)
('VOUT - Sb - Sa - GND', 0.0763)
('VOUT - Sa - Sb - GND', 0.0747)
('VIN - Sa - Sb - VOUT', 0.074)
('VIN - Sb - Sa - VOUT', 0.0707)
('VOUT - L - Sa - GND', 0.0671)
('VIN - L - Sa - Sa - VOUT', 0.065)
('VIN - Sa - L - GND', 0.0612)
('VIN - C - VOUT', 0.0583)
('VOUT - Sb - L - GND', 0.0579)
('VIN - Sb - L - GND', 0.0571)
('VOUT - Sa - Sa - Sb - GND', 0.0549)
('VOUT - Sa - L - GND', 0.0529)
('VIN - Sb - Sa - GND', 0.048)
('VIN - Sa - Sb - GND', 0.043)
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
sim.current.step 0
root offset is:  1
['Sa']
['Sa', 'C']
['Sb']
['Sb', 'L']
['VIN - Sb - Sa - VOUT', 'VIN - Sb - L - GND', 'VOUT - Sa - L - GND']
[['Sb0', 'IN', '8'], ['L0', '0', '8'], ['Sa0', 'OUT', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100)]
0.1 ['89', '-10']
{'efficiency': 0.89, 'output_voltage': -10.0} -50 -75.0 -25.0
0 0
0.2 ['95', '-24']
{'efficiency': 0.95, 'output_voltage': -24.0} -50 -75.0 -25.0
0 0
0.3 ['96', '-41']
{'efficiency': 0.96, 'output_voltage': -41.0} -50 -75.0 -25.0
0 0.275712
0.4 ['96', '-64']
{'efficiency': 0.96, 'output_voltage': -64.0} -50 -75.0 -25.0
0.275712 0.008447999999999999
0.5 ['95', '-95']
{'efficiency': 0.95, 'output_voltage': -95.0} -50 -75.0 -25.0
0.275712 0
0.6 ['93', '-140']
{'efficiency': 0.93, 'output_voltage': -140.0} -50 -75.0 -25.0
0.275712 0
0.7 ['89', '-208']
{'efficiency': 0.89, 'output_voltage': -208.0} -50 -75.0 -25.0
0.275712 0
0.8 ['78', '-314']
{'efficiency': 0.78, 'output_voltage': -314.0} -50 -75.0 -25.0
0.275712 0
0.9 ['47', '-430']
{'efficiency': 0.47, 'output_voltage': -430.0} -50 -75.0 -25.0
0.275712 0
['Sb', 'C']
['Sa', 'L']
['VIN - L - Sb - VOUT', 'VIN - L - Sa - GND', 'VOUT - Sb - Sa - GND']
[['Sa0', '0', '8'], ['L0', 'IN', '8'], ['Sb0', 'OUT', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100)]
0.1 ['47', '475']
{'efficiency': 0.47, 'output_voltage': 475.0} -50 -75.0 -25.0
0 0
0.2 ['78', '392']
{'efficiency': 0.78, 'output_voltage': 392.0} -50 -75.0 -25.0
0 0
0.3 ['89', '296']
{'efficiency': 0.89, 'output_voltage': 296.0} -50 -75.0 -25.0
0 0
0.4 ['93', '233']
{'efficiency': 0.93, 'output_voltage': 233.0} -50 -75.0 -25.0
0 0
0.5 ['95', '191']
{'efficiency': 0.95, 'output_voltage': 191.0} -50 -75.0 -25.0
0 0
0.6 ['96', '161']
{'efficiency': 0.96, 'output_voltage': 161.0} -50 -75.0 -25.0
0 0
0.7 ['97', '139']
{'efficiency': 0.97, 'output_voltage': 139.0} -50 -75.0 -25.0
0 0
0.8 ['98', '122']
{'efficiency': 0.98, 'output_voltage': 122.0} -50 -75.0 -25.0
0 0
0.9 ['98', '109']
{'efficiency': 0.98, 'output_voltage': 109.0} -50 -75.0 -25.0
0 0
['Sb', 'Sa']
['Sa', 'C']
['Sb', 'Sb']
['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'IN', 'OUT'], ['Sb1', 'IN', 'OUT'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'Rb1': [1], 'Ra1': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'Rb1', 'Ra1', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10)]
['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'IN', 'OUT'], ['Sb1', 'IN', 'OUT'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'Rb1 IN OUT', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'Ra1 IN OUT', 'C0 OUT 0', '']
[['Sb0', 'IN', 'OUT'], ['Sb1', 'IN', 'OUT'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
Rb1 IN OUT
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
Ra1 IN OUT
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'Rb1', 'Ra1', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'IN', 'OUT'], ['Sb1', 'IN', 'OUT'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'Rb1': [1], 'Ra1': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'Rb1', 'Ra1', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10)]
['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'IN', 'OUT'], ['Sb1', 'IN', 'OUT'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'Rb1 IN OUT', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'Ra1 IN OUT', 'C0 OUT 0', '']
[['Sb0', 'IN', 'OUT'], ['Sb1', 'IN', 'OUT'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
Rb1 IN OUT
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
Ra1 IN OUT
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'Rb1', 'Ra1', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'IN', 'OUT'], ['Sb1', 'IN', 'OUT'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'Rb1': [1], 'Ra1': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'Rb1', 'Ra1', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10)]
['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'IN', 'OUT'], ['Sb1', 'IN', 'OUT'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'Rb1 IN OUT', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'Ra1 IN OUT', 'C0 OUT 0', '']
[['Sb0', 'IN', 'OUT'], ['Sb1', 'IN', 'OUT'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
Rb1 IN OUT
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
Ra1 IN OUT
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'Rb1', 'Ra1', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'IN', 'OUT'], ['Sb1', 'IN', 'OUT'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'Rb1': [1], 'Ra1': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'Rb1', 'Ra1', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10)]
['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'IN', 'OUT'], ['Sb1', 'IN', 'OUT'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'Rb1 IN OUT', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'Ra1 IN OUT', 'C0 OUT 0', '']
[['Sb0', 'IN', 'OUT'], ['Sb1', 'IN', 'OUT'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
Rb1 IN OUT
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
Ra1 IN OUT
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'Rb1', 'Ra1', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'IN', 'OUT'], ['Sb1', 'IN', 'OUT'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'Rb1': [1], 'Ra1': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'Rb1', 'Ra1', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10)]
['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - Sb - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'IN', 'OUT'], ['Sb1', 'IN', 'OUT'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'Rb1 IN OUT', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'Ra1 IN OUT', 'C0 OUT 0', '']
[['Sb0', 'IN', 'OUT'], ['Sb1', 'IN', 'OUT'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
Rb1 IN OUT
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
Ra1 IN OUT
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'Rb1', 'Ra1', 'C0']
PCC-50865 violations

['Sa', 'Sb']
['Sb', 'L']
['Sa', 'Sa']
['VIN - Sa - C - VOUT', 'VIN - Sa - L - GND', 'VOUT - C - L - GND']
[['Sa0', '7', 'IN'], ['L0', '7', '0'], ['C0', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
action  0  : node on 0
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 1
action child  1  avg_return: 0.027571200000000008
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 7 cumulate planning time: 7
sim.current.step 1
root offset is:  1
['VIN - Sb - VOUT', 'VIN - Sb - L - Sa - GND', 'VOUT - L - Sa - GND']
[['Sb0', 'OUT', 'IN'], ['Sa0', '0', '8'], ['L0', 'OUT', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100)]
0.1 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} -50 -75.0 -25.0
0 0
0.2 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} -50 -75.0 -25.0
0 0
0.3 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} -50 -75.0 -25.0
0 0
0.4 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.6 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.9 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
['VIN - L - L - VOUT', 'VIN - L - Sb - GND', 'VOUT - L - Sb - GND']
[['Sb0', '7', '0'], ['L0', '7', 'OUT'], ['L1', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100)]
0.1 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} -50 -75.0 -25.0
0 0
0.2 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} -50 -75.0 -25.0
0 0
0.3 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} -50 -75.0 -25.0
0 0
0.4 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} -50 -75.0 -25.0
0 0
0.5 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} -50 -75.0 -25.0
0 0
0.6 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} -50 -75.0 -25.0
0 0
0.7 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} -50 -75.0 -25.0
0 0
0.8 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} -50 -75.0 -25.0
0 0
0.9 ['98', '99']
{'efficiency': 0.98, 'output_voltage': 99.0} -50 -75.0 -25.0
0 0
['VIN - Sb - Sb - VOUT', 'VIN - Sb - L - GND', 'VOUT - Sb - L - GND']
[['Sb0', 'IN', '7'], ['L0', '7', '0'], ['Sb1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100], 'Rb1': [1], 'Ra1': [100000]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0', 'Rb1', 'Ra1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000)]
0.1 ['82', '82']
{'efficiency': 0.82, 'output_voltage': 82.0} -50 -75.0 -25.0
0 0
0.2 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} -50 -75.0 -25.0
0 0
0.3 ['93', '93']
{'efficiency': 0.93, 'output_voltage': 93.0} -50 -75.0 -25.0
0 0
0.4 ['94', '95']
{'efficiency': 0.94, 'output_voltage': 95.0} -50 -75.0 -25.0
0 0
0.5 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} -50 -75.0 -25.0
0 0
0.6 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} -50 -75.0 -25.0
0 0
0.7 ['96', '97']
{'efficiency': 0.96, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.8 ['96', '97']
{'efficiency': 0.96, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.9 ['95', '97']
{'efficiency': 0.95, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
['VIN - Sb - VOUT', 'VIN - L - Sa - GND', 'VOUT - Sb - L - Sa - GND']
[['Sb0', 'OUT', 'IN'], ['Sa0', '8', '0'], ['L0', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100)]
0.1 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} -50 -75.0 -25.0
0 0
0.2 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} -50 -75.0 -25.0
0 0
0.3 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} -50 -75.0 -25.0
0 0
0.4 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.6 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.9 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
action  0  : node on 2
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 0
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 1
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 3
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right']
state child 3 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 1 cumulate planning time: 8
sim.current.step 2
root offset is:  1
['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - Sb - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', '0'], ['Sb1', 'IN', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'Rb1': [1], 'Ra1': [100000]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'Rb1', 'Ra1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000)]
0.1 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} -50 -75.0 -25.0
0 0
0.2 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.5 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.6 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} -50 -75.0 -25.0
0 0
0.7 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} -50 -75.0 -25.0
0 0
0.8 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} -50 -75.0 -25.0
0 0
0.9 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} -50 -75.0 -25.0
0 0
['VIN - C - Sb - VOUT', 'VIN - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', '8'], ['C0', '8', 'IN'], ['C1', '0', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
['VIN - C - VOUT', 'VIN - C - Sb - L - GND', 'VOUT - Sb - L - GND']
[['Sb0', 'OUT', '8'], ['C0', 'IN', 'OUT'], ['L0', '0', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
['VIN - Sa - VOUT', 'VIN - C - Sb - GND', 'VOUT - Sa - C - Sb - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['Sa0', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} -50 -75.0 -25.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} -50 -75.0 -25.0
0 0
0.9 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} -50 -75.0 -25.0
0 0
action  0  : node on 0
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 1
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 2
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 3
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 3 graph: defaultdict(<class 'set'>, {})
title adding node Sa
instant reward: 0 cumulate reward:  0 planning time: 1 cumulate planning time: 9
sim.current.step 3
root offset is:  1
['VIN - C - Sa - Sb - VOUT', 'VIN - C - GND', 'VOUT - Sb - Sa - GND']
[['Sb0', '7', 'OUT'], ['C0', '0', 'IN'], ['Sa0', '7', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
['VIN - C - VOUT', 'VIN - C - Sb - Sa - GND', 'VOUT - Sb - Sa - GND']
[['Sb0', 'OUT', '8'], ['C0', 'OUT', 'IN'], ['Sa0', '0', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
action  0  : edge on [0, 4]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}})
action  1  : edge on [0, 7]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}})
action  2  : edge on [0, 8]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}})
action  3  : edge on [-1, -1]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 3 graph: defaultdict(<class 'set'>, {})
action  4  : edge on [0, 3]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}})
action  5  : edge on [0, 5]
action child  5  avg_return: 0.0
state child  5  reward: 0
state  5 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 5 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}})
action  6  : edge on [0, 6]
action child  6  avg_return: 0.0
state child  6  reward: 0
state  6 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 6 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}})
title connecting GND and Sb0-right
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 9
sim.current.step 4
root offset is:  1
['VIN - Sa - VOUT', 'VIN - Sa - C - Sb - GND', 'VOUT - C - Sb - GND']
[['Sb0', '6', '0'], ['C0', 'OUT', '6'], ['Sa0', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} -50 -75.0 -25.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} -50 -75.0 -25.0
0 0
0.9 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} -50 -75.0 -25.0
0 0
['VIN - C - VOUT', 'VIN - C - Sa - Sb - GND', 'VOUT - Sa - Sb - GND']
[['Sb0', '8', '0'], ['C0', 'OUT', 'IN'], ['Sa0', 'OUT', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
action  0  : edge on [1, 8]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {8}, 8: {1}})
action  1  : edge on [-1, -1]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}})
action  2  : edge on [1, 6]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {6}, 6: {1}})
action  3  : edge on [1, 7]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1}})
action  4  : edge on [1, 5]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {5}, 5: {1}})
title connecting VIN and Sa0-right
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 9
sim.current.step 5
root offset is:  1
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - Sb - GND']
[['Sb0', '7', '0'], ['C0', '7', 'OUT'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
action  0  : edge on [2, 5]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {8}, 8: {1}, 2: {5}, 5: {2}})
action  1  : edge on [-1, -1]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {8}, 8: {1}})
action  2  : edge on [2, 6]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {8}, 8: {1}, 2: {6}, 6: {2}})
action  3  : edge on [2, 7]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {8}, 8: {1}, 2: {7}, 7: {2}})
title connecting VOUT and C0-left
instant reward: 0 cumulate reward:  0 planning time: 4 cumulate planning time: 13
sim.current.step 6
root offset is:  1
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - Sa - Sb - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', 'IN'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
action  0  : edge on [3, 7]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {8}, 8: {1}, 2: {5}, 5: {2}, 3: {7}, 7: {3}})
action  1  : edge on [-1, -1]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {8}, 8: {1}, 2: {5}, 5: {2}})
action  2  : edge on [3, 6]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {8}, 8: {1}, 2: {5}, 5: {2}, 3: {6}, 6: {3}})
title connecting Sb0-left and Sa0-left
instant reward: 0 cumulate reward:  0 planning time: 28 cumulate planning time: 41
sim.current.step 7
root offset is:  1
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 OUT 0', 'Ra0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 OUT 0', 'Rb0 7 IN', '']
[['Sb0', '7', '0'], ['C0', 'OUT', '0'], ['Sa0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 OUT 0
Ra0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 OUT 0
Rb0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {8}, 8: {1}, 2: {5}, 5: {2}, 3: {7}, 7: {3}})
action  1  : edge on [4, 6]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0, 6}, 1: {8}, 8: {1}, 2: {5}, 5: {2}, 3: {7}, 7: {3}, 6: {4}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 75 cumulate planning time: 116
sim.current.step 8
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {8}, 8: {1}, 2: {5}, 5: {2}, 3: {7}, 7: {3}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 116
sim.current.step 9
root offset is:  1
action  0  : edge on [6, 7]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {8}, 8: {1}, 2: {5}, 5: {2}, 3: {7}, 7: {3, 6}, 6: {7}})
action  1  : edge on [6, 8]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {8}, 8: {1, 6}, 2: {5}, 5: {2}, 3: {7}, 7: {3}, 6: {8}})
action  2  : edge on [-1, -1]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {8}, 8: {1}, 2: {5}, 5: {2}, 3: {7}, 7: {3}})
['VIN - Sa - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - Sb - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', '7'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
title connecting C0-right and Sa0-left
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 116
sim.current.step 10
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {8}, 8: {1}, 2: {5}, 5: {2}, 3: {7}, 7: {3, 6}, 6: {7}})
action  1  : terminal on 0
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {8}, 8: {1}, 2: {5}, 5: {2}, 3: {7}, 7: {3, 6}, 6: {7}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 116
sim.current.step 11
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {8}, 8: {1}, 2: {5}, 5: {2}, 3: {7}, 7: {3, 6}, 6: {7}})
action  1  : terminal on 0
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {8}, 8: {1}, 2: {5}, 5: {2}, 3: {7}, 7: {3, 6}, 6: {7}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 116
effis of topo: [{'parameter': '0.9', 'efficiency': {'efficiency': 0.0, 'output_voltage': 0.0}, 'output_voltage': 0.0}]
#####################Game: 0   steps:  12   average cumulate reward:  0
title result with parameter:0.9 
-1 , 20 : 12.0
[{'parameter': '0.9', 'efficiency': {'efficiency': 0.0, 'output_voltage': 0.0}, 'output_voltage': 0.0}]
figures are saved in:figures/2021-03-18-11-41-56/

outputs are saved in:Results/mutitest_-50-2021-03-18-11-41-56-50865.txt

figures already existed
Results already existed
261
194
1746
261
194
find
OrderedDict([('L0', ['N-L0-Sb0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-L0-Sb0'])])
figures/2021-03-18-11-43-58/ created
Viz/TreeStructures2021-03-18-11-43-58-50865/ created
max depth is -1 ,trajectory is 20 every thread has  20  trajectories

path with frequency:
('VIN - L - Sb - GND', 0.1447)
('VIN - L - Sa - VOUT', 0.1214)
('VIN - L - Sb - VOUT', 0.0998)
('VIN - Sa - L - VOUT', 0.0914)
('VIN - Sb - L - VOUT', 0.0914)
('VIN - L - Sa - GND', 0.0906)
('VOUT - Sb - Sa - GND', 0.0763)
('VOUT - Sa - Sb - GND', 0.0747)
('VIN - Sa - Sb - VOUT', 0.074)
('VIN - Sb - Sa - VOUT', 0.0707)
('VOUT - L - Sa - GND', 0.0671)
('VIN - L - Sa - Sa - VOUT', 0.065)
('VIN - Sa - L - GND', 0.0612)
('VIN - C - VOUT', 0.0583)
('VOUT - Sb - L - GND', 0.0579)
('VIN - Sb - L - GND', 0.0571)
('VOUT - Sa - Sa - Sb - GND', 0.0549)
('VOUT - Sa - L - GND', 0.0529)
('VIN - Sb - Sa - GND', 0.048)
('VIN - Sa - Sb - GND', 0.043)
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
sim.current.step 0
root offset is:  1
['Sb']
['Sb', 'Sb']
['Sa']
['Sa', 'L']
['Sb', 'Sb']
['Sa', 'Sb']
['Sb', 'L']
['Sa', 'L']
['Sb', 'C']
['Sa', 'C']
['Sb', 'Sa']
['VIN - C - VOUT', 'VIN - C - Sa - Sb - GND', 'VOUT - Sa - Sb - GND']
[['Sb0', '0', '5'], ['Sa0', '5', 'OUT'], ['C0', 'IN', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} -50 -75.0 -25.0
0 0
['Sa', 'Sa']
['VIN - L - Sb - VOUT', 'VIN - L - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'OUT', '7'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100)]
['VIN - L - Sb - VOUT', 'VIN - L - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'OUT', '7'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT 7', 'C0 OUT 0', 'L0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT 7', 'C0 OUT 0', 'L0 7 IN', '']
[['Sb0', 'OUT', '7'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT 7
C0 OUT 0
L0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT 7
C0 OUT 0
L0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'L0']
PCC-50865 violations

['VIN - L - Sb - VOUT', 'VIN - L - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'OUT', '7'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100)]
['VIN - L - Sb - VOUT', 'VIN - L - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'OUT', '7'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT 7', 'C0 OUT 0', 'L0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT 7', 'C0 OUT 0', 'L0 7 IN', '']
[['Sb0', 'OUT', '7'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT 7
C0 OUT 0
L0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT 7
C0 OUT 0
L0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'L0']
PCC-50865 violations

['VIN - L - Sb - VOUT', 'VIN - L - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'OUT', '7'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100)]
['VIN - L - Sb - VOUT', 'VIN - L - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'OUT', '7'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT 7', 'C0 OUT 0', 'L0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT 7', 'C0 OUT 0', 'L0 7 IN', '']
[['Sb0', 'OUT', '7'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT 7
C0 OUT 0
L0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT 7
C0 OUT 0
L0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'L0']
PCC-50865 violations

['VIN - L - Sb - VOUT', 'VIN - L - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'OUT', '7'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100)]
['VIN - L - Sb - VOUT', 'VIN - L - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'OUT', '7'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT 7', 'C0 OUT 0', 'L0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT 7', 'C0 OUT 0', 'L0 7 IN', '']
[['Sb0', 'OUT', '7'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT 7
C0 OUT 0
L0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT 7
C0 OUT 0
L0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'L0']
PCC-50865 violations

['VIN - L - Sb - VOUT', 'VIN - L - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'OUT', '7'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100)]
['VIN - L - Sb - VOUT', 'VIN - L - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'OUT', '7'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT 7', 'C0 OUT 0', 'L0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT 7', 'C0 OUT 0', 'L0 7 IN', '']
[['Sb0', 'OUT', '7'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT 7
C0 OUT 0
L0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT 7
C0 OUT 0
L0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'L0']
PCC-50865 violations

['VIN - L - Sb - VOUT', 'VIN - L - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'OUT', '7'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100)]
['VIN - L - Sb - VOUT', 'VIN - L - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'OUT', '7'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT 7', 'C0 OUT 0', 'L0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT 7', 'C0 OUT 0', 'L0 7 IN', '']
[['Sb0', 'OUT', '7'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT 7
C0 OUT 0
L0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT 7
C0 OUT 0
L0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'L0']
PCC-50865 violations

['VIN - L - Sb - VOUT', 'VIN - L - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'OUT', '7'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100)]
['VIN - L - Sb - VOUT', 'VIN - L - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'OUT', '7'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT 7', 'C0 OUT 0', 'L0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT 7', 'C0 OUT 0', 'L0 7 IN', '']
[['Sb0', 'OUT', '7'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT 7
C0 OUT 0
L0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT 7
C0 OUT 0
L0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'L0']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '7', 'OUT'], ['C1', '7', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - Sa - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '7', 'OUT'], ['C1', '7', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 7 OUT', 'C1 7 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 7 OUT', 'C1 7 0', '']
[['Sa0', 'IN', 'OUT'], ['C0', '7', 'OUT'], ['C1', '7', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 7 OUT
C1 7 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 7 OUT
C1 7 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '7', 'OUT'], ['C1', '7', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - Sa - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '7', 'OUT'], ['C1', '7', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 7 OUT', 'C1 7 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 7 OUT', 'C1 7 0', '']
[['Sa0', 'IN', 'OUT'], ['C0', '7', 'OUT'], ['C1', '7', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 7 OUT
C1 7 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 7 OUT
C1 7 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '7', 'OUT'], ['C1', '7', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - Sa - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '7', 'OUT'], ['C1', '7', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 7 OUT', 'C1 7 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 7 OUT', 'C1 7 0', '']
[['Sa0', 'IN', 'OUT'], ['C0', '7', 'OUT'], ['C1', '7', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 7 OUT
C1 7 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 7 OUT
C1 7 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

action  0  : node on 1
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 0
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 36 cumulate planning time: 36
sim.current.step 1
root offset is:  1
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '5', '0'], ['Sa0', '5', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '5', '0'], ['Sa0', '5', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 5 0', 'Ra0 5 IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 5 0', 'Rb0 5 IN', 'C0 OUT 0', '']
[['Sb0', '5', '0'], ['Sa0', '5', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 5 0
Ra0 5 IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 5 0
Rb0 5 IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '5', '0'], ['Sa0', '5', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '5', '0'], ['Sa0', '5', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 5 0', 'Ra0 5 IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 5 0', 'Rb0 5 IN', 'C0 OUT 0', '']
[['Sb0', '5', '0'], ['Sa0', '5', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 5 0
Ra0 5 IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 5 0
Rb0 5 IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '5', '0'], ['Sa0', '5', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
['VIN - Sa - Sb - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - GND']
[['Sb0', '5', '0'], ['Sa0', '5', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 5 0', 'Ra0 5 IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 5 0', 'Rb0 5 IN', 'C0 OUT 0', '']
[['Sb0', '5', '0'], ['Sa0', '5', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 5 0
Ra0 5 IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 5 0
Rb0 5 IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0']
PCC-50865 violations

['VIN - C - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', '0', 'OUT'], ['C1', 'IN', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', '0', 'OUT'], ['C1', 'IN', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 0 OUT', 'C1 IN 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 0 OUT', 'C1 IN 0', '']
[['Sb0', 'OUT', 'IN'], ['C0', '0', 'OUT'], ['C1', 'IN', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 0 OUT
C1 IN 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 0 OUT
C1 IN 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', '0', 'OUT'], ['C1', 'IN', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', '0', 'OUT'], ['C1', 'IN', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 0 OUT', 'C1 IN 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 0 OUT', 'C1 IN 0', '']
[['Sb0', 'OUT', 'IN'], ['C0', '0', 'OUT'], ['C1', 'IN', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 0 OUT
C1 IN 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 0 OUT
C1 IN 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', '0', 'OUT'], ['C1', 'IN', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', '0', 'OUT'], ['C1', 'IN', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 0 OUT', 'C1 IN 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 0 OUT', 'C1 IN 0', '']
[['Sb0', 'OUT', 'IN'], ['C0', '0', 'OUT'], ['C1', 'IN', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 0 OUT
C1 IN 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 0 OUT
C1 IN 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - L - Sa - VOUT', 'VIN - L - Sb - GND', 'VOUT - Sa - Sb - GND']
[['Sb0', '8', '0'], ['Sa0', 'OUT', '8'], ['L0', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100)]
0.1 ['98', '109']
{'efficiency': 0.98, 'output_voltage': 109.0} -50 -75.0 -25.0
0 0
0.2 ['98', '122']
{'efficiency': 0.98, 'output_voltage': 122.0} -50 -75.0 -25.0
0 0
0.3 ['97', '139']
{'efficiency': 0.97, 'output_voltage': 139.0} -50 -75.0 -25.0
0 0
0.4 ['96', '161']
{'efficiency': 0.96, 'output_voltage': 161.0} -50 -75.0 -25.0
0 0
0.5 ['95', '191']
{'efficiency': 0.95, 'output_voltage': 191.0} -50 -75.0 -25.0
0 0
0.6 ['93', '233']
{'efficiency': 0.93, 'output_voltage': 233.0} -50 -75.0 -25.0
0 0
0.7 ['89', '296']
{'efficiency': 0.89, 'output_voltage': 296.0} -50 -75.0 -25.0
0 0
0.8 ['78', '392']
{'efficiency': 0.78, 'output_voltage': 392.0} -50 -75.0 -25.0
0 0
0.9 ['47', '475']
{'efficiency': 0.47, 'output_voltage': 475.0} -50 -75.0 -25.0
0 0
['VIN - Sb - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - Sb - Sa - Sb - GND']
[['Sb0', '0', '8'], ['Sb1', 'OUT', 'IN'], ['Sa0', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'Rb1': [1], 'Ra1': [100000]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'Rb1', 'Ra1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000)]
0.1 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} -50 -75.0 -25.0
0 0
0.2 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} -50 -75.0 -25.0
0 0
0.3 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} -50 -75.0 -25.0
0 0
0.4 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.6 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.9 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
action  0  : node on 1
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 3
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 2
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 0
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right']
state child 3 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 22 cumulate planning time: 58
sim.current.step 2
root offset is:  1
['VIN - Sb - VOUT', 'VIN - Sb - C - Sb - GND', 'VOUT - C - Sb - GND']
[['Sb0', '8', '0'], ['Sb1', 'IN', 'OUT'], ['C0', 'OUT', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'Rb1': [1], 'Ra1': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'Rb1', 'Ra1', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10)]
0.1 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} -50 -75.0 -25.0
0 0
0.2 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} -50 -75.0 -25.0
0 0
0.3 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} -50 -75.0 -25.0
0 0
0.4 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.6 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.9 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
['VIN - Sb - Sb - VOUT', 'VIN - Sb - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'IN', '6'], ['Sb1', 'OUT', '6'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'Rb1': [1], 'Ra1': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'Rb1', 'Ra1', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10)]
['VIN - Sb - Sb - VOUT', 'VIN - Sb - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'IN', '6'], ['Sb1', 'OUT', '6'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN 6', 'Rb1 OUT 6', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN 6', 'Ra1 OUT 6', 'C0 OUT 0', '']
[['Sb0', 'IN', '6'], ['Sb1', 'OUT', '6'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN 6
Rb1 OUT 6
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN 6
Ra1 OUT 6
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'Rb1', 'Ra1', 'C0']
PCC-50865 violations

['VIN - Sb - Sb - VOUT', 'VIN - Sb - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'IN', '6'], ['Sb1', 'OUT', '6'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'Rb1': [1], 'Ra1': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'Rb1', 'Ra1', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10)]
['VIN - Sb - Sb - VOUT', 'VIN - Sb - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'IN', '6'], ['Sb1', 'OUT', '6'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN 6', 'Rb1 OUT 6', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN 6', 'Ra1 OUT 6', 'C0 OUT 0', '']
[['Sb0', 'IN', '6'], ['Sb1', 'OUT', '6'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN 6
Rb1 OUT 6
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN 6
Ra1 OUT 6
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'Rb1', 'Ra1', 'C0']
PCC-50865 violations

['VIN - Sb - Sb - VOUT', 'VIN - Sb - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'IN', '6'], ['Sb1', 'OUT', '6'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'Rb1': [1], 'Ra1': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'Rb1', 'Ra1', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 10)]
['VIN - Sb - Sb - VOUT', 'VIN - Sb - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'IN', '6'], ['Sb1', 'OUT', '6'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN 6', 'Rb1 OUT 6', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN 6', 'Ra1 OUT 6', 'C0 OUT 0', '']
[['Sb0', 'IN', '6'], ['Sb1', 'OUT', '6'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN 6
Rb1 OUT 6
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN 6
Ra1 OUT 6
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'Rb1', 'Ra1', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sb - Sb - L - GND', 'VOUT - Sb - L - GND']
[['Sb0', '7', 'OUT'], ['Sb1', 'OUT', 'IN'], ['L0', '7', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'Rb1': [1], 'Ra1': [100000], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'Rb1', 'Ra1', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100)]
0.1 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} -50 -75.0 -25.0
0 0
0.2 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} -50 -75.0 -25.0
0 0
0.3 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} -50 -75.0 -25.0
0 0
0.4 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} -50 -75.0 -25.0
0 0
0.6 ['97', '98']
{'efficiency': 0.97, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
0.9 ['97', '98']
{'efficiency': 0.97, 'output_voltage': 98.0} -50 -75.0 -25.0
0 0
action  0  : node on 1
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'Sb2-left', 'Sb2-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 0
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'Sa0-left', 'Sa0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 3
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'L0-left', 'L0-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 2
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'C0-left', 'C0-right']
state child 3 graph: defaultdict(<class 'set'>, {})
title adding node Sb
instant reward: 0 cumulate reward:  0 planning time: 23 cumulate planning time: 81
sim.current.step 3
root offset is:  1
action  0  : edge on [0, 4]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'Sb2-left', 'Sb2-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}})
action  1  : edge on [-1, -1]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'Sb2-left', 'Sb2-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : edge on [0, 7]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'Sb2-left', 'Sb2-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}})
action  3  : edge on [0, 6]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'Sb2-left', 'Sb2-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}})
action  4  : edge on [0, 5]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'Sb2-left', 'Sb2-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}})
action  5  : edge on [0, 3]
action child  5  avg_return: 0.0
state child  5  reward: 0
state  5 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'Sb2-left', 'Sb2-right']
state child 5 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}})
action  6  : edge on [0, 8]
action child  6  avg_return: 0.0
state child  6  reward: 0
state  6 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'Sb2-left', 'Sb2-right']
state child 6 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}})
title connecting GND and Sb0-right
instant reward: 0 cumulate reward:  0 planning time: 1 cumulate planning time: 82
sim.current.step 4
root offset is:  1
action  0  : edge on [1, 7]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'Sb2-left', 'Sb2-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1}})
action  1  : edge on [1, 6]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'Sb2-left', 'Sb2-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {6}, 6: {1}})
action  2  : edge on [1, 8]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'Sb2-left', 'Sb2-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {8}, 8: {1}})
action  3  : edge on [-1, -1]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'Sb2-left', 'Sb2-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}})
action  4  : edge on [1, 5]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'Sb2-left', 'Sb2-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {5}, 5: {1}})
title connecting VIN and Sb2-left
instant reward: 0 cumulate reward:  0 planning time: 1 cumulate planning time: 83
sim.current.step 5
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'Sb2-left', 'Sb2-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1}})
action  1  : edge on [2, 8]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'Sb2-left', 'Sb2-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1}, 2: {8}, 8: {2}})
action  2  : edge on [2, 6]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'Sb2-left', 'Sb2-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1}, 2: {6}, 6: {2}})
action  3  : edge on [2, 5]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'Sb2-left', 'Sb2-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1}, 2: {5}, 5: {2}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 1 cumulate planning time: 84
sim.current.step 6
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'Sb2-left', 'Sb2-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1}})
action  1  : edge on [3, 6]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'Sb2-left', 'Sb2-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1}, 3: {6}, 6: {3}})
action  2  : edge on [3, 5]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'Sb2-left', 'Sb2-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1}, 3: {5}, 5: {3}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 84
sim.current.step 7
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'Sb2-left', 'Sb2-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1}})
action  1  : edge on [4, 5]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'Sb2-left', 'Sb2-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0, 5}, 1: {7}, 7: {1}, 5: {4}})
action  2  : edge on [4, 6]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'Sb2-left', 'Sb2-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0, 6}, 1: {7}, 7: {1}, 6: {4}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 84
sim.current.step 8
root offset is:  1
action  0  : edge on [5, 7]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'Sb2-left', 'Sb2-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1, 5}, 5: {7}})
action  1  : edge on [-1, -1]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'Sb2-left', 'Sb2-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1}})
action  2  : edge on [5, 8]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'Sb2-left', 'Sb2-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1}, 5: {8}, 8: {5}})
title connecting Sb1-left and Sb2-left
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 84
sim.current.step 9
root offset is:  1
action  0  : edge on [6, 8]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'Sb2-left', 'Sb2-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1, 5}, 5: {7}, 6: {8}, 8: {6}})
action  1  : edge on [-1, -1]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'Sb2-left', 'Sb2-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1, 5}, 5: {7}})
title connecting Sb1-right and Sb2-right
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 84
sim.current.step 10
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'Sb2-left', 'Sb2-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1, 5}, 5: {7}, 6: {8}, 8: {6}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 84
sim.current.step 11
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right', 'Sb2-left', 'Sb2-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1, 5}, 5: {7}, 6: {8}, 8: {6}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 84
effis of topo: [{'parameter': 'None', 'efficiency': 0, 'output_voltage': -500}]
#####################Game: 0   steps:  12   average cumulate reward:  0
title result with parameter:None 
-1 , 20 : 12.0
[{'parameter': 'None', 'efficiency': 0, 'output_voltage': -500}]
figures are saved in:figures/2021-03-18-11-43-58/

outputs are saved in:Results/mutitest_-50-2021-03-18-11-43-58-50865.txt

figures already existed
Results already existed
261
194
1746
261
194
find
OrderedDict([('L0', ['N-L0-Sb0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-L0-Sb0'])])
figures/2021-03-18-11-45-33/ created
Viz/TreeStructures2021-03-18-11-45-33-50865/ created
max depth is -1 ,trajectory is 20 every thread has  20  trajectories

path with frequency:
('VIN - L - Sb - GND', 0.1447)
('VIN - L - Sa - VOUT', 0.1214)
('VIN - L - Sb - VOUT', 0.0998)
('VIN - Sa - L - VOUT', 0.0914)
('VIN - Sb - L - VOUT', 0.0914)
('VIN - L - Sa - GND', 0.0906)
('VOUT - Sb - Sa - GND', 0.0763)
('VOUT - Sa - Sb - GND', 0.0747)
('VIN - Sa - Sb - VOUT', 0.074)
('VIN - Sb - Sa - VOUT', 0.0707)
('VOUT - L - Sa - GND', 0.0671)
('VIN - L - Sa - Sa - VOUT', 0.065)
('VIN - Sa - L - GND', 0.0612)
('VIN - C - VOUT', 0.0583)
('VOUT - Sb - L - GND', 0.0579)
('VIN - Sb - L - GND', 0.0571)
('VOUT - Sa - Sa - Sb - GND', 0.0549)
('VOUT - Sa - L - GND', 0.0529)
('VIN - Sb - Sa - GND', 0.048)
('VIN - Sa - Sb - GND', 0.043)
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
sim.current.step 0
root offset is:  1
['Sa']
['Sa', 'L']
['Sb']
['Sb', 'Sa']
['Sa', 'C']
['Sb', 'Sb']
['Sa', 'Sa']
['Sb', 'Sa']
['Sa', 'Sb']
['Sb', 'C']
['Sa', 'L']
['Sb', 'L']
['VIN - Sb - VOUT', 'VIN - Sa - L - GND', 'VOUT - Sb - Sa - L - GND']
[['Sb0', 'IN', 'OUT'], ['L0', '0', '7'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100)]
0.1 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} 50 25.0 75.0
0 0
0.2 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 50 25.0 75.0
0 0
0.3 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 50 25.0 75.0
0 0
0.4 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.6 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.9 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
action  0  : node on 0
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 1
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 1 cumulate planning time: 1
sim.current.step 1
root offset is:  1
['VIN - L - L - VOUT', 'VIN - L - Sa - GND', 'VOUT - L - Sa - GND']
[['Sa0', '0', '7'], ['L0', 'IN', '7'], ['L1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100)]
0.1 ['98', '99']
{'efficiency': 0.98, 'output_voltage': 99.0} 50 25.0 75.0
0 0
0.2 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} 50 25.0 75.0
0 0
0.3 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} 50 25.0 75.0
0 0
0.4 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} 50 25.0 75.0
0 0
0.5 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} 50 25.0 75.0
0 0
0.6 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} 50 25.0 75.0
0 0
0.7 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} 50 25.0 75.0
0 0
0.8 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} 50 25.0 75.0
0 0
0.9 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} 50 25.0 75.0
0 0
['VIN - Sa - VOUT', 'VIN - L - Sa - GND', 'VOUT - Sa - L - Sa - GND']
[['Sa0', 'OUT', 'IN'], ['Sa1', '7', '0'], ['L0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'Ra1': [100000], 'Rb1': [1], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'Ra1', 'Rb1', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100)]
0.1 ['97', '98']
{'efficiency': 0.97, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.4 ['97', '98']
{'efficiency': 0.97, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 50 25.0 75.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 50 25.0 75.0
0 0
0.9 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} 50 25.0 75.0
0 0
['VIN - Sa - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sa1', 'IN', 'OUT'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'Ra1': [100000], 'Rb1': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'Ra1', 'Rb1', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10)]
['VIN - Sa - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sa1', 'IN', 'OUT'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'Ra1 IN OUT', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'Rb1 IN OUT', 'C0 OUT 0', '']
[['Sa0', 'OUT', 'IN'], ['Sa1', 'IN', 'OUT'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
Ra1 IN OUT
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
Rb1 IN OUT
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'Ra1', 'Rb1', 'C0']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sa1', 'IN', 'OUT'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'Ra1': [100000], 'Rb1': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'Ra1', 'Rb1', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10)]
['VIN - Sa - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sa1', 'IN', 'OUT'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'Ra1 IN OUT', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'Rb1 IN OUT', 'C0 OUT 0', '']
[['Sa0', 'OUT', 'IN'], ['Sa1', 'IN', 'OUT'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
Ra1 IN OUT
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
Rb1 IN OUT
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'Ra1', 'Rb1', 'C0']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sa1', 'IN', 'OUT'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'Ra1': [100000], 'Rb1': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'Ra1', 'Rb1', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10)]
['VIN - Sa - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sa1', 'IN', 'OUT'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'Ra1 IN OUT', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'Rb1 IN OUT', 'C0 OUT 0', '']
[['Sa0', 'OUT', 'IN'], ['Sa1', 'IN', 'OUT'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
Ra1 IN OUT
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
Rb1 IN OUT
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'Ra1', 'Rb1', 'C0']
PCC-50865 violations

['VIN - Sa - L - VOUT', 'VIN - Sa - L - GND', 'VOUT - L - L - GND']
[['Sa0', '8', 'IN'], ['L0', 'OUT', '8'], ['L1', '0', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
action  0  : node on 2
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 0
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 1
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 3
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right']
state child 3 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 8 cumulate planning time: 9
sim.current.step 2
root offset is:  1
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 0 IN', 'C1 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 0 IN', 'C1 OUT IN', '']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 0 IN
C1 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 0 IN
C1 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 0 IN', 'C1 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 0 IN', 'C1 OUT IN', '']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 0 IN
C1 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 0 IN
C1 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 0 IN', 'C1 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 0 IN', 'C1 OUT IN', '']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 0 IN
C1 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 0 IN
C1 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - L - Sa - VOUT', 'VIN - L - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', '7', 'OUT'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100)]
['VIN - L - Sa - VOUT', 'VIN - L - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', '7', 'OUT'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 OUT', 'C0 OUT 0', 'L0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 OUT', 'C0 OUT 0', 'L0 7 IN', '']
[['Sa0', '7', 'OUT'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 OUT
C0 OUT 0
L0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 OUT
C0 OUT 0
L0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'L0']
PCC-50865 violations

['VIN - L - Sa - VOUT', 'VIN - L - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', '7', 'OUT'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100)]
['VIN - L - Sa - VOUT', 'VIN - L - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', '7', 'OUT'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 OUT', 'C0 OUT 0', 'L0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 OUT', 'C0 OUT 0', 'L0 7 IN', '']
[['Sa0', '7', 'OUT'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 OUT
C0 OUT 0
L0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 OUT
C0 OUT 0
L0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'L0']
PCC-50865 violations

['VIN - L - Sa - VOUT', 'VIN - L - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', '7', 'OUT'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100)]
['VIN - L - Sa - VOUT', 'VIN - L - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', '7', 'OUT'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 OUT', 'C0 OUT 0', 'L0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 OUT', 'C0 OUT 0', 'L0 7 IN', '']
[['Sa0', '7', 'OUT'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 OUT
C0 OUT 0
L0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 OUT
C0 OUT 0
L0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'L0']
PCC-50865 violations

['VIN - L - Sa - VOUT', 'VIN - L - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', '7', 'OUT'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100)]
['VIN - L - Sa - VOUT', 'VIN - L - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', '7', 'OUT'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 OUT', 'C0 OUT 0', 'L0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 OUT', 'C0 OUT 0', 'L0 7 IN', '']
[['Sa0', '7', 'OUT'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 OUT
C0 OUT 0
L0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 OUT
C0 OUT 0
L0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'L0']
PCC-50865 violations

['VIN - L - Sa - VOUT', 'VIN - L - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', '7', 'OUT'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100)]
['VIN - L - Sa - VOUT', 'VIN - L - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', '7', 'OUT'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 OUT', 'C0 OUT 0', 'L0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 OUT', 'C0 OUT 0', 'L0 7 IN', '']
[['Sa0', '7', 'OUT'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 OUT
C0 OUT 0
L0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 OUT
C0 OUT 0
L0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'L0']
PCC-50865 violations

['VIN - L - Sa - VOUT', 'VIN - L - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', '7', 'OUT'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100)]
['VIN - L - Sa - VOUT', 'VIN - L - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', '7', 'OUT'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 OUT', 'C0 OUT 0', 'L0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 OUT', 'C0 OUT 0', 'L0 7 IN', '']
[['Sa0', '7', 'OUT'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 OUT
C0 OUT 0
L0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 OUT
C0 OUT 0
L0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'L0']
PCC-50865 violations

['VIN - L - Sa - VOUT', 'VIN - L - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', '7', 'OUT'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100)]
['VIN - L - Sa - VOUT', 'VIN - L - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', '7', 'OUT'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 OUT', 'C0 OUT 0', 'L0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 OUT', 'C0 OUT 0', 'L0 7 IN', '']
[['Sa0', '7', 'OUT'], ['C0', 'OUT', '0'], ['L0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 OUT
C0 OUT 0
L0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 OUT
C0 OUT 0
L0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'L0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['Sb0', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['Sb0', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 OUT 0', 'Rb0 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 OUT 0', 'Ra0 OUT IN', '']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['Sb0', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 OUT 0
Rb0 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 OUT 0
Ra0 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['Sb0', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['Sb0', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 OUT 0', 'Rb0 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 OUT 0', 'Ra0 OUT IN', '']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['Sb0', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 OUT 0
Rb0 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 OUT 0
Ra0 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['Sb0', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['Sb0', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 OUT 0', 'Rb0 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 OUT 0', 'Ra0 OUT IN', '']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['Sb0', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 OUT 0
Rb0 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 OUT 0
Ra0 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0']
PCC-50865 violations

['VIN - Sa - Sa - VOUT', 'VIN - Sa - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', '7'], ['C0', '0', '7'], ['Sa1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1)]
0.1 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.2 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.3 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.4 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 50 25.0 75.0
0 0
0.5 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} 50 25.0 75.0
0 0
0.6 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} 50 25.0 75.0
0 0
0.7 ['93', '93']
{'efficiency': 0.93, 'output_voltage': 93.0} 50 25.0 75.0
0 0
0.8 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} 50 25.0 75.0
0 0
0.9 ['82', '82']
{'efficiency': 0.82, 'output_voltage': 82.0} 50 25.0 75.0
0 0
action  0  : node on 0
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 1
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sb0-left', 'Sb0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 3
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 2
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 3 graph: defaultdict(<class 'set'>, {})
title adding node Sa
instant reward: 0 cumulate reward:  0 planning time: 36 cumulate planning time: 45
sim.current.step 3
root offset is:  1
['VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VOUT - Sa - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '7', '0'], ['Sa1', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 50 25.0 75.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 50 25.0 75.0
0 0
0.9 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} 50 25.0 75.0
0 0
['VIN - Sa - Sa - VOUT', 'VIN - Sa - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', '8', 'IN'], ['C0', '0', 'OUT'], ['Sa1', 'OUT', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1)]
['VIN - Sa - Sa - VOUT', 'VIN - Sa - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', '8', 'IN'], ['C0', '0', 'OUT'], ['Sa1', 'OUT', '8']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 8 IN', 'C0 0 OUT', 'Ra1 OUT 8', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 8 IN', 'C0 0 OUT', 'Rb1 OUT 8', '']
[['Sa0', '8', 'IN'], ['C0', '0', 'OUT'], ['Sa1', 'OUT', '8']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 8 IN
C0 0 OUT
Ra1 OUT 8

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 8 IN
C0 0 OUT
Rb1 OUT 8

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
PCC-50865 violations

['VIN - Sa - Sa - VOUT', 'VIN - Sa - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', '8', 'IN'], ['C0', '0', 'OUT'], ['Sa1', 'OUT', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1)]
['VIN - Sa - Sa - VOUT', 'VIN - Sa - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', '8', 'IN'], ['C0', '0', 'OUT'], ['Sa1', 'OUT', '8']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 8 IN', 'C0 0 OUT', 'Ra1 OUT 8', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 8 IN', 'C0 0 OUT', 'Rb1 OUT 8', '']
[['Sa0', '8', 'IN'], ['C0', '0', 'OUT'], ['Sa1', 'OUT', '8']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 8 IN
C0 0 OUT
Ra1 OUT 8

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 8 IN
C0 0 OUT
Rb1 OUT 8

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
PCC-50865 violations

['VIN - Sa - Sa - VOUT', 'VIN - Sa - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', '8', 'IN'], ['C0', '0', 'OUT'], ['Sa1', 'OUT', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1)]
['VIN - Sa - Sa - VOUT', 'VIN - Sa - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', '8', 'IN'], ['C0', '0', 'OUT'], ['Sa1', 'OUT', '8']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 8 IN', 'C0 0 OUT', 'Ra1 OUT 8', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 8 IN', 'C0 0 OUT', 'Rb1 OUT 8', '']
[['Sa0', '8', 'IN'], ['C0', '0', 'OUT'], ['Sa1', 'OUT', '8']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 8 IN
C0 0 OUT
Ra1 OUT 8

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 8 IN
C0 0 OUT
Rb1 OUT 8

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
PCC-50865 violations

['VIN - Sa - Sa - VOUT', 'VIN - Sa - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', '8', 'IN'], ['C0', '0', 'OUT'], ['Sa1', 'OUT', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1)]
['VIN - Sa - Sa - VOUT', 'VIN - Sa - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', '8', 'IN'], ['C0', '0', 'OUT'], ['Sa1', 'OUT', '8']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 8 IN', 'C0 0 OUT', 'Ra1 OUT 8', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 8 IN', 'C0 0 OUT', 'Rb1 OUT 8', '']
[['Sa0', '8', 'IN'], ['C0', '0', 'OUT'], ['Sa1', 'OUT', '8']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 8 IN
C0 0 OUT
Ra1 OUT 8

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 8 IN
C0 0 OUT
Rb1 OUT 8

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
PCC-50865 violations

['VIN - Sa - Sa - VOUT', 'VIN - Sa - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', '8', 'IN'], ['C0', '0', 'OUT'], ['Sa1', 'OUT', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1)]
['VIN - Sa - Sa - VOUT', 'VIN - Sa - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', '8', 'IN'], ['C0', '0', 'OUT'], ['Sa1', 'OUT', '8']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 8 IN', 'C0 0 OUT', 'Ra1 OUT 8', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 8 IN', 'C0 0 OUT', 'Rb1 OUT 8', '']
[['Sa0', '8', 'IN'], ['C0', '0', 'OUT'], ['Sa1', 'OUT', '8']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 8 IN
C0 0 OUT
Ra1 OUT 8

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 8 IN
C0 0 OUT
Rb1 OUT 8

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
PCC-50865 violations

action  0  : edge on [0, 6]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}})
action  1  : edge on [0, 4]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}})
action  2  : edge on [0, 8]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}})
action  3  : edge on [0, 7]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}})
action  4  : edge on [0, 5]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}})
action  5  : edge on [-1, -1]
action child  5  avg_return: 0.0
state child  5  reward: 0
state  5 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 5 graph: defaultdict(<class 'set'>, {})
action  6  : edge on [0, 3]
action child  6  avg_return: 0.0
state child  6  reward: 0
state  6 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 6 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}})
title connecting GND and C0-right
instant reward: 0 cumulate reward:  0 planning time: 12 cumulate planning time: 57
sim.current.step 4
root offset is:  1
['VIN - Sa - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - Sa - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'IN', '0'], ['Sa1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1)]
0.1 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} 50 25.0 75.0
0 0
0.2 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} 50 25.0 75.0
0 0
0.3 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} 50 25.0 75.0
0 0
0.4 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} 50 25.0 75.0
0 0
0.5 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.6 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.8 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.9 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} 50 25.0 75.0
0 0
['VIN - Sa - Sa - VOUT', 'VIN - C - GND', 'VOUT - Sa - Sa - C - GND']
[['Sa0', 'IN', '8'], ['C0', 'IN', '0'], ['Sa1', 'OUT', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1)]
0.1 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.2 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.3 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.4 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 50 25.0 75.0
0 0
0.5 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 50 25.0 75.0
0 0
0.6 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} 50 25.0 75.0
0 0
0.7 ['93', '93']
{'efficiency': 0.93, 'output_voltage': 93.0} 50 25.0 75.0
0 0
0.8 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} 50 25.0 75.0
0 0
0.9 ['83', '83']
{'efficiency': 0.83, 'output_voltage': 83.0} 50 25.0 75.0
0 0
['VIN - Sa - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['Sa1', 'IN', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1)]
['VIN - Sa - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['Sa1', 'IN', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 OUT 0', 'Ra1 IN OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 OUT 0', 'Rb1 IN OUT', '']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['Sa1', 'IN', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 OUT 0
Ra1 IN OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 OUT 0
Rb1 IN OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['Sa1', 'IN', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1)]
['VIN - Sa - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['Sa1', 'IN', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 OUT 0', 'Ra1 IN OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 OUT 0', 'Rb1 IN OUT', '']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['Sa1', 'IN', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 OUT 0
Ra1 IN OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 OUT 0
Rb1 IN OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['Sa1', 'IN', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1)]
['VIN - Sa - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['Sa1', 'IN', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 OUT 0', 'Ra1 IN OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 OUT 0', 'Rb1 IN OUT', '']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['Sa1', 'IN', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 OUT 0
Ra1 IN OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 OUT 0
Rb1 IN OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['Sa1', 'IN', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1)]
['VIN - Sa - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['Sa1', 'IN', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 OUT 0', 'Ra1 IN OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 OUT 0', 'Rb1 IN OUT', '']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['Sa1', 'IN', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 OUT 0
Ra1 IN OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 OUT 0
Rb1 IN OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['Sa1', 'IN', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1)]
['VIN - Sa - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['Sa1', 'IN', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 OUT 0', 'Ra1 IN OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 OUT 0', 'Rb1 IN OUT', '']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['Sa1', 'IN', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 OUT 0
Ra1 IN OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 OUT 0
Rb1 IN OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
PCC-50865 violations

action  0  : edge on [1, 3]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {3}, 3: {1}})
action  1  : edge on [-1, -1]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}})
action  2  : edge on [1, 8]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {8}, 8: {1}})
action  3  : edge on [1, 7]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {7}, 7: {1}})
action  4  : edge on [1, 4]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {4}, 4: {1}})
action  5  : edge on [1, 5]
action child  5  avg_return: 0.0
state child  5  reward: 0
state  5 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 5 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {5}, 5: {1}})
title connecting VIN and Sa0-left
instant reward: 0 cumulate reward:  0 planning time: 5 cumulate planning time: 62
sim.current.step 5
root offset is:  1
['VIN - Sa - VOUT', 'VIN - Sa - Sa - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '7', '0'], ['Sa1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 50 25.0 75.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 50 25.0 75.0
0 0
0.9 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} 50 25.0 75.0
0 0
['VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VOUT - Sa - Sa - C - GND']
[['Sa0', 'IN', '5'], ['C0', '5', '0'], ['Sa1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 50 25.0 75.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 50 25.0 75.0
0 0
0.9 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} 50 25.0 75.0
0 0
['VIN - Sa - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['Sa1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1)]
['VIN - Sa - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['Sa1', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 OUT 0', 'Ra1 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 OUT 0', 'Rb1 OUT IN', '']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['Sa1', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 OUT 0
Ra1 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 OUT 0
Rb1 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['Sa1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1)]
['VIN - Sa - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['Sa1', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 OUT 0', 'Ra1 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 OUT 0', 'Rb1 OUT IN', '']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['Sa1', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 OUT 0
Ra1 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 OUT 0
Rb1 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['Sa1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1)]
['VIN - Sa - VOUT', 'VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['Sa1', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 OUT 0', 'Ra1 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 OUT 0', 'Rb1 OUT IN', '']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['Sa1', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 OUT 0
Ra1 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 OUT 0
Rb1 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
PCC-50865 violations

action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {3}, 3: {1}})
action  1  : edge on [2, 5]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {3}, 3: {1}, 2: {5}, 5: {2}})
action  2  : edge on [2, 4]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {3}, 3: {1}, 2: {4}, 4: {2}})
action  3  : edge on [2, 8]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {3}, 3: {1}, 2: {8}, 8: {2}})
action  4  : edge on [2, 7]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {3}, 3: {1}, 2: {7}, 7: {2}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 3 cumulate planning time: 65
sim.current.step 6
root offset is:  1
action  0  : edge on [3, 7]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {3}, 3: {1, 7}, 7: {3}})
action  1  : edge on [-1, -1]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {3}, 3: {1}})
action  2  : edge on [3, 5]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {3}, 3: {1, 5}, 5: {3}})
action  3  : edge on [3, 8]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {3}, 3: {8, 1}, 8: {3}})
title connecting Sa0-left and Sa1-left
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 65
sim.current.step 7
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {3}, 3: {1, 7}, 7: {3}})
action  1  : edge on [4, 8]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {3}, 3: {1, 7}, 7: {3}, 4: {8}, 8: {4}})
action  2  : edge on [4, 5]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {3}, 3: {1, 7}, 7: {3}, 4: {5}, 5: {4}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 65
sim.current.step 8
root offset is:  1
action  0  : edge on [5, 7]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {3}, 3: {1, 7}, 7: {3, 5}, 5: {7}})
action  1  : edge on [5, 8]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {3}, 3: {1, 7}, 7: {3}, 5: {8}, 8: {5}})
action  2  : edge on [-1, -1]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {3}, 3: {1, 7}, 7: {3}})
title connecting C0-left and Sa1-left
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 65
sim.current.step 9
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {3}, 3: {1, 7}, 7: {3, 5}, 5: {7}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 65
sim.current.step 10
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {3}, 3: {1, 7}, 7: {3, 5}, 5: {7}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 65
sim.current.step 11
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {3}, 3: {1, 7}, 7: {3, 5}, 5: {7}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 65
effis of topo: [{'parameter': 'None', 'efficiency': 0, 'output_voltage': -500}]
#####################Game: 0   steps:  12   average cumulate reward:  0
title result with parameter:None 
-1 , 20 : 12.0
[{'parameter': 'None', 'efficiency': 0, 'output_voltage': -500}]
figures are saved in:figures/2021-03-18-11-45-33/

outputs are saved in:Results/mutitest_50-2021-03-18-11-45-33-50865.txt

figures already existed
Results already existed
261
194
1746
261
194
find
OrderedDict([('L0', ['N-L0-Sb0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-L0-Sb0'])])
figures/2021-03-18-11-46-44/ created
Viz/TreeStructures2021-03-18-11-46-44-50865/ created
max depth is -1 ,trajectory is 20 every thread has  20  trajectories

path with frequency:
('VIN - L - Sb - GND', 0.1447)
('VIN - L - Sa - VOUT', 0.1214)
('VIN - L - Sb - VOUT', 0.0998)
('VIN - Sa - L - VOUT', 0.0914)
('VIN - Sb - L - VOUT', 0.0914)
('VIN - L - Sa - GND', 0.0906)
('VOUT - Sb - Sa - GND', 0.0763)
('VOUT - Sa - Sb - GND', 0.0747)
('VIN - Sa - Sb - VOUT', 0.074)
('VIN - Sb - Sa - VOUT', 0.0707)
('VOUT - L - Sa - GND', 0.0671)
('VIN - L - Sa - Sa - VOUT', 0.065)
('VIN - Sa - L - GND', 0.0612)
('VIN - C - VOUT', 0.0583)
('VOUT - Sb - L - GND', 0.0579)
('VIN - Sb - L - GND', 0.0571)
('VOUT - Sa - Sa - Sb - GND', 0.0549)
('VOUT - Sa - L - GND', 0.0529)
('VIN - Sb - Sa - GND', 0.048)
('VIN - Sa - Sb - GND', 0.043)
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
sim.current.step 0
root offset is:  1
['Sb']
['Sb', 'L']
['Sa']
['Sa', 'L']
['VIN - Sa - VOUT', 'VIN - L - Sb - GND', 'VOUT - Sa - L - Sb - GND']
[['Sa0', 'IN', 'OUT'], ['L0', '8', 'IN'], ['Sb0', '0', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 50 25.0 75.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 50 25.0 75.0
0 0
0.9 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} 50 25.0 75.0
0 0
['Sb', 'Sa']
['Sa', 'C']
['Sb', 'C']
['Sa', 'L']
['Sb', 'L']
['Sa', 'Sa']
['Sb', 'Sb']
['Sa', 'Sb']
['VIN - Sa - VOUT', 'VIN - Sa - Sa - Sb - GND', 'VOUT - Sa - Sb - GND']
[['Sb0', '6', '0'], ['Sa0', 'OUT', '6'], ['Sa1', 'IN', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 50 25.0 75.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 50 25.0 75.0
0 0
0.9 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} 50 25.0 75.0
0 0
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', 'IN', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', 'IN', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 OUT 0', 'C1 IN OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 OUT 0', 'C1 IN OUT', '']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', 'IN', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 OUT 0
C1 IN OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 OUT 0
C1 IN OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', 'IN', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', 'IN', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 OUT 0', 'C1 IN OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 OUT 0', 'C1 IN OUT', '']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', 'IN', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 OUT 0
C1 IN OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 OUT 0
C1 IN OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', 'IN', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', 'IN', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 OUT 0', 'C1 IN OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 OUT 0', 'C1 IN OUT', '']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', 'IN', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 OUT 0
C1 IN OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 OUT 0
C1 IN OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

action  0  : node on 1
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 0
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 3 cumulate planning time: 3
sim.current.step 1
root offset is:  1
['VIN - C - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - C - Sb - Sa - GND']
[['Sb0', '8', 'IN'], ['C0', 'OUT', 'IN'], ['Sa0', '0', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
['VIN - Sb - VOUT', 'VIN - Sb - L - Sb - GND', 'VOUT - L - Sb - GND']
[['Sb0', 'OUT', 'IN'], ['Sb1', '0', '8'], ['L0', 'OUT', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'Rb1': [1], 'Ra1': [100000], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'Rb1', 'Ra1', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100)]
0.1 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} 50 25.0 75.0
0 0
0.2 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 50 25.0 75.0
0 0
0.3 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 50 25.0 75.0
0 0
0.4 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.6 ['97', '98']
{'efficiency': 0.97, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.9 ['97', '98']
{'efficiency': 0.97, 'output_voltage': 98.0} 50 25.0 75.0
0 0
['VIN - L - Sb - C - VOUT', 'VIN - L - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', '0', 'OUT'], ['L0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100)]
['VIN - L - Sb - C - VOUT', 'VIN - L - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', '0', 'OUT'], ['L0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 0 OUT', 'L0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 0 OUT', 'L0 7 IN', '']
[['Sb0', '7', '0'], ['C0', '0', 'OUT'], ['L0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 0 OUT
L0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 0 OUT
L0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'L0']
PCC-50865 violations

['VIN - L - Sb - C - VOUT', 'VIN - L - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', '0', 'OUT'], ['L0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100)]
['VIN - L - Sb - C - VOUT', 'VIN - L - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', '0', 'OUT'], ['L0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 0 OUT', 'L0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 0 OUT', 'L0 7 IN', '']
[['Sb0', '7', '0'], ['C0', '0', 'OUT'], ['L0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 0 OUT
L0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 0 OUT
L0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'L0']
PCC-50865 violations

['VIN - L - Sb - C - VOUT', 'VIN - L - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', '0', 'OUT'], ['L0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100)]
['VIN - L - Sb - C - VOUT', 'VIN - L - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', '0', 'OUT'], ['L0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 0 OUT', 'L0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 0 OUT', 'L0 7 IN', '']
[['Sb0', '7', '0'], ['C0', '0', 'OUT'], ['L0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 0 OUT
L0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 0 OUT
L0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'L0']
PCC-50865 violations

['VIN - L - Sb - C - VOUT', 'VIN - L - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', '0', 'OUT'], ['L0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100)]
['VIN - L - Sb - C - VOUT', 'VIN - L - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', '0', 'OUT'], ['L0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 0 OUT', 'L0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 0 OUT', 'L0 7 IN', '']
[['Sb0', '7', '0'], ['C0', '0', 'OUT'], ['L0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 0 OUT
L0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 0 OUT
L0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'L0']
PCC-50865 violations

['VIN - L - Sb - C - VOUT', 'VIN - L - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', '0', 'OUT'], ['L0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100)]
['VIN - L - Sb - C - VOUT', 'VIN - L - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', '0', 'OUT'], ['L0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 0 OUT', 'L0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 0 OUT', 'L0 7 IN', '']
[['Sb0', '7', '0'], ['C0', '0', 'OUT'], ['L0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 0 OUT
L0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 0 OUT
L0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'L0']
PCC-50865 violations

['VIN - L - Sb - C - VOUT', 'VIN - L - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', '0', 'OUT'], ['L0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100)]
['VIN - L - Sb - C - VOUT', 'VIN - L - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', '0', 'OUT'], ['L0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 0 OUT', 'L0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 0 OUT', 'L0 7 IN', '']
[['Sb0', '7', '0'], ['C0', '0', 'OUT'], ['L0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 0 OUT
L0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 0 OUT
L0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'L0']
PCC-50865 violations

['VIN - L - Sb - C - VOUT', 'VIN - L - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', '0', 'OUT'], ['L0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100)]
['VIN - L - Sb - C - VOUT', 'VIN - L - Sb - GND', 'VOUT - C - GND']
[['Sb0', '7', '0'], ['C0', '0', 'OUT'], ['L0', '7', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 0', 'C0 0 OUT', 'L0 7 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 0', 'C0 0 OUT', 'L0 7 IN', '']
[['Sb0', '7', '0'], ['C0', '0', 'OUT'], ['L0', '7', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 0
C0 0 OUT
L0 7 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 0
C0 0 OUT
L0 7 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'L0']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - C - Sb - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', '8'], ['C0', 'IN', 'OUT'], ['C1', '0', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 IN OUT', 'C1 0 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 IN OUT', 'C1 0 IN', '']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 IN OUT
C1 0 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 IN OUT
C1 0 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 IN OUT', 'C1 0 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 IN OUT', 'C1 0 IN', '']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 IN OUT
C1 0 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 IN OUT
C1 0 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 IN OUT', 'C1 0 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 IN OUT', 'C1 0 IN', '']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 IN OUT
C1 0 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 IN OUT
C1 0 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 IN OUT', 'C1 0 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 IN OUT', 'C1 0 IN', '']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 IN OUT
C1 0 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 IN OUT
C1 0 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 IN OUT', 'C1 0 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 IN OUT', 'C1 0 IN', '']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 IN OUT
C1 0 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 IN OUT
C1 0 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 IN OUT', 'C1 0 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 IN OUT', 'C1 0 IN', '']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 IN OUT
C1 0 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 IN OUT
C1 0 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 IN OUT', 'C1 0 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 IN OUT', 'C1 0 IN', '']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 IN OUT
C1 0 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 IN OUT
C1 0 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

action  0  : node on 0
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 2
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 3
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 1
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right']
state child 3 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 12 cumulate planning time: 15
sim.current.step 2
root offset is:  1
['VIN - Sa - VOUT', 'VIN - Sa - Sa - Sb - GND', 'VOUT - Sa - Sb - GND']
[['Sb0', '8', '0'], ['Sa0', 'OUT', 'IN'], ['Sa1', 'OUT', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 50 25.0 75.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 50 25.0 75.0
0 0
0.9 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} 50 25.0 75.0
0 0
['VIN - C - VOUT', 'VIN - C - Sb - Sa - GND', 'VOUT - Sb - Sa - GND']
[['Sb0', 'OUT', '5'], ['Sa0', '5', '0'], ['C0', 'IN', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
['VIN - Sb - VOUT', 'VIN - Sb - Sb - Sa - GND', 'VOUT - Sb - Sa - GND']
[['Sb0', 'OUT', '5'], ['Sa0', '5', '0'], ['Sb1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'Rb1': [1], 'Ra1': [100000]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'Rb1', 'Ra1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000)]
0.1 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} 50 25.0 75.0
0 0
0.2 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 50 25.0 75.0
0 0
0.3 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 50 25.0 75.0
0 0
0.4 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.6 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.9 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
['VIN - Sa - VOUT', 'VIN - Sb - C - GND', 'VOUT - Sa - Sb - C - GND']
[['Sb0', '7', 'IN'], ['Sa0', 'OUT', 'IN'], ['C0', '7', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 50 25.0 75.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 50 25.0 75.0
0 0
0.9 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} 50 25.0 75.0
0 0
['VIN - C - Sb - Sa - VOUT', 'VIN - C - GND', 'VOUT - Sa - Sb - GND']
[['Sb0', '6', '0'], ['Sa0', 'OUT', '6'], ['C0', 'IN', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
action  0  : node on 0
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 3
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 1
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sb1-left', 'Sb1-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 2
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right']
state child 3 graph: defaultdict(<class 'set'>, {})
title adding node Sa
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 15
sim.current.step 3
root offset is:  1
['VIN - Sa - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - Sa - Sb - Sa - GND']
[['Sb0', '7', 'IN'], ['Sa0', 'IN', 'OUT'], ['Sa1', '7', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 50 25.0 75.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 50 25.0 75.0
0 0
0.9 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} 50 25.0 75.0
0 0
['VIN - Sa - Sa - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - Sa - Sb - GND']
[['Sb0', '0', '7'], ['Sa0', '7', 'IN'], ['Sa1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1)]
0.1 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.2 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.3 ['96', '97']
{'efficiency': 0.96, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.4 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 50 25.0 75.0
0 0
0.5 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} 50 25.0 75.0
0 0
0.6 ['94', '95']
{'efficiency': 0.94, 'output_voltage': 95.0} 50 25.0 75.0
0 0
0.7 ['93', '93']
{'efficiency': 0.93, 'output_voltage': 93.0} 50 25.0 75.0
0 0
0.8 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} 50 25.0 75.0
0 0
0.9 ['82', '82']
{'efficiency': 0.82, 'output_voltage': 82.0} 50 25.0 75.0
0 0
['VIN - Sa - VOUT', 'VIN - Sa - Sb - Sa - GND', 'VOUT - Sb - Sa - GND']
[['Sb0', '5', 'OUT'], ['Sa0', '5', '0'], ['Sa1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 50 25.0 75.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 50 25.0 75.0
0 0
0.9 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} 50 25.0 75.0
0 0
action  0  : edge on [0, 7]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}})
action  1  : edge on [0, 4]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}})
action  2  : edge on [0, 5]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}})
action  3  : edge on [0, 8]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}})
action  4  : edge on [0, 3]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}})
action  5  : edge on [0, 6]
action child  5  avg_return: 0.0
state child  5  reward: 0
state  5 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 5 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}})
action  6  : edge on [-1, -1]
action child  6  avg_return: 0.0
state child  6  reward: 0
state  6 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 6 graph: defaultdict(<class 'set'>, {})
title connecting GND and Sa1-left
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 15
sim.current.step 4
root offset is:  1
['VIN - Sa - VOUT', 'VIN - Sa - Sb - Sa - GND', 'VOUT - Sb - Sa - GND']
[['Sb0', '8', 'OUT'], ['Sa0', 'IN', 'OUT'], ['Sa1', '0', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100000, 1)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 50 25.0 75.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 50 25.0 75.0
0 0
0.9 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} 50 25.0 75.0
0 0
action  0  : edge on [1, 4]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {4}, 4: {1}})
action  1  : edge on [-1, -1]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}})
action  2  : edge on [1, 3]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {3}, 3: {1}})
action  3  : edge on [1, 5]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {5}, 5: {1}})
action  4  : edge on [1, 6]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {6}, 6: {1}})
title connecting VIN and Sb0-right
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 15
sim.current.step 5
root offset is:  1
action  0  : edge on [2, 5]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {4}, 4: {1}, 2: {5}, 5: {2}})
action  1  : edge on [2, 6]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {4}, 4: {1}, 2: {6}, 6: {2}})
action  2  : edge on [2, 3]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {4}, 4: {1}, 2: {3}, 3: {2}})
action  3  : edge on [-1, -1]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {4}, 4: {1}})
title connecting VOUT and Sa0-left
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 15
sim.current.step 6
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {4}, 4: {1}, 2: {5}, 5: {2}})
action  1  : edge on [3, 8]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {4}, 4: {1}, 2: {5}, 5: {2}, 3: {8}, 8: {3}})
action  2  : edge on [3, 5]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {4}, 4: {1}, 2: {5}, 5: {2, 3}, 3: {5}})
action  3  : edge on [3, 6]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {4}, 4: {1}, 2: {5}, 5: {2}, 3: {6}, 6: {3}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 15
sim.current.step 7
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {4}, 4: {1}, 2: {5}, 5: {2}})
action  1  : edge on [4, 6]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {4}, 4: {1, 6}, 2: {5}, 5: {2}, 6: {4}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 15
sim.current.step 8
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {4}, 4: {1}, 2: {5}, 5: {2}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 15
sim.current.step 9
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {4}, 4: {1}, 2: {5}, 5: {2}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 15
sim.current.step 10
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {4}, 4: {1}, 2: {5}, 5: {2}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 15
sim.current.step 11
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {4}, 4: {1}, 2: {5}, 5: {2}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 15
effis of topo: [{'parameter': 'None', 'efficiency': 0, 'output_voltage': -500}]
#####################Game: 0   steps:  12   average cumulate reward:  0
title result with parameter:None 
-1 , 20 : 12.0
[{'parameter': 'None', 'efficiency': 0, 'output_voltage': -500}]
figures are saved in:figures/2021-03-18-11-46-44/

outputs are saved in:Results/mutitest_50-2021-03-18-11-46-44-50865.txt

figures already existed
Results already existed
261
194
1746
261
194
find
OrderedDict([('L0', ['N-L0-Sb0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-L0-Sb0'])])
figures/2021-03-18-11-47-06/ created
Viz/TreeStructures2021-03-18-11-47-06-50865/ created
max depth is -1 ,trajectory is 20 every thread has  20  trajectories

path with frequency:
('VIN - L - Sb - GND', 0.1447)
('VIN - L - Sa - VOUT', 0.1214)
('VIN - L - Sb - VOUT', 0.0998)
('VIN - Sa - L - VOUT', 0.0914)
('VIN - Sb - L - VOUT', 0.0914)
('VIN - L - Sa - GND', 0.0906)
('VOUT - Sb - Sa - GND', 0.0763)
('VOUT - Sa - Sb - GND', 0.0747)
('VIN - Sa - Sb - VOUT', 0.074)
('VIN - Sb - Sa - VOUT', 0.0707)
('VOUT - L - Sa - GND', 0.0671)
('VIN - L - Sa - Sa - VOUT', 0.065)
('VIN - Sa - L - GND', 0.0612)
('VIN - C - VOUT', 0.0583)
('VOUT - Sb - L - GND', 0.0579)
('VIN - Sb - L - GND', 0.0571)
('VOUT - Sa - Sa - Sb - GND', 0.0549)
('VOUT - Sa - L - GND', 0.0529)
('VIN - Sb - Sa - GND', 0.048)
('VIN - Sa - Sb - GND', 0.043)
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
sim.current.step 0
root offset is:  1
['Sa']
['Sa', 'L']
['Sb']
['Sb', 'Sa']
['Sa', 'Sb']
['Sb', 'Sa']
['Sa', 'C']
['Sb', 'L']
['VIN - Sa - L - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - L - Sb - GND']
[['Sb0', '0', '8'], ['L0', 'OUT', '8'], ['Sa0', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100)]
0.1 ['98', '89']
{'efficiency': 0.98, 'output_voltage': 89.0} 50 25.0 75.0
0 0
0.2 ['98', '79']
{'efficiency': 0.98, 'output_voltage': 79.0} 50 25.0 75.0
0 0
0.3 ['98', '69']
{'efficiency': 0.98, 'output_voltage': 69.0} 50 25.0 75.0
0 0.004704
0.4 ['98', '59']
{'efficiency': 0.98, 'output_voltage': 59.0} 50 25.0 75.0
0.004704 0.281456
0.5 ['98', '49']
{'efficiency': 0.98, 'output_voltage': 49.0} 50 25.0 75.0
0.281456 0.9023840000000001
0.6 ['98', '39']
{'efficiency': 0.98, 'output_voltage': 39.0} 50 25.0 75.0
0.9023840000000001 0.12622399999999992
0.7 ['97', '29']
{'efficiency': 0.97, 'output_voltage': 29.0} 50 25.0 75.0
0.9023840000000001 0.003104
0.8 ['96', '19']
{'efficiency': 0.96, 'output_voltage': 19.0} 50 25.0 75.0
0.9023840000000001 0
0.9 ['89', '9']
{'efficiency': 0.89, 'output_voltage': 9.0} 50 25.0 75.0
0.9023840000000001 0
['Sb', 'C']
['Sa', 'L']
['Sb', 'Sb']
['VIN - Sb - VOUT', 'VIN - Sb - L - Sb - GND', 'VOUT - L - Sb - GND']
[['Sb0', '7', '0'], ['Sb1', 'OUT', 'IN'], ['L0', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'Rb1': [1], 'Ra1': [100000], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'Rb1', 'Ra1', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100)]
0.1 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} 50 25.0 75.0
0 0
0.2 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 50 25.0 75.0
0 0
0.3 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 50 25.0 75.0
0 0
0.4 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.6 ['97', '98']
{'efficiency': 0.97, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.9 ['97', '98']
{'efficiency': 0.97, 'output_voltage': 98.0} 50 25.0 75.0
0 0
['Sa', 'Sa']
['VIN - Sa - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - Sa - Sa - Sb - GND']
[['Sa0', 'IN', '7'], ['Sa1', 'OUT', 'IN'], ['Sb0', '7', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 50 25.0 75.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 50 25.0 75.0
0 0
0.9 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} 50 25.0 75.0
0 0
action  0  : node on 0
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 1
action child  1  avg_return: 0.09023840000000001
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 0
sim.current.step 1
root offset is:  1
['VIN - Sb - VOUT', 'VIN - Sb - Sb - Sa - GND', 'VOUT - Sb - Sa - GND']
[['Sb0', '6', 'OUT'], ['Sa0', '0', '6'], ['Sb1', 'IN', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'Rb1': [1], 'Ra1': [100000]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'Rb1', 'Ra1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000)]
0.1 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} 50 25.0 75.0
0 0
0.2 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 50 25.0 75.0
0 0
0.3 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 50 25.0 75.0
0 0
0.4 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.6 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.9 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
['VIN - Sb - VOUT', 'VIN - Sb - L - Sb - GND', 'VOUT - L - Sb - GND']
[['Sb0', 'OUT', 'IN'], ['Sb1', '8', '0'], ['L0', 'OUT', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'Rb1': [1], 'Ra1': [100000], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'Rb1', 'Ra1', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000, 100)]
0.1 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} 50 25.0 75.0
0 0
0.2 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 50 25.0 75.0
0 0
0.3 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 50 25.0 75.0
0 0
0.4 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.6 ['97', '98']
{'efficiency': 0.97, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.9 ['97', '98']
{'efficiency': 0.97, 'output_voltage': 98.0} 50 25.0 75.0
0 0
['VIN - C - L - VOUT', 'VIN - C - Sb - GND', 'VOUT - L - Sb - GND']
[['Sb0', '8', '0'], ['L0', 'OUT', '8'], ['C0', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
['VIN - Sa - VOUT', 'VIN - Sa - L - Sb - GND', 'VOUT - L - Sb - GND']
[['Sb0', '7', '0'], ['Sa0', 'OUT', 'IN'], ['L0', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 50 25.0 75.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 50 25.0 75.0
0 0
0.9 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} 50 25.0 75.0
0 0
action  0  : node on 0
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 3
action child  1  avg_return: 0.128912
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 2
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 1
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right']
state child 3 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 0
sim.current.step 2
root offset is:  1
['VIN - L - Sb - VOUT', 'VIN - L - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'OUT', '6'], ['L0', 'IN', '6'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10)]
['VIN - L - Sb - VOUT', 'VIN - L - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'OUT', '6'], ['L0', 'IN', '6'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT 6', 'L0 IN 6', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT 6', 'L0 IN 6', 'C0 OUT 0', '']
[['Sb0', 'OUT', '6'], ['L0', 'IN', '6'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT 6
L0 IN 6
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT 6
L0 IN 6
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0']
PCC-50865 violations

['VIN - L - Sb - VOUT', 'VIN - L - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'OUT', '6'], ['L0', 'IN', '6'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10)]
['VIN - L - Sb - VOUT', 'VIN - L - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'OUT', '6'], ['L0', 'IN', '6'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT 6', 'L0 IN 6', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT 6', 'L0 IN 6', 'C0 OUT 0', '']
[['Sb0', 'OUT', '6'], ['L0', 'IN', '6'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT 6
L0 IN 6
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT 6
L0 IN 6
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0']
PCC-50865 violations

['VIN - L - Sb - VOUT', 'VIN - L - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'OUT', '6'], ['L0', 'IN', '6'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100, 10)]
['VIN - L - Sb - VOUT', 'VIN - L - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'OUT', '6'], ['L0', 'IN', '6'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT 6', 'L0 IN 6', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT 6', 'L0 IN 6', 'C0 OUT 0', '']
[['Sb0', 'OUT', '6'], ['L0', 'IN', '6'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT 6
L0 IN 6
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT 6
L0 IN 6
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'C0']
PCC-50865 violations

['VIN - Sb - Sb - VOUT', 'VIN - Sb - L - GND', 'VOUT - Sb - L - GND']
[['Sb0', 'OUT', '7'], ['L0', '7', '0'], ['Sb1', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100], 'Rb1': [1], 'Ra1': [100000]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0', 'Rb1', 'Ra1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000)]
0.1 ['82', '82']
{'efficiency': 0.82, 'output_voltage': 82.0} 50 25.0 75.0
0 0
0.2 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} 50 25.0 75.0
0 0
0.3 ['93', '93']
{'efficiency': 0.93, 'output_voltage': 93.0} 50 25.0 75.0
0 0
0.4 ['94', '95']
{'efficiency': 0.94, 'output_voltage': 95.0} 50 25.0 75.0
0 0
0.5 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} 50 25.0 75.0
0 0
0.6 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 50 25.0 75.0
0 0
0.7 ['96', '97']
{'efficiency': 0.96, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.8 ['96', '97']
{'efficiency': 0.96, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.9 ['95', '97']
{'efficiency': 0.95, 'output_voltage': 97.0} 50 25.0 75.0
0 0
['VIN - L - Sb - VOUT', 'VIN - L - L - GND', 'VOUT - Sb - L - GND']
[['Sb0', '7', 'OUT'], ['L0', '7', 'IN'], ['L1', '7', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
action  0  : node on 1
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sb1-left', 'Sb1-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 0
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sa0-left', 'Sa0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 3
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'L1-left', 'L1-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 2
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'C0-left', 'C0-right']
state child 3 graph: defaultdict(<class 'set'>, {})
title adding node Sb
instant reward: 0 cumulate reward:  0 planning time: 4 cumulate planning time: 4
sim.current.step 3
root offset is:  1
['VIN - Sb - VOUT', 'VIN - Sb - L - GND', 'VOUT - Sb - Sb - L - GND']
[['Sb0', '5', 'IN'], ['L0', '5', '0'], ['Sb1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100], 'Rb1': [1], 'Ra1': [100000]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0', 'Rb1', 'Ra1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000)]
0.1 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} 50 25.0 75.0
0 0
0.2 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 50 25.0 75.0
0 0
0.3 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 50 25.0 75.0
0 0
0.4 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.6 ['97', '98']
{'efficiency': 0.97, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.9 ['97', '98']
{'efficiency': 0.97, 'output_voltage': 98.0} 50 25.0 75.0
0 0
['VIN - Sb - VOUT', 'VIN - Sb - L - GND', 'VOUT - Sb - Sb - L - GND']
[['Sb0', 'IN', 'OUT'], ['L0', '8', '0'], ['Sb1', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100], 'Rb1': [1], 'Ra1': [100000]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0', 'Rb1', 'Ra1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000)]
0.1 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} 50 25.0 75.0
0 0
0.2 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 50 25.0 75.0
0 0
0.3 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 50 25.0 75.0
0 0
0.4 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.6 ['97', '98']
{'efficiency': 0.97, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.9 ['97', '98']
{'efficiency': 0.97, 'output_voltage': 98.0} 50 25.0 75.0
0 0
action  0  : edge on [0, 7]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sb1-left', 'Sb1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}})
action  1  : edge on [0, 3]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sb1-left', 'Sb1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}})
action  2  : edge on [0, 6]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sb1-left', 'Sb1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}})
action  3  : edge on [0, 8]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sb1-left', 'Sb1-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}})
action  4  : edge on [0, 4]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sb1-left', 'Sb1-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}})
action  5  : edge on [0, 5]
action child  5  avg_return: 0.0
state child  5  reward: 0
state  5 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sb1-left', 'Sb1-right']
state child 5 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}})
action  6  : edge on [-1, -1]
action child  6  avg_return: 0.0
state child  6  reward: 0
state  6 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sb1-left', 'Sb1-right']
state child 6 graph: defaultdict(<class 'set'>, {})
title connecting GND and Sb1-left
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 4
sim.current.step 4
root offset is:  1
['VIN - Sb - VOUT', 'VIN - L - Sb - GND', 'VOUT - Sb - L - Sb - GND']
[['Sb0', 'IN', 'OUT'], ['L0', '8', 'IN'], ['Sb1', '0', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100], 'Rb1': [1], 'Ra1': [100000]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0', 'Rb1', 'Ra1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100, 1, 100000)]
0.1 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} 50 25.0 75.0
0 0
0.2 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 50 25.0 75.0
0 0
0.3 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 50 25.0 75.0
0 0
0.4 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 50 25.0 75.0
0 0
0.6 ['97', '98']
{'efficiency': 0.97, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 50 25.0 75.0
0 0
0.9 ['97', '98']
{'efficiency': 0.97, 'output_voltage': 98.0} 50 25.0 75.0
0 0
action  0  : edge on [1, 3]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sb1-left', 'Sb1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {3}, 3: {1}})
action  1  : edge on [1, 6]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sb1-left', 'Sb1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {6}, 6: {1}})
action  2  : edge on [1, 4]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sb1-left', 'Sb1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {4}, 4: {1}})
action  3  : edge on [1, 5]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sb1-left', 'Sb1-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {5}, 5: {1}})
action  4  : edge on [-1, -1]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sb1-left', 'Sb1-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}})
title connecting VIN and Sb0-left
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 4
sim.current.step 5
root offset is:  1
action  0  : edge on [2, 6]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sb1-left', 'Sb1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {3}, 3: {1}, 2: {6}, 6: {2}})
action  1  : edge on [2, 5]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sb1-left', 'Sb1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {3}, 3: {1}, 2: {5}, 5: {2}})
action  2  : edge on [-1, -1]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sb1-left', 'Sb1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {3}, 3: {1}})
action  3  : edge on [2, 4]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sb1-left', 'Sb1-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {3}, 3: {1}, 2: {4}, 4: {2}})
title connecting VOUT and L0-right
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 4
sim.current.step 6
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sb1-left', 'Sb1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {3}, 3: {1}, 2: {6}, 6: {2}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 4
sim.current.step 7
root offset is:  1
action  0  : edge on [4, 5]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sb1-left', 'Sb1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {3}, 3: {1}, 2: {6}, 6: {2}, 4: {5}, 5: {4}})
action  1  : edge on [4, 6]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sb1-left', 'Sb1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {3}, 3: {1}, 2: {6}, 6: {2, 4}, 4: {6}})
action  2  : edge on [-1, -1]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sb1-left', 'Sb1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {3}, 3: {1}, 2: {6}, 6: {2}})
title connecting Sb0-right and L0-left
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 4
sim.current.step 8
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sb1-left', 'Sb1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {3}, 3: {1}, 2: {6}, 6: {2}, 4: {5}, 5: {4}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 4
sim.current.step 9
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sb1-left', 'Sb1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {3}, 3: {1}, 2: {6}, 6: {2}, 4: {5}, 5: {4}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 4
sim.current.step 10
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sb1-left', 'Sb1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {3}, 3: {1}, 2: {6}, 6: {2}, 4: {5}, 5: {4}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 4
sim.current.step 11
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right', 'Sb1-left', 'Sb1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}, 1: {3}, 3: {1}, 2: {6}, 6: {2}, 4: {5}, 5: {4}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 4
effis of topo: [{'parameter': 'None', 'efficiency': 0, 'output_voltage': -500}]
#####################Game: 0   steps:  12   average cumulate reward:  0
title result with parameter:None 
-1 , 20 : 12.0
[{'parameter': 'None', 'efficiency': 0, 'output_voltage': -500}]
figures are saved in:figures/2021-03-18-11-47-06/

outputs are saved in:Results/mutitest_50-2021-03-18-11-47-06-50865.txt

figures already existed
Results already existed
261
194
1746
261
194
find
OrderedDict([('L0', ['N-L0-Sb0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-L0-Sb0'])])
figures/2021-03-18-11-47-16/ created
Viz/TreeStructures2021-03-18-11-47-16-50865/ created
max depth is -1 ,trajectory is 20 every thread has  20  trajectories

path with frequency:
('VIN - L - Sb - GND', 0.1447)
('VIN - L - Sa - VOUT', 0.1214)
('VIN - L - Sb - VOUT', 0.0998)
('VIN - Sa - L - VOUT', 0.0914)
('VIN - Sb - L - VOUT', 0.0914)
('VIN - L - Sa - GND', 0.0906)
('VOUT - Sb - Sa - GND', 0.0763)
('VOUT - Sa - Sb - GND', 0.0747)
('VIN - Sa - Sb - VOUT', 0.074)
('VIN - Sb - Sa - VOUT', 0.0707)
('VOUT - L - Sa - GND', 0.0671)
('VIN - L - Sa - Sa - VOUT', 0.065)
('VIN - Sa - L - GND', 0.0612)
('VIN - C - VOUT', 0.0583)
('VOUT - Sb - L - GND', 0.0579)
('VIN - Sb - L - GND', 0.0571)
('VOUT - Sa - Sa - Sb - GND', 0.0549)
('VOUT - Sa - L - GND', 0.0529)
('VIN - Sb - Sa - GND', 0.048)
('VIN - Sa - Sb - GND', 0.043)
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
sim.current.step 0
root offset is:  1
['Sb']
['Sb', 'L']
['Sa']
['Sa', 'L']
['Sb', 'C']
['Sa', 'Sa']
['Sb', 'Sb']
['Sa', 'C']
['Sb', 'L']
['Sa', 'Sb']
['Sb', 'Sa']
['Sa', 'L']
['VIN - L - L - VOUT', 'VIN - L - Sb - GND', 'VOUT - L - Sb - GND']
[['Sb0', '0', '7'], ['L0', 'OUT', '7'], ['L1', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100)]
0.1 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} 50 25.0 75.0
0 0
0.2 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} 50 25.0 75.0
0 0
0.3 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} 50 25.0 75.0
0 0
0.4 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} 50 25.0 75.0
0 0
0.5 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} 50 25.0 75.0
0 0
0.6 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} 50 25.0 75.0
0 0
0.7 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} 50 25.0 75.0
0 0
0.8 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} 50 25.0 75.0
0 0
0.9 ['98', '99']
{'efficiency': 0.98, 'output_voltage': 99.0} 50 25.0 75.0
0 0
action  0  : node on 1
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 0
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 0
sim.current.step 1
root offset is:  1
['VIN - Sb - VOUT', 'VIN - Sb - L - L - GND', 'VOUT - L - L - GND']
[['Sb0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100)]
['VIN - Sb - VOUT', 'VIN - Sb - L - L - GND', 'VOUT - L - L - GND']
[['Sb0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'L0 7 0', 'L1 7 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'L0 7 0', 'L1 7 OUT', '']
[['Sb0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
L0 7 0
L1 7 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
L0 7 0
L1 7 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'L1']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sb - L - L - GND', 'VOUT - L - L - GND']
[['Sb0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100)]
['VIN - Sb - VOUT', 'VIN - Sb - L - L - GND', 'VOUT - L - L - GND']
[['Sb0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'L0 7 0', 'L1 7 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'L0 7 0', 'L1 7 OUT', '']
[['Sb0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
L0 7 0
L1 7 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
L0 7 0
L1 7 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'L1']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sb - L - L - GND', 'VOUT - L - L - GND']
[['Sb0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100)]
['VIN - Sb - VOUT', 'VIN - Sb - L - L - GND', 'VOUT - L - L - GND']
[['Sb0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'L0 7 0', 'L1 7 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'L0 7 0', 'L1 7 OUT', '']
[['Sb0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
L0 7 0
L1 7 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
L0 7 0
L1 7 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'L1']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sb - L - L - GND', 'VOUT - L - L - GND']
[['Sb0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100)]
['VIN - Sb - VOUT', 'VIN - Sb - L - L - GND', 'VOUT - L - L - GND']
[['Sb0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'L0 7 0', 'L1 7 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'L0 7 0', 'L1 7 OUT', '']
[['Sb0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
L0 7 0
L1 7 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
L0 7 0
L1 7 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'L1']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sb - L - L - GND', 'VOUT - L - L - GND']
[['Sb0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100)]
['VIN - Sb - VOUT', 'VIN - Sb - L - L - GND', 'VOUT - L - L - GND']
[['Sb0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'L0 7 0', 'L1 7 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'L0 7 0', 'L1 7 OUT', '']
[['Sb0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
L0 7 0
L1 7 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
L0 7 0
L1 7 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'L1']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sb - L - L - GND', 'VOUT - L - L - GND']
[['Sb0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100)]
['VIN - Sb - VOUT', 'VIN - Sb - L - L - GND', 'VOUT - L - L - GND']
[['Sb0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'L0 7 0', 'L1 7 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'L0 7 0', 'L1 7 OUT', '']
[['Sb0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
L0 7 0
L1 7 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
L0 7 0
L1 7 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'L1']
PCC-50865 violations

['VIN - Sb - VOUT', 'VIN - Sb - L - L - GND', 'VOUT - L - L - GND']
[['Sb0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 100, 100)]
['VIN - Sb - VOUT', 'VIN - Sb - L - L - GND', 'VOUT - L - L - GND']
[['Sb0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'L0 7 0', 'L1 7 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'L0 7 0', 'L1 7 OUT', '']
[['Sb0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
L0 7 0
L1 7 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
L0 7 0
L1 7 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'L0', 'L1']
PCC-50865 violations

action  0  : node on 2
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 1
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 3
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 0
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right']
state child 3 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 4 cumulate planning time: 4
sim.current.step 2
root offset is:  1
['VIN - C - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - C - Sa - Sb - GND']
[['Sb0', '7', '0'], ['C0', 'OUT', 'IN'], ['Sa0', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
['VIN - C - C - Sb - VOUT', 'VIN - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', '8', 'OUT'], ['C0', 'IN', '0'], ['C1', '0', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
action  0  : node on 2
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 1
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 0
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 3
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 3 graph: defaultdict(<class 'set'>, {})
title adding node C
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 4
sim.current.step 3
root offset is:  1
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 OUT IN', 'C1 IN 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 OUT IN', 'C1 IN 0', '']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 OUT IN
C1 IN 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 OUT IN
C1 IN 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 OUT IN', 'C1 IN 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 OUT IN', 'C1 IN 0', '']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 OUT IN
C1 IN 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 OUT IN
C1 IN 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 OUT IN', 'C1 IN 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 OUT IN', 'C1 IN 0', '']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 OUT IN
C1 IN 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 OUT IN
C1 IN 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 OUT IN', 'C1 IN 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 OUT IN', 'C1 IN 0', '']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 OUT IN
C1 IN 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 OUT IN
C1 IN 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 OUT IN', 'C1 IN 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 OUT IN', 'C1 IN 0', '']
[['Sb0', 'OUT', 'IN'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 OUT IN
C1 IN 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 OUT IN
C1 IN 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - C - C - Sb - GND', 'VOUT - C - Sb - GND']
[['Sb0', '0', '8'], ['C0', 'IN', 'OUT'], ['C1', 'OUT', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'IN', 'OUT'], ['C0', 'IN', 'OUT'], ['C1', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'IN', 'OUT'], ['C0', 'IN', 'OUT'], ['C1', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 IN OUT', 'C1 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 IN OUT', 'C1 OUT 0', '']
[['Sb0', 'IN', 'OUT'], ['C0', 'IN', 'OUT'], ['C1', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 IN OUT
C1 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 IN OUT
C1 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'IN', 'OUT'], ['C0', 'IN', 'OUT'], ['C1', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'IN', 'OUT'], ['C0', 'IN', 'OUT'], ['C1', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 IN OUT', 'C1 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 IN OUT', 'C1 OUT 0', '']
[['Sb0', 'IN', 'OUT'], ['C0', 'IN', 'OUT'], ['C1', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 IN OUT
C1 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 IN OUT
C1 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'IN', 'OUT'], ['C0', 'IN', 'OUT'], ['C1', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'IN', 'OUT'], ['C0', 'IN', 'OUT'], ['C1', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 IN OUT', 'C1 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 IN OUT', 'C1 OUT 0', '']
[['Sb0', 'IN', 'OUT'], ['C0', 'IN', 'OUT'], ['C1', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 IN OUT
C1 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 IN OUT
C1 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'IN', 'OUT'], ['C0', 'IN', 'OUT'], ['C1', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'IN', 'OUT'], ['C0', 'IN', 'OUT'], ['C1', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 IN OUT', 'C1 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 IN OUT', 'C1 OUT 0', '']
[['Sb0', 'IN', 'OUT'], ['C0', 'IN', 'OUT'], ['C1', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 IN OUT
C1 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 IN OUT
C1 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'IN', 'OUT'], ['C0', 'IN', 'OUT'], ['C1', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - C - GND', 'VIN - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', 'IN', 'OUT'], ['C0', 'IN', 'OUT'], ['C1', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 IN OUT', 'C1 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 IN OUT', 'C1 OUT 0', '']
[['Sb0', 'IN', 'OUT'], ['C0', 'IN', 'OUT'], ['C1', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 IN OUT
C1 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 IN OUT
C1 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 IN OUT', 'C1 0 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 IN OUT', 'C1 0 IN', '']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 IN OUT
C1 0 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 IN OUT
C1 0 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 IN OUT', 'C1 0 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 IN OUT', 'C1 0 IN', '']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 IN OUT
C1 0 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 IN OUT
C1 0 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 IN OUT', 'C1 0 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 IN OUT', 'C1 0 IN', '']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 IN OUT
C1 0 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 IN OUT
C1 0 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 IN OUT', 'C1 0 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 IN OUT', 'C1 0 IN', '']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 IN OUT
C1 0 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 IN OUT
C1 0 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 IN OUT', 'C1 0 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 IN OUT', 'C1 0 IN', '']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 IN OUT
C1 0 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 IN OUT
C1 0 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 IN OUT', 'C1 0 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 IN OUT', 'C1 0 IN', '']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 IN OUT
C1 0 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 IN OUT
C1 0 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 IN OUT', 'C1 0 IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 IN OUT', 'C1 0 IN', '']
[['Sb0', 'OUT', 'IN'], ['C0', 'IN', 'OUT'], ['C1', '0', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 IN OUT
C1 0 IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 IN OUT
C1 0 IN

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - Sb - VOUT', 'VIN - C - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', '5', 'OUT'], ['C0', '5', 'IN'], ['C1', '0', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - Sb - VOUT', 'VIN - C - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', '5', 'OUT'], ['C0', '5', 'IN'], ['C1', '0', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 5 OUT', 'C0 5 IN', 'C1 0 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 5 OUT', 'C0 5 IN', 'C1 0 OUT', '']
[['Sb0', '5', 'OUT'], ['C0', '5', 'IN'], ['C1', '0', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 5 OUT
C0 5 IN
C1 0 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 5 OUT
C0 5 IN
C1 0 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - Sb - VOUT', 'VIN - C - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', '5', 'OUT'], ['C0', '5', 'IN'], ['C1', '0', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - Sb - VOUT', 'VIN - C - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', '5', 'OUT'], ['C0', '5', 'IN'], ['C1', '0', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 5 OUT', 'C0 5 IN', 'C1 0 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 5 OUT', 'C0 5 IN', 'C1 0 OUT', '']
[['Sb0', '5', 'OUT'], ['C0', '5', 'IN'], ['C1', '0', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 5 OUT
C0 5 IN
C1 0 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 5 OUT
C0 5 IN
C1 0 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - Sb - VOUT', 'VIN - C - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', '5', 'OUT'], ['C0', '5', 'IN'], ['C1', '0', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - Sb - VOUT', 'VIN - C - Sb - C - GND', 'VOUT - C - GND']
[['Sb0', '5', 'OUT'], ['C0', '5', 'IN'], ['C1', '0', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 5 OUT', 'C0 5 IN', 'C1 0 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 5 OUT', 'C0 5 IN', 'C1 0 OUT', '']
[['Sb0', '5', 'OUT'], ['C0', '5', 'IN'], ['C1', '0', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 5 OUT
C0 5 IN
C1 0 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 5 OUT
C0 5 IN
C1 0 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

action  0  : edge on [0, 3]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}})
action  1  : edge on [0, 7]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}})
action  2  : edge on [0, 5]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}})
action  3  : edge on [-1, -1]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 3 graph: defaultdict(<class 'set'>, {})
action  4  : edge on [0, 4]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}})
action  5  : edge on [0, 6]
action child  5  avg_return: 0.0
state child  5  reward: 0
state  5 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 5 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}})
action  6  : edge on [0, 8]
action child  6  avg_return: 0.0
state child  6  reward: 0
state  6 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 6 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}})
title connecting GND and Sb0-left
instant reward: 0 cumulate reward:  0 planning time: 19 cumulate planning time: 23
sim.current.step 4
root offset is:  1
['VIN - C - Sb - C - VOUT', 'VIN - C - GND', 'VOUT - C - Sb - GND']
[['Sb0', '0', '6'], ['C0', 'OUT', '6'], ['C1', '0', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
['VIN - C - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - Sb - GND']
[['Sb0', '0', '7'], ['C0', '7', 'IN'], ['C1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
action  0  : edge on [1, 5]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {5}, 5: {1}})
action  1  : edge on [1, 7]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {7}, 7: {1}})
action  2  : edge on [1, 8]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {8}, 8: {1}})
action  3  : edge on [-1, -1]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}})
action  4  : edge on [1, 6]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {6}, 6: {1}})
title connecting VIN and C0-left
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 23
sim.current.step 5
root offset is:  1
['VIN - C - Sb - C - VOUT', 'VIN - C - GND', 'VOUT - C - Sb - GND']
[['Sb0', '0', '7'], ['C0', 'IN', '0'], ['C1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 0 6
C0 IN 6
C1 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 0 6
C0 IN 6
C1 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 0 6
C0 IN 6
C1 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 0 6
C0 IN 6
C1 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 0 6
C0 IN 6
C1 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 0 6
C0 IN 6
C1 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', '0', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', '0', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 0 6', 'C0 IN 6', 'C1 0 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 0 6', 'C0 IN 6', 'C1 0 OUT', '']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', '0', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 0 6
C0 IN 6
C1 0 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 0 6
C0 IN 6
C1 0 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', '0', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', '0', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 0 6', 'C0 IN 6', 'C1 0 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 0 6', 'C0 IN 6', 'C1 0 OUT', '']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', '0', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 0 6
C0 IN 6
C1 0 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 0 6
C0 IN 6
C1 0 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', '0', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', '0', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 0 6', 'C0 IN 6', 'C1 0 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 0 6', 'C0 IN 6', 'C1 0 OUT', '']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', '0', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 0 6
C0 IN 6
C1 0 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 0 6
C0 IN 6
C1 0 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - C - Sb - GND']
[['Sb0', '0', '8'], ['C0', 'IN', 'OUT'], ['C1', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
['VIN - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - C - Sb - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 50 25.0 75.0
0 0
action  0  : edge on [2, 7]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {5}, 5: {1}, 2: {7}, 7: {2}})
action  1  : edge on [-1, -1]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {5}, 5: {1}})
action  2  : edge on [2, 6]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {5}, 5: {1}, 2: {6}, 6: {2}})
action  3  : edge on [2, 8]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {5}, 5: {1}, 2: {8}, 8: {2}})
title connecting VOUT and C1-left
instant reward: 0 cumulate reward:  0 planning time: 4 cumulate planning time: 27
sim.current.step 6
root offset is:  1
['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 0 6
C0 IN 6
C1 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 0 6
C0 IN 6
C1 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 0 6
C0 IN 6
C1 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 0 6
C0 IN 6
C1 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 0 6
C0 IN 6
C1 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 0 6
C0 IN 6
C1 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 0 6
C0 IN 6
C1 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 0 6
C0 IN 6
C1 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 0 6
C0 IN 6
C1 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 0 6
C0 IN 6
C1 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 0 6
C0 IN 6
C1 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 0 6
C0 IN 6
C1 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 0 6
C0 IN 6
C1 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 0 6
C0 IN 6
C1 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 0 6
C0 IN 6
C1 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 0 6
C0 IN 6
C1 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 0 6
C0 IN 6
C1 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 0 6
C0 IN 6
C1 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 0 6
C0 IN 6
C1 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 0 6
C0 IN 6
C1 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 0 6
C0 IN 6
C1 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 0 6
C0 IN 6
C1 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 0 6
C0 IN 6
C1 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 0 6
C0 IN 6
C1 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
['VIN - C - Sb - C - VOUT', 'VIN - C - Sb - GND', 'VOUT - C - GND']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 0 6', 'C0 IN 6', 'C1 OUT 0', '']
[['Sb0', '0', '6'], ['C0', 'IN', '6'], ['C1', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 0 6
C0 IN 6
C1 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 0 6
C0 IN 6
C1 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Rb0', 'Ra0', 'C0', 'C1']
PCC-50865 violations

action  0  : edge on [3, 6]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0, 6}, 1: {5}, 5: {1}, 2: {7}, 7: {2}, 6: {3}})
action  1  : edge on [-1, -1]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {5}, 5: {1}, 2: {7}, 7: {2}})
action  2  : edge on [3, 8]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0, 8}, 1: {5}, 5: {1}, 2: {7}, 7: {2}, 8: {3}})
title connecting Sb0-left and C0-right
instant reward: 0 cumulate reward:  0 planning time: 11 cumulate planning time: 38
sim.current.step 7
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0, 6}, 1: {5}, 5: {1}, 2: {7}, 7: {2}, 6: {3}})
action  1  : edge on [4, 8]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0, 6}, 1: {5}, 5: {1}, 2: {7}, 7: {2}, 6: {3}, 4: {8}, 8: {4}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 38
sim.current.step 8
root offset is:  1
action  0  : edge on [5, 8]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0, 6}, 1: {5}, 5: {8, 1}, 2: {7}, 7: {2}, 6: {3}, 8: {5}})
action  1  : edge on [-1, -1]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0, 6}, 1: {5}, 5: {1}, 2: {7}, 7: {2}, 6: {3}})
title connecting C0-left and C1-right
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 38
sim.current.step 9
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0, 6}, 1: {5}, 5: {8, 1}, 2: {7}, 7: {2}, 6: {3}, 8: {5}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 38
sim.current.step 10
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0, 6}, 1: {5}, 5: {8, 1}, 2: {7}, 7: {2}, 6: {3}, 8: {5}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 38
sim.current.step 11
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0, 6}, 1: {5}, 5: {8, 1}, 2: {7}, 7: {2}, 6: {3}, 8: {5}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 38
effis of topo: [{'parameter': 'None', 'efficiency': 0, 'output_voltage': -500}]
#####################Game: 0   steps:  12   average cumulate reward:  0
title result with parameter:None 
-1 , 20 : 12.0
[{'parameter': 'None', 'efficiency': 0, 'output_voltage': -500}]
figures are saved in:figures/2021-03-18-11-47-16/

outputs are saved in:Results/mutitest_50-2021-03-18-11-47-16-50865.txt

figures already existed
Results already existed
261
194
1746
261
194
find
OrderedDict([('L0', ['N-L0-Sb0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-L0-Sb0'])])
figures/2021-03-18-11-48-00/ created
Viz/TreeStructures2021-03-18-11-48-00-50865/ created
max depth is -1 ,trajectory is 20 every thread has  20  trajectories

path with frequency:
('VIN - L - Sb - GND', 0.1447)
('VIN - L - Sa - VOUT', 0.1214)
('VIN - L - Sb - VOUT', 0.0998)
('VIN - Sa - L - VOUT', 0.0914)
('VIN - Sb - L - VOUT', 0.0914)
('VIN - L - Sa - GND', 0.0906)
('VOUT - Sb - Sa - GND', 0.0763)
('VOUT - Sa - Sb - GND', 0.0747)
('VIN - Sa - Sb - VOUT', 0.074)
('VIN - Sb - Sa - VOUT', 0.0707)
('VOUT - L - Sa - GND', 0.0671)
('VIN - L - Sa - Sa - VOUT', 0.065)
('VIN - Sa - L - GND', 0.0612)
('VIN - C - VOUT', 0.0583)
('VOUT - Sb - L - GND', 0.0579)
('VIN - Sb - L - GND', 0.0571)
('VOUT - Sa - Sa - Sb - GND', 0.0549)
('VOUT - Sa - L - GND', 0.0529)
('VIN - Sb - Sa - GND', 0.048)
('VIN - Sa - Sb - GND', 0.043)
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
sim.current.step 0
root offset is:  1
['Sa']
['Sa', 'L']
['VIN - L - Sb - VOUT', 'VIN - L - Sa - GND', 'VOUT - Sb - Sa - GND']
[['Sa0', '0', '8'], ['L0', '8', 'IN'], ['Sb0', 'OUT', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100)]
0.1 ['47', '475']
{'efficiency': 0.47, 'output_voltage': 475.0} 200 100.0 300.0
0 0
0.2 ['78', '392']
{'efficiency': 0.78, 'output_voltage': 392.0} 200 100.0 300.0
0 0
0.3 ['89', '296']
{'efficiency': 0.89, 'output_voltage': 296.0} 200 100.0 300.0
0 0.000712
0.4 ['93', '233']
{'efficiency': 0.93, 'output_voltage': 233.0} 200 100.0 300.0
0.000712 0.322338
0.5 ['95', '191']
{'efficiency': 0.95, 'output_voltage': 191.0} 200 100.0 300.0
0.322338 0.7807099999999999
0.6 ['96', '161']
{'efficiency': 0.96, 'output_voltage': 161.0} 200 100.0 300.0
0.7807099999999999 0.218688
0.7 ['97', '139']
{'efficiency': 0.97, 'output_voltage': 139.0} 200 100.0 300.0
0.7807099999999999 0.007566000000000001
0.8 ['98', '122']
{'efficiency': 0.98, 'output_voltage': 122.0} 200 100.0 300.0
0.7807099999999999 0.004312
0.9 ['98', '109']
{'efficiency': 0.98, 'output_voltage': 109.0} 200 100.0 300.0
0.7807099999999999 0.001764
['Sb']
['Sb', 'Sa']
['Sa', 'C']
['Sb', 'Sa']
['Sa', 'Sa']
['Sb', 'C']
['Sa', 'Sb']
['Sb', 'L']
['Sa', 'L']
['Sb', 'Sb']
['VIN - Sa - VOUT', 'VIN - Sa - L - Sa - GND', 'VOUT - L - Sa - GND']
[['Sa0', '0', '7'], ['Sa1', 'IN', 'OUT'], ['L0', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'Ra1': [100000], 'Rb1': [1], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'Ra1', 'Rb1', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100)]
0.1 ['97', '98']
{'efficiency': 0.97, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.4 ['97', '98']
{'efficiency': 0.97, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 200 100.0 300.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 200 100.0 300.0
0 0
0.9 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} 200 100.0 300.0
0 0
action  0  : node on 0
action child  0  avg_return: 0.078071
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 1
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 0
sim.current.step 1
root offset is:  1
['VIN - L - Sa - VOUT', 'VIN - L - Sb - GND', 'VOUT - Sa - Sb - GND']
[['Sa0', '7', 'OUT'], ['L0', '7', 'IN'], ['Sb0', '7', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100)]
0.1 ['98', '109']
{'efficiency': 0.98, 'output_voltage': 109.0} 200 100.0 300.0
0 0.001764
0.2 ['98', '122']
{'efficiency': 0.98, 'output_voltage': 122.0} 200 100.0 300.0
0.001764 0.004312
0.3 ['97', '139']
{'efficiency': 0.97, 'output_voltage': 139.0} 200 100.0 300.0
0.004312 0.007566000000000001
0.4 ['96', '161']
{'efficiency': 0.96, 'output_voltage': 161.0} 200 100.0 300.0
0.007566000000000001 0.218688
0.5 ['95', '191']
{'efficiency': 0.95, 'output_voltage': 191.0} 200 100.0 300.0
0.218688 0.7807099999999999
0.6 ['93', '233']
{'efficiency': 0.93, 'output_voltage': 233.0} 200 100.0 300.0
0.7807099999999999 0.322338
0.7 ['89', '296']
{'efficiency': 0.89, 'output_voltage': 296.0} 200 100.0 300.0
0.7807099999999999 0.000712
0.8 ['78', '392']
{'efficiency': 0.78, 'output_voltage': 392.0} 200 100.0 300.0
0.7807099999999999 0
0.9 ['47', '475']
{'efficiency': 0.47, 'output_voltage': 475.0} 200 100.0 300.0
0.7807099999999999 0
['VIN - Sb - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - Sb - Sb - Sa - GND']
[['Sa0', '7', '0'], ['Sb0', 'OUT', 'IN'], ['Sb1', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'Rb1': [1], 'Ra1': [100000]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'Rb1', 'Ra1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 1, 100000), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 1, 100000), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 1, 100000), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 1, 100000), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 1, 100000), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 1, 100000), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 1, 100000), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 1, 100000), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 1, 100000)]
0.1 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} 200 100.0 300.0
0 0
0.2 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 200 100.0 300.0
0 0
0.3 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 200 100.0 300.0
0 0
0.4 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.6 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.9 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
['VIN - Sa - Sa - VOUT', 'VIN - Sa - L - GND', 'VOUT - Sa - L - GND']
[['Sa0', '7', 'IN'], ['Sa1', '7', 'OUT'], ['L0', '7', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'Ra1': [100000], 'Rb1': [1], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'Ra1', 'Rb1', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 100)]
0.1 ['95', '97']
{'efficiency': 0.95, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.2 ['96', '97']
{'efficiency': 0.96, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.3 ['96', '97']
{'efficiency': 0.96, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.4 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 200 100.0 300.0
0 0
0.5 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} 200 100.0 300.0
0 0
0.6 ['94', '95']
{'efficiency': 0.94, 'output_voltage': 95.0} 200 100.0 300.0
0 0
0.7 ['93', '93']
{'efficiency': 0.93, 'output_voltage': 93.0} 200 100.0 300.0
0 0
0.8 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} 200 100.0 300.0
0 0
0.9 ['82', '82']
{'efficiency': 0.82, 'output_voltage': 82.0} 200 100.0 300.0
0 0
action  0  : node on 2
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 0
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 1
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 3
action child  3  avg_return: 0.11152999999999998
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right']
state child 3 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 0
sim.current.step 2
root offset is:  1
['VIN - C - VOUT', 'VIN - L - Sa - GND', 'VOUT - C - L - Sa - GND']
[['Sa0', '0', '6'], ['L0', 'IN', '6'], ['C0', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
['VIN - Sa - VOUT', 'VIN - Sa - L - GND', 'VOUT - Sa - Sa - L - GND']
[['Sa0', '6', 'IN'], ['L0', '0', '6'], ['Sa1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100000, 1)]
0.1 ['97', '98']
{'efficiency': 0.97, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.4 ['97', '98']
{'efficiency': 0.97, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 200 100.0 300.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 200 100.0 300.0
0 0
0.9 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} 200 100.0 300.0
0 0
['VIN - Sa - L - VOUT', 'VIN - Sa - Sb - GND', 'VOUT - L - Sb - GND']
[['Sa0', '7', 'IN'], ['L0', '7', 'OUT'], ['Sb0', '7', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100)]
0.1 ['98', '89']
{'efficiency': 0.98, 'output_voltage': 89.0} 200 100.0 300.0
0 0
0.2 ['98', '79']
{'efficiency': 0.98, 'output_voltage': 79.0} 200 100.0 300.0
0 0
0.3 ['98', '69']
{'efficiency': 0.98, 'output_voltage': 69.0} 200 100.0 300.0
0 0
0.4 ['98', '59']
{'efficiency': 0.98, 'output_voltage': 59.0} 200 100.0 300.0
0 0
0.5 ['98', '49']
{'efficiency': 0.98, 'output_voltage': 49.0} 200 100.0 300.0
0 0
0.6 ['98', '39']
{'efficiency': 0.98, 'output_voltage': 39.0} 200 100.0 300.0
0 0
0.7 ['97', '29']
{'efficiency': 0.97, 'output_voltage': 29.0} 200 100.0 300.0
0 0
0.8 ['96', '19']
{'efficiency': 0.96, 'output_voltage': 19.0} 200 100.0 300.0
0 0
0.9 ['89', '9']
{'efficiency': 0.89, 'output_voltage': 9.0} 200 100.0 300.0
0 0
['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100)]
['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'L0 7 0', 'L1 7 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'L0 7 0', 'L1 7 OUT', '']
[['Sa0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
L0 7 0
L1 7 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
L0 7 0
L1 7 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100)]
['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'L0 7 0', 'L1 7 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'L0 7 0', 'L1 7 OUT', '']
[['Sa0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
L0 7 0
L1 7 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
L0 7 0
L1 7 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100)]
['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'L0 7 0', 'L1 7 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'L0 7 0', 'L1 7 OUT', '']
[['Sa0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
L0 7 0
L1 7 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
L0 7 0
L1 7 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100)]
['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'L0 7 0', 'L1 7 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'L0 7 0', 'L1 7 OUT', '']
[['Sa0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
L0 7 0
L1 7 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
L0 7 0
L1 7 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100)]
['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'L0 7 0', 'L1 7 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'L0 7 0', 'L1 7 OUT', '']
[['Sa0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
L0 7 0
L1 7 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
L0 7 0
L1 7 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100)]
['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'L0 7 0', 'L1 7 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'L0 7 0', 'L1 7 OUT', '']
[['Sa0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
L0 7 0
L1 7 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
L0 7 0
L1 7 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100)]
['VIN - Sa - VOUT', 'VIN - Sa - L - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'L0 7 0', 'L1 7 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'L0 7 0', 'L1 7 OUT', '']
[['Sa0', 'IN', 'OUT'], ['L0', '7', '0'], ['L1', '7', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
L0 7 0
L1 7 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
L0 7 0
L1 7 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'L1']
PCC-50865 violations

['VIN - Sa - L - VOUT', 'VIN - Sa - L - GND', 'VOUT - L - L - GND']
[['Sa0', 'IN', '8'], ['L0', '0', '8'], ['L1', 'OUT', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'L1': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'L1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 100)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
['VIN - Sa - VOUT', 'VIN - Sa - Sb - L - GND', 'VOUT - Sb - L - GND']
[['Sa0', 'IN', 'OUT'], ['L0', '0', '8'], ['Sb0', 'OUT', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 200 100.0 300.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 200 100.0 300.0
0 0
0.9 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} 200 100.0 300.0
0 0
action  0  : node on 2
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'C0-left', 'C0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 3
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'L1-left', 'L1-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 1
action child  2  avg_return: 0.11153
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'Sb0-left', 'Sb0-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 0
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'Sa1-left', 'Sa1-right']
state child 3 graph: defaultdict(<class 'set'>, {})
title adding node Sb
instant reward: 0 cumulate reward:  0 planning time: 4 cumulate planning time: 4
sim.current.step 3
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'Sb0-left', 'Sb0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : edge on [0, 4]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'Sb0-left', 'Sb0-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}})
action  2  : edge on [0, 8]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'Sb0-left', 'Sb0-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}})
action  3  : edge on [0, 3]
action child  3  avg_return: 0.19517749999999995
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'Sb0-left', 'Sb0-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}})
action  4  : edge on [0, 7]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'Sb0-left', 'Sb0-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}})
action  5  : edge on [0, 5]
action child  5  avg_return: 0.0
state child  5  reward: 0
state  5 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'Sb0-left', 'Sb0-right']
state child 5 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}})
action  6  : edge on [0, 6]
action child  6  avg_return: 0.0
state child  6  reward: 0
state  6 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'Sb0-left', 'Sb0-right']
state child 6 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}})
title connecting GND and Sa0-left
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 4
sim.current.step 4
root offset is:  1
['VIN - Sb - VOUT', 'VIN - Sb - L - Sa - GND', 'VOUT - L - Sa - GND']
[['Sa0', '0', '5'], ['L0', '5', 'OUT'], ['Sb0', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100)]
0.1 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} 200 100.0 300.0
0 0
0.2 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 200 100.0 300.0
0 0
0.3 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 200 100.0 300.0
0 0
0.4 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.6 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.9 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
['VIN - Sb - VOUT', 'VIN - L - Sa - GND', 'VOUT - Sb - L - Sa - GND']
[['Sa0', '0', '6'], ['L0', 'IN', '6'], ['Sb0', 'IN', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100)]
0.1 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} 200 100.0 300.0
0 0
0.2 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 200 100.0 300.0
0 0
0.3 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 200 100.0 300.0
0 0
0.4 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.6 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.9 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
action  0  : edge on [1, 8]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'Sb0-left', 'Sb0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {8}, 8: {1}})
action  1  : edge on [1, 6]
action child  1  avg_return: 0.3122839999999999
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'Sb0-left', 'Sb0-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {6}, 6: {1}})
action  2  : edge on [-1, -1]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'Sb0-left', 'Sb0-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}})
action  3  : edge on [1, 5]
action child  3  avg_return: 0.312284
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'Sb0-left', 'Sb0-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {5}, 5: {1}})
action  4  : edge on [1, 7]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'Sb0-left', 'Sb0-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {7}, 7: {1}})
title connecting VIN and L0-left
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 4
sim.current.step 5
root offset is:  1
action  0  : edge on [2, 8]
action child  0  avg_return: 0.390355
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'Sb0-left', 'Sb0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {5}, 5: {1}, 2: {8}, 8: {2}})
action  1  : edge on [2, 7]
action child  1  avg_return: 0.09758874999999999
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'Sb0-left', 'Sb0-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {5}, 5: {1}, 2: {7}, 7: {2}})
action  2  : edge on [-1, -1]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'Sb0-left', 'Sb0-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {5}, 5: {1}})
title connecting VOUT and Sb0-right
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 4
sim.current.step 6
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.27024576923076915
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'Sb0-left', 'Sb0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {5}, 5: {1}, 2: {8}, 8: {2}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 4
sim.current.step 7
root offset is:  1
action  0  : edge on [4, 6]
action child  0  avg_return: 0.20818933333333334
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'Sb0-left', 'Sb0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {5}, 5: {1}, 2: {8}, 8: {2}, 4: {6}, 6: {4}})
action  1  : edge on [-1, -1]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'Sb0-left', 'Sb0-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {5}, 5: {1}, 2: {8}, 8: {2}})
action  2  : edge on [4, 7]
action child  2  avg_return: 0.468426
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'Sb0-left', 'Sb0-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {5}, 5: {1}, 2: {8}, 8: {2}, 4: {7}, 7: {4}})
title connecting Sa0-right and Sb0-left
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 4
sim.current.step 8
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.42584181818181815
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'Sb0-left', 'Sb0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {5}, 5: {1}, 2: {8}, 8: {2}, 4: {7}, 7: {4}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 4
sim.current.step 9
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'Sb0-left', 'Sb0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {5}, 5: {1}, 2: {8}, 8: {2}, 4: {7}, 7: {4}})
action  1  : edge on [6, 7]
action child  1  avg_return: 0.7807099999999999
state child  1  reward: 0.7807099999999999
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'Sb0-left', 'Sb0-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {5}, 5: {1}, 2: {8}, 8: {2}, 4: {7}, 7: {4, 6}, 6: {7}})
['VIN - L - Sb - VOUT', 'VIN - L - Sa - GND', 'VOUT - Sb - Sa - GND']
[['Sa0', '0', '7'], ['L0', 'IN', '7'], ['Sb0', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100)]
0.1 ['47', '475']
{'efficiency': 0.47, 'output_voltage': 475.0} 200 100.0 300.0
0 0
0.2 ['78', '392']
{'efficiency': 0.78, 'output_voltage': 392.0} 200 100.0 300.0
0 0
0.3 ['89', '296']
{'efficiency': 0.89, 'output_voltage': 296.0} 200 100.0 300.0
0 0.000712
0.4 ['93', '233']
{'efficiency': 0.93, 'output_voltage': 233.0} 200 100.0 300.0
0.000712 0.322338
0.5 ['95', '191']
{'efficiency': 0.95, 'output_voltage': 191.0} 200 100.0 300.0
0.322338 0.7807099999999999
0.6 ['96', '161']
{'efficiency': 0.96, 'output_voltage': 161.0} 200 100.0 300.0
0.7807099999999999 0.218688
0.7 ['97', '139']
{'efficiency': 0.97, 'output_voltage': 139.0} 200 100.0 300.0
0.7807099999999999 0.007566000000000001
0.8 ['98', '122']
{'efficiency': 0.98, 'output_voltage': 122.0} 200 100.0 300.0
0.7807099999999999 0.004312
0.9 ['98', '109']
{'efficiency': 0.98, 'output_voltage': 109.0} 200 100.0 300.0
0.7807099999999999 0.001764
title connecting L0-right and Sb0-left
instant reward: 0 cumulate reward:  0.7807099999999999 planning time: 0 cumulate planning time: 4
sim.current.step 10
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0.0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'Sb0-left', 'Sb0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {5}, 5: {1}, 2: {8}, 8: {2}, 4: {7}, 7: {4, 6}, 6: {7}})
action  1  : terminal on 0
action child  1  avg_return: 0.0
state child  1  reward: 0.0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'Sb0-left', 'Sb0-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {5}, 5: {1}, 2: {8}, 8: {2}, 4: {7}, 7: {4, 6}, 6: {7}})
title skip connecting
instant reward: 0 cumulate reward:  0.7807099999999999 planning time: 0 cumulate planning time: 4
sim.current.step 11
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0.0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'Sb0-left', 'Sb0-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {5}, 5: {1}, 2: {8}, 8: {2}, 4: {7}, 7: {4, 6}, 6: {7}})
action  1  : terminal on 0
action child  1  avg_return: 0.0
state child  1  reward: 0.0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right', 'Sb0-left', 'Sb0-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}, 1: {5}, 5: {1}, 2: {8}, 8: {2}, 4: {7}, 7: {4, 6}, 6: {7}})
title skip connecting
instant reward: 0 cumulate reward:  0.7807099999999999 planning time: 0 cumulate planning time: 4
effis of topo: [{'parameter': '0.5', 'efficiency': {'efficiency': 0.95, 'output_voltage': 191.0}, 'output_voltage': 191.0}]
#####################Game: 0   steps:  12   average cumulate reward:  0.7807099999999999
title result with parameter:0.5 
-1 , 20 : 12.0
[{'parameter': '0.5', 'efficiency': {'efficiency': 0.95, 'output_voltage': 191.0}, 'output_voltage': 191.0}]
figures are saved in:figures/2021-03-18-11-48-00/

outputs are saved in:Results/mutitest_200-2021-03-18-11-48-00-50865.txt

figures already existed
Results already existed
261
194
1746
261
194
find
OrderedDict([('L0', ['N-L0-Sb0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-L0-Sb0'])])
figures/2021-03-18-11-48-10/ created
Viz/TreeStructures2021-03-18-11-48-10-50865/ created
max depth is -1 ,trajectory is 20 every thread has  20  trajectories

path with frequency:
('VIN - L - Sb - GND', 0.1447)
('VIN - L - Sa - VOUT', 0.1214)
('VIN - L - Sb - VOUT', 0.0998)
('VIN - Sa - L - VOUT', 0.0914)
('VIN - Sb - L - VOUT', 0.0914)
('VIN - L - Sa - GND', 0.0906)
('VOUT - Sb - Sa - GND', 0.0763)
('VOUT - Sa - Sb - GND', 0.0747)
('VIN - Sa - Sb - VOUT', 0.074)
('VIN - Sb - Sa - VOUT', 0.0707)
('VOUT - L - Sa - GND', 0.0671)
('VIN - L - Sa - Sa - VOUT', 0.065)
('VIN - Sa - L - GND', 0.0612)
('VIN - C - VOUT', 0.0583)
('VOUT - Sb - L - GND', 0.0579)
('VIN - Sb - L - GND', 0.0571)
('VOUT - Sa - Sa - Sb - GND', 0.0549)
('VOUT - Sa - L - GND', 0.0529)
('VIN - Sb - Sa - GND', 0.048)
('VIN - Sa - Sb - GND', 0.043)
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
sim.current.step 0
root offset is:  1
['Sa']
['Sa', 'L']
['Sb']
['Sb', 'L']
['Sa', 'C']
['Sb', 'Sa']
['Sa', 'Sa']
['Sb', 'C']
['Sa', 'Sb']
['Sb', 'Sb']
['Sa', 'L']
['Sb', 'L']
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 0 IN', 'C1 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 0 IN', 'C1 OUT IN', '']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 0 IN
C1 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 0 IN
C1 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 0 IN', 'C1 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 0 IN', 'C1 OUT IN', '']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 0 IN
C1 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 0 IN
C1 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 0 IN', 'C1 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 0 IN', 'C1 OUT IN', '']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 0 IN
C1 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 0 IN
C1 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

action  0  : node on 0
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 1
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 2 cumulate planning time: 2
sim.current.step 1
root offset is:  1
['VIN - C - Sa - Sb - VOUT', 'VIN - C - GND', 'VOUT - Sb - Sa - GND']
[['Sa0', '8', '0'], ['C0', '0', 'IN'], ['Sb0', 'OUT', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
['VIN - L - Sa - VOUT', 'VIN - L - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', '5', 'OUT'], ['L0', '5', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10)]
['VIN - L - Sa - VOUT', 'VIN - L - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', '5', 'OUT'], ['L0', '5', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 5 OUT', 'L0 5 IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 5 OUT', 'L0 5 IN', 'C0 OUT 0', '']
[['Sa0', '5', 'OUT'], ['L0', '5', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 5 OUT
L0 5 IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 5 OUT
L0 5 IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0']
PCC-50865 violations

['VIN - L - Sa - VOUT', 'VIN - L - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', '5', 'OUT'], ['L0', '5', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10)]
['VIN - L - Sa - VOUT', 'VIN - L - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', '5', 'OUT'], ['L0', '5', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 5 OUT', 'L0 5 IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 5 OUT', 'L0 5 IN', 'C0 OUT 0', '']
[['Sa0', '5', 'OUT'], ['L0', '5', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 5 OUT
L0 5 IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 5 OUT
L0 5 IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0']
PCC-50865 violations

['VIN - L - Sa - VOUT', 'VIN - L - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', '5', 'OUT'], ['L0', '5', 'IN'], ['C0', 'OUT', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100, 10)]
['VIN - L - Sa - VOUT', 'VIN - L - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', '5', 'OUT'], ['L0', '5', 'IN'], ['C0', 'OUT', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 5 OUT', 'L0 5 IN', 'C0 OUT 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 5 OUT', 'L0 5 IN', 'C0 OUT 0', '']
[['Sa0', '5', 'OUT'], ['L0', '5', 'IN'], ['C0', 'OUT', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 5 OUT
L0 5 IN
C0 OUT 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 5 OUT
L0 5 IN
C0 OUT 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'L0', 'C0']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - Sa - Sb - GND', 'VOUT - Sa - Sb - GND']
[['Sa0', '6', 'OUT'], ['Sb0', '0', '6'], ['Sa1', 'IN', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 200 100.0 300.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 200 100.0 300.0
0 0
0.9 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} 200 100.0 300.0
0 0
action  0  : node on 2
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 0
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 1
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 3
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right']
state child 3 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 3 cumulate planning time: 5
sim.current.step 2
root offset is:  1
['VIN - C - C - VOUT', 'VIN - C - Sa - GND', 'VOUT - C - Sa - GND']
[['Sa0', '0', '8'], ['C0', '8', 'IN'], ['C1', 'OUT', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
['VIN - C - VOUT', 'VIN - Sa - L - GND', 'VOUT - C - Sa - L - GND']
[['Sa0', 'IN', '7'], ['C0', 'IN', 'OUT'], ['L0', '7', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 0 IN', 'C1 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 0 IN', 'C1 OUT IN', '']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 0 IN
C1 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 0 IN
C1 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 0 IN', 'C1 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 0 IN', 'C1 OUT IN', '']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 0 IN
C1 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 0 IN
C1 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 0 IN', 'C1 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 0 IN', 'C1 OUT IN', '']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 0 IN
C1 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 0 IN
C1 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 0 IN', 'C1 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 0 IN', 'C1 OUT IN', '']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 0 IN
C1 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 0 IN
C1 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 0 IN', 'C1 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 0 IN', 'C1 OUT IN', '']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['C1', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 0 IN
C1 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 0 IN
C1 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

action  0  : node on 2
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 0
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 1
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sb0-left', 'Sb0-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 3
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 3 graph: defaultdict(<class 'set'>, {})
title adding node C
instant reward: 0 cumulate reward:  0 planning time: 4 cumulate planning time: 9
sim.current.step 3
root offset is:  1
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', 'IN'], ['C1', '0', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', 'IN'], ['C1', '0', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 OUT IN', 'C1 0 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 OUT IN', 'C1 0 OUT', '']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', 'IN'], ['C1', '0', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 OUT IN
C1 0 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 OUT IN
C1 0 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', 'IN'], ['C1', '0', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', 'IN'], ['C1', '0', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 OUT IN', 'C1 0 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 OUT IN', 'C1 0 OUT', '']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', 'IN'], ['C1', '0', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 OUT IN
C1 0 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 OUT IN
C1 0 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', 'IN'], ['C1', '0', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', 'IN'], ['C1', '0', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 OUT IN', 'C1 0 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 OUT IN', 'C1 0 OUT', '']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', 'IN'], ['C1', '0', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 OUT IN
C1 0 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 OUT IN
C1 0 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - Sa - C - VOUT', 'VIN - C - GND', 'VOUT - C - Sa - GND']
[['Sa0', '0', '7'], ['C0', 'IN', '0'], ['C1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
['VIN - C - Sa - C - VOUT', 'VIN - C - Sa - GND', 'VOUT - C - GND']
[['Sa0', '8', '0'], ['C0', '0', 'OUT'], ['C1', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - Sa - C - VOUT', 'VIN - C - Sa - GND', 'VOUT - C - GND']
[['Sa0', '8', '0'], ['C0', '0', 'OUT'], ['C1', 'IN', '8']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 8 0', 'C0 0 OUT', 'C1 IN 8', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 8 0', 'C0 0 OUT', 'C1 IN 8', '']
[['Sa0', '8', '0'], ['C0', '0', 'OUT'], ['C1', 'IN', '8']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 8 0
C0 0 OUT
C1 IN 8

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 8 0
C0 0 OUT
C1 IN 8

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - Sa - C - VOUT', 'VIN - C - Sa - GND', 'VOUT - C - GND']
[['Sa0', '8', '0'], ['C0', '0', 'OUT'], ['C1', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - Sa - C - VOUT', 'VIN - C - Sa - GND', 'VOUT - C - GND']
[['Sa0', '8', '0'], ['C0', '0', 'OUT'], ['C1', 'IN', '8']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 8 0', 'C0 0 OUT', 'C1 IN 8', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 8 0', 'C0 0 OUT', 'C1 IN 8', '']
[['Sa0', '8', '0'], ['C0', '0', 'OUT'], ['C1', 'IN', '8']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 8 0
C0 0 OUT
C1 IN 8

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 8 0
C0 0 OUT
C1 IN 8

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - C - Sa - GND', 'VOUT - C - C - Sa - GND']
[['Sa0', '0', '8'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 OUT IN', 'C1 IN 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 OUT IN', 'C1 IN 0', '']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 OUT IN
C1 IN 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 OUT IN
C1 IN 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 OUT IN', 'C1 IN 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 OUT IN', 'C1 IN 0', '']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 OUT IN
C1 IN 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 OUT IN
C1 IN 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 OUT IN', 'C1 IN 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 OUT IN', 'C1 IN 0', '']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 OUT IN
C1 IN 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 OUT IN
C1 IN 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 OUT IN', 'C1 IN 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 OUT IN', 'C1 IN 0', '']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 OUT IN
C1 IN 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 OUT IN
C1 IN 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 OUT IN', 'C1 IN 0', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 OUT IN', 'C1 IN 0', '']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', 'IN'], ['C1', 'IN', '0']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 OUT IN
C1 IN 0

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 OUT IN
C1 IN 0

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

action  0  : edge on [0, 6]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}})
action  1  : edge on [0, 7]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}})
action  2  : edge on [0, 3]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}})
action  3  : edge on [-1, -1]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 3 graph: defaultdict(<class 'set'>, {})
action  4  : edge on [0, 5]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}})
action  5  : edge on [0, 8]
action child  5  avg_return: 0.0
state child  5  reward: 0
state  5 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 5 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}})
action  6  : edge on [0, 4]
action child  6  avg_return: 0.0
state child  6  reward: 0
state  6 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 6 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}})
title connecting GND and C0-right
instant reward: 0 cumulate reward:  0 planning time: 9 cumulate planning time: 18
sim.current.step 4
root offset is:  1
['VIN - Sa - VOUT', 'VIN - C - C - GND', 'VOUT - Sa - C - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '7', '0'], ['C1', '7', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
0.1 [0, -500]
{'efficiency': 0.0, 'output_voltage': -500.0} 200 100.0 300.0
0 0
0.2 [0, -500]
{'efficiency': 0.0, 'output_voltage': -500.0} 200 100.0 300.0
0 0
0.3 [0, -500]
{'efficiency': 0.0, 'output_voltage': -500.0} 200 100.0 300.0
0 0
0.4 [0, -500]
{'efficiency': 0.0, 'output_voltage': -500.0} 200 100.0 300.0
0 0
0.5 [0, -500]
{'efficiency': 0.0, 'output_voltage': -500.0} 200 100.0 300.0
0 0
0.6 [0, -500]
{'efficiency': 0.0, 'output_voltage': -500.0} 200 100.0 300.0
0 0
0.7 [0, -500]
{'efficiency': 0.0, 'output_voltage': -500.0} 200 100.0 300.0
0 0
0.8 [0, -500]
{'efficiency': 0.0, 'output_voltage': -500.0} 200 100.0 300.0
0 0
0.9 [0, -500]
{'efficiency': 0.0, 'output_voltage': -500.0} 200 100.0 300.0
0 0
['VIN - C - Sa - C - VOUT', 'VIN - C - Sa - GND', 'VOUT - C - GND']
[['Sa0', '8', '0'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - Sa - C - VOUT', 'VIN - C - Sa - GND', 'VOUT - C - GND']
[['Sa0', '8', '0'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 8 0', 'C0 OUT 0', 'C1 IN 8', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 8 0', 'C0 OUT 0', 'C1 IN 8', '']
[['Sa0', '8', '0'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 8 0
C0 OUT 0
C1 IN 8

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 8 0
C0 OUT 0
C1 IN 8

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - Sa - C - VOUT', 'VIN - C - Sa - GND', 'VOUT - C - GND']
[['Sa0', '8', '0'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - Sa - C - VOUT', 'VIN - C - Sa - GND', 'VOUT - C - GND']
[['Sa0', '8', '0'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 8 0', 'C0 OUT 0', 'C1 IN 8', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 8 0', 'C0 OUT 0', 'C1 IN 8', '']
[['Sa0', '8', '0'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 8 0
C0 OUT 0
C1 IN 8

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 8 0
C0 OUT 0
C1 IN 8

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - Sa - C - VOUT', 'VIN - C - Sa - GND', 'VOUT - C - GND']
[['Sa0', '8', '0'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - Sa - C - VOUT', 'VIN - C - Sa - GND', 'VOUT - C - GND']
[['Sa0', '8', '0'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 8 0', 'C0 OUT 0', 'C1 IN 8', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 8 0', 'C0 OUT 0', 'C1 IN 8', '']
[['Sa0', '8', '0'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 8 0
C0 OUT 0
C1 IN 8

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 8 0
C0 OUT 0
C1 IN 8

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - Sa - C - VOUT', 'VIN - C - Sa - GND', 'VOUT - C - GND']
[['Sa0', '8', '0'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - Sa - C - VOUT', 'VIN - C - Sa - GND', 'VOUT - C - GND']
[['Sa0', '8', '0'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 8 0', 'C0 OUT 0', 'C1 IN 8', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 8 0', 'C0 OUT 0', 'C1 IN 8', '']
[['Sa0', '8', '0'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 8 0
C0 OUT 0
C1 IN 8

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 8 0
C0 OUT 0
C1 IN 8

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - Sa - C - VOUT', 'VIN - C - Sa - GND', 'VOUT - C - GND']
[['Sa0', '8', '0'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - Sa - C - VOUT', 'VIN - C - Sa - GND', 'VOUT - C - GND']
[['Sa0', '8', '0'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 8 0', 'C0 OUT 0', 'C1 IN 8', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 8 0', 'C0 OUT 0', 'C1 IN 8', '']
[['Sa0', '8', '0'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 8 0
C0 OUT 0
C1 IN 8

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 8 0
C0 OUT 0
C1 IN 8

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - Sa - C - VOUT', 'VIN - C - Sa - GND', 'VOUT - C - GND']
[['Sa0', '8', '0'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - Sa - C - VOUT', 'VIN - C - Sa - GND', 'VOUT - C - GND']
[['Sa0', '8', '0'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 8 0', 'C0 OUT 0', 'C1 IN 8', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 8 0', 'C0 OUT 0', 'C1 IN 8', '']
[['Sa0', '8', '0'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 8 0
C0 OUT 0
C1 IN 8

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 8 0
C0 OUT 0
C1 IN 8

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - Sa - C - VOUT', 'VIN - C - Sa - GND', 'VOUT - C - GND']
[['Sa0', '8', '0'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - Sa - C - VOUT', 'VIN - C - Sa - GND', 'VOUT - C - GND']
[['Sa0', '8', '0'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 8 0', 'C0 OUT 0', 'C1 IN 8', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 8 0', 'C0 OUT 0', 'C1 IN 8', '']
[['Sa0', '8', '0'], ['C0', 'OUT', '0'], ['C1', 'IN', '8']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 8 0
C0 OUT 0
C1 IN 8

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 8 0
C0 OUT 0
C1 IN 8

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['C1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['C1', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 OUT 0', 'C1 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 OUT 0', 'C1 OUT IN', '']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['C1', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 OUT 0
C1 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 OUT 0
C1 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['C1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['C1', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 OUT 0', 'C1 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 OUT 0', 'C1 OUT IN', '']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['C1', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 OUT 0
C1 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 OUT 0
C1 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['C1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['C1', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 IN OUT', 'C0 OUT 0', 'C1 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 IN OUT', 'C0 OUT 0', 'C1 OUT IN', '']
[['Sa0', 'IN', 'OUT'], ['C0', 'OUT', '0'], ['C1', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 IN OUT
C0 OUT 0
C1 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 IN OUT
C0 OUT 0
C1 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'IN', '0'], ['C1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'IN', '0'], ['C1', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 IN 0', 'C1 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 IN 0', 'C1 OUT IN', '']
[['Sa0', 'OUT', 'IN'], ['C0', 'IN', '0'], ['C1', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 IN 0
C1 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 IN 0
C1 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'IN', '0'], ['C1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'IN', '0'], ['C1', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 IN 0', 'C1 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 IN 0', 'C1 OUT IN', '']
[['Sa0', 'OUT', 'IN'], ['C0', 'IN', '0'], ['C1', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 IN 0
C1 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 IN 0
C1 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'IN', '0'], ['C1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'IN', '0'], ['C1', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 IN 0', 'C1 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 IN 0', 'C1 OUT IN', '']
[['Sa0', 'OUT', 'IN'], ['C0', 'IN', '0'], ['C1', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 IN 0
C1 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 IN 0
C1 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'IN', '0'], ['C1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'IN', '0'], ['C1', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 IN 0', 'C1 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 IN 0', 'C1 OUT IN', '']
[['Sa0', 'OUT', 'IN'], ['C0', 'IN', '0'], ['C1', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 IN 0
C1 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 IN 0
C1 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'IN', '0'], ['C1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'IN', '0'], ['C1', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 IN 0', 'C1 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 IN 0', 'C1 OUT IN', '']
[['Sa0', 'OUT', 'IN'], ['C0', 'IN', '0'], ['C1', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 IN 0
C1 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 IN 0
C1 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'IN', '0'], ['C1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'IN', '0'], ['C1', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 IN 0', 'C1 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 IN 0', 'C1 OUT IN', '']
[['Sa0', 'OUT', 'IN'], ['C0', 'IN', '0'], ['C1', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 IN 0
C1 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 IN 0
C1 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'IN', '0'], ['C1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - C - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'IN', '0'], ['C1', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 IN 0', 'C1 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 IN 0', 'C1 OUT IN', '']
[['Sa0', 'OUT', 'IN'], ['C0', 'IN', '0'], ['C1', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 IN 0
C1 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 IN 0
C1 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - Sa - C - VOUT', 'VIN - C - GND', 'VOUT - C - Sa - C - GND']
[['Sa0', 'IN', '7'], ['C0', 'IN', '0'], ['C1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
['VIN - C - C - Sa - VOUT', 'VIN - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', '7', 'OUT'], ['C0', 'IN', '0'], ['C1', '7', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
action  0  : edge on [1, 4]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {4}, 4: {1}})
action  1  : edge on [-1, -1]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}})
action  2  : edge on [1, 7]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {7}, 7: {1}})
action  3  : edge on [1, 5]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {5}, 5: {1}})
action  4  : edge on [1, 3]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {3}, 3: {1}})
action  5  : edge on [1, 8]
action child  5  avg_return: 0.0
state child  5  reward: 0
state  5 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 5 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {8}, 8: {1}})
title connecting VIN and Sa0-right
instant reward: 0 cumulate reward:  0 planning time: 16 cumulate planning time: 34
sim.current.step 5
root offset is:  1
['VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', '0', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', '0', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 OUT 0', 'C1 0 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 OUT 0', 'C1 0 OUT', '']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', '0', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 OUT 0
C1 0 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 OUT 0
C1 0 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', '0', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', '0', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 OUT 0', 'C1 0 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 OUT 0', 'C1 0 OUT', '']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', '0', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 OUT 0
C1 0 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 OUT 0
C1 0 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', '0', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', '0', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 OUT 0', 'C1 0 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 OUT 0', 'C1 0 OUT', '']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', '0', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 OUT 0
C1 0 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 OUT 0
C1 0 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', '0', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', '0', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 OUT 0', 'C1 0 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 OUT 0', 'C1 0 OUT', '']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', '0', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 OUT 0
C1 0 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 OUT 0
C1 0 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', '0', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', '0', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 OUT 0', 'C1 0 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 OUT 0', 'C1 0 OUT', '']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', '0', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 OUT 0
C1 0 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 OUT 0
C1 0 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', '7', '0'], ['C1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - Sa - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', '7', '0'], ['C1', '7', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 7 0', 'C1 7 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 7 0', 'C1 7 OUT', '']
[['Sa0', 'OUT', 'IN'], ['C0', '7', '0'], ['C1', '7', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 7 0
C1 7 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 7 0
C1 7 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', '7', '0'], ['C1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - Sa - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', '7', '0'], ['C1', '7', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 7 0', 'C1 7 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 7 0', 'C1 7 OUT', '']
[['Sa0', 'OUT', 'IN'], ['C0', '7', '0'], ['C1', '7', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 7 0
C1 7 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 7 0
C1 7 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', '7', '0'], ['C1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - Sa - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', '7', '0'], ['C1', '7', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 7 0', 'C1 7 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 7 0', 'C1 7 OUT', '']
[['Sa0', 'OUT', 'IN'], ['C0', '7', '0'], ['C1', '7', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 7 0
C1 7 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 7 0
C1 7 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', '7', '0'], ['C1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - Sa - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', '7', '0'], ['C1', '7', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 7 0', 'C1 7 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 7 0', 'C1 7 OUT', '']
[['Sa0', 'OUT', 'IN'], ['C0', '7', '0'], ['C1', '7', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 7 0
C1 7 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 7 0
C1 7 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', '7', '0'], ['C1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - Sa - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', '7', '0'], ['C1', '7', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 7 0', 'C1 7 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 7 0', 'C1 7 OUT', '']
[['Sa0', 'OUT', 'IN'], ['C0', '7', '0'], ['C1', '7', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 7 0
C1 7 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 7 0
C1 7 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', '7', '0'], ['C1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - Sa - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', '7', '0'], ['C1', '7', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 7 0', 'C1 7 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 7 0', 'C1 7 OUT', '']
[['Sa0', 'OUT', 'IN'], ['C0', '7', '0'], ['C1', '7', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 7 0
C1 7 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 7 0
C1 7 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - Sa - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', '7', '0'], ['C1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - Sa - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', '7', '0'], ['C1', '7', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 7 0', 'C1 7 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 7 0', 'C1 7 OUT', '']
[['Sa0', 'OUT', 'IN'], ['C0', '7', '0'], ['C1', '7', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 7 0
C1 7 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 7 0
C1 7 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - Sa - C - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - GND']
[['Sa0', '7', 'IN'], ['C0', 'OUT', '0'], ['C1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - Sa - C - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - GND']
[['Sa0', '7', 'IN'], ['C0', 'OUT', '0'], ['C1', '7', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 IN', 'C0 OUT 0', 'C1 7 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 IN', 'C0 OUT 0', 'C1 7 OUT', '']
[['Sa0', '7', 'IN'], ['C0', 'OUT', '0'], ['C1', '7', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 IN
C0 OUT 0
C1 7 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 IN
C0 OUT 0
C1 7 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - Sa - C - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - GND']
[['Sa0', '7', 'IN'], ['C0', 'OUT', '0'], ['C1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - Sa - C - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - GND']
[['Sa0', '7', 'IN'], ['C0', 'OUT', '0'], ['C1', '7', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 IN', 'C0 OUT 0', 'C1 7 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 IN', 'C0 OUT 0', 'C1 7 OUT', '']
[['Sa0', '7', 'IN'], ['C0', 'OUT', '0'], ['C1', '7', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 IN
C0 OUT 0
C1 7 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 IN
C0 OUT 0
C1 7 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - Sa - C - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - GND']
[['Sa0', '7', 'IN'], ['C0', 'OUT', '0'], ['C1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - Sa - C - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - GND']
[['Sa0', '7', 'IN'], ['C0', 'OUT', '0'], ['C1', '7', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 IN', 'C0 OUT 0', 'C1 7 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 IN', 'C0 OUT 0', 'C1 7 OUT', '']
[['Sa0', '7', 'IN'], ['C0', 'OUT', '0'], ['C1', '7', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 IN
C0 OUT 0
C1 7 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 IN
C0 OUT 0
C1 7 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - Sa - C - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - GND']
[['Sa0', '7', 'IN'], ['C0', 'OUT', '0'], ['C1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - Sa - C - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - GND']
[['Sa0', '7', 'IN'], ['C0', 'OUT', '0'], ['C1', '7', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 IN', 'C0 OUT 0', 'C1 7 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 IN', 'C0 OUT 0', 'C1 7 OUT', '']
[['Sa0', '7', 'IN'], ['C0', 'OUT', '0'], ['C1', '7', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 IN
C0 OUT 0
C1 7 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 IN
C0 OUT 0
C1 7 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - Sa - C - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - GND']
[['Sa0', '7', 'IN'], ['C0', 'OUT', '0'], ['C1', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - Sa - C - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - GND']
[['Sa0', '7', 'IN'], ['C0', 'OUT', '0'], ['C1', '7', 'OUT']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 7 IN', 'C0 OUT 0', 'C1 7 OUT', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 7 IN', 'C0 OUT 0', 'C1 7 OUT', '']
[['Sa0', '7', 'IN'], ['C0', 'OUT', '0'], ['C1', '7', 'OUT']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 7 IN
C0 OUT 0
C1 7 OUT

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 7 IN
C0 OUT 0
C1 7 OUT

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - C - GND', 'VOUT - C - Sa - C - GND']
[['Sa0', '5', 'IN'], ['C0', '5', '0'], ['C1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 OUT 0', 'C1 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 OUT 0', 'C1 OUT IN', '']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 OUT 0
C1 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 OUT 0
C1 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 OUT 0', 'C1 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 OUT 0', 'C1 OUT IN', '']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 OUT 0
C1 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 OUT 0
C1 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 OUT 0', 'C1 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 OUT 0', 'C1 OUT IN', '']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 OUT 0
C1 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 OUT 0
C1 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 OUT 0', 'C1 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 OUT 0', 'C1 OUT IN', '']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 OUT 0
C1 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 OUT 0
C1 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 OUT 0', 'C1 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 OUT 0', 'C1 OUT IN', '']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 OUT 0
C1 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 OUT 0
C1 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 OUT 0', 'C1 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 OUT 0', 'C1 OUT IN', '']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 OUT 0
C1 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 OUT 0
C1 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - C - VOUT', 'VIN - Sa - VOUT', 'VIN - C - C - GND', 'VIN - Sa - C - GND', 'VOUT - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', 'OUT', 'IN']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 OUT IN', 'C0 OUT 0', 'C1 OUT IN', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 OUT IN', 'C0 OUT 0', 'C1 OUT IN', '']
[['Sa0', 'OUT', 'IN'], ['C0', 'OUT', '0'], ['C1', 'OUT', 'IN']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 OUT IN
C0 OUT 0
C1 OUT IN

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 OUT IN
C0 OUT 0
C1 OUT IN

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - Sa - C - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - GND']
[['Sa0', '8', 'IN'], ['C0', 'OUT', '0'], ['C1', 'OUT', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - Sa - C - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - GND']
[['Sa0', '8', 'IN'], ['C0', 'OUT', '0'], ['C1', 'OUT', '8']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 8 IN', 'C0 OUT 0', 'C1 OUT 8', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 8 IN', 'C0 OUT 0', 'C1 OUT 8', '']
[['Sa0', '8', 'IN'], ['C0', 'OUT', '0'], ['C1', 'OUT', '8']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 8 IN
C0 OUT 0
C1 OUT 8

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 8 IN
C0 OUT 0
C1 OUT 8

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - Sa - C - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - GND']
[['Sa0', '8', 'IN'], ['C0', 'OUT', '0'], ['C1', 'OUT', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - Sa - C - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - GND']
[['Sa0', '8', 'IN'], ['C0', 'OUT', '0'], ['C1', 'OUT', '8']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 8 IN', 'C0 OUT 0', 'C1 OUT 8', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 8 IN', 'C0 OUT 0', 'C1 OUT 8', '']
[['Sa0', '8', 'IN'], ['C0', 'OUT', '0'], ['C1', 'OUT', '8']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 8 IN
C0 OUT 0
C1 OUT 8

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 8 IN
C0 OUT 0
C1 OUT 8

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

['VIN - Sa - C - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - GND']
[['Sa0', '8', 'IN'], ['C0', 'OUT', '0'], ['C1', 'OUT', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
['VIN - Sa - C - VOUT', 'VIN - Sa - C - C - GND', 'VOUT - C - GND']
[['Sa0', '8', 'IN'], ['C0', 'OUT', '0'], ['C1', 'OUT', '8']]
1
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Ra0 8 IN', 'C0 OUT 0', 'C1 OUT 8', '']
['Vin IN_exact 0', 'Rin IN_exact IN', 'Rout OUT 0', 'Cout OUT 0', 'Rb0 8 IN', 'C0 OUT 0', 'C1 OUT 8', '']
[['Sa0', '8', 'IN'], ['C0', 'OUT', '0'], ['C1', 'OUT', '8']]
Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Ra0 8 IN
C0 OUT 0
C1 OUT 8

Vin IN_exact 0
Rin IN_exact IN
Rout OUT 0
Cout OUT 0
Rb0 8 IN
C0 OUT 0
C1 OUT 8

['Vin', 'Rin', 'Rout', 'Cout', 'Ra0', 'Rb0', 'C0', 'C1']
PCC-50865 violations

action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {4}, 4: {1}})
action  1  : edge on [2, 7]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {4}, 4: {1}, 2: {7}, 7: {2}})
action  2  : edge on [2, 8]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {4}, 4: {1}, 2: {8}, 8: {2}})
action  3  : edge on [2, 5]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {4}, 4: {1}, 2: {5}, 5: {2}})
action  4  : edge on [2, 3]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {4}, 4: {1}, 2: {3}, 3: {2}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 29 cumulate planning time: 63
sim.current.step 6
root offset is:  1
action  0  : edge on [3, 7]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {4}, 4: {1}, 3: {7}, 7: {3}})
action  1  : edge on [3, 8]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {4}, 4: {1}, 3: {8}, 8: {3}})
action  2  : edge on [3, 5]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {4}, 4: {1}, 3: {5}, 5: {3}})
action  3  : edge on [-1, -1]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {4}, 4: {1}})
title connecting Sa0-left and C1-left
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 63
sim.current.step 7
root offset is:  1
action  0  : edge on [4, 8]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {4}, 4: {8, 1}, 3: {7}, 7: {3}, 8: {4}})
action  1  : edge on [-1, -1]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {4}, 4: {1}, 3: {7}, 7: {3}})
action  2  : edge on [4, 5]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {4}, 4: {1, 5}, 3: {7}, 7: {3}, 5: {4}})
title connecting Sa0-right and C1-right
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 63
sim.current.step 8
root offset is:  1
action  0  : edge on [5, 8]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {4}, 4: {8, 1}, 3: {7}, 7: {3}, 8: {4, 5}, 5: {8}})
action  1  : edge on [-1, -1]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {4}, 4: {8, 1}, 3: {7}, 7: {3}, 8: {4}})
action  2  : edge on [5, 7]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {4}, 4: {8, 1}, 3: {7}, 7: {3, 5}, 8: {4}, 5: {7}})
title connecting C0-left and C1-right
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 63
sim.current.step 9
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {4}, 4: {8, 1}, 3: {7}, 7: {3}, 8: {4, 5}, 5: {8}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 63
sim.current.step 10
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {4}, 4: {8, 1}, 3: {7}, 7: {3}, 8: {4, 5}, 5: {8}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 63
sim.current.step 11
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}, 1: {4}, 4: {8, 1}, 3: {7}, 7: {3}, 8: {4, 5}, 5: {8}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 63
effis of topo: [{'parameter': 'None', 'efficiency': 0, 'output_voltage': -500}]
#####################Game: 0   steps:  12   average cumulate reward:  0
title result with parameter:None 
-1 , 20 : 12.0
[{'parameter': 'None', 'efficiency': 0, 'output_voltage': -500}]
figures are saved in:figures/2021-03-18-11-48-10/

outputs are saved in:Results/mutitest_200-2021-03-18-11-48-10-50865.txt

figures already existed
Results already existed
261
194
1746
261
194
find
OrderedDict([('L0', ['N-L0-Sb0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-L0-Sb0'])])
figures/2021-03-18-11-49-19/ created
Viz/TreeStructures2021-03-18-11-49-19-50865/ created
max depth is -1 ,trajectory is 20 every thread has  20  trajectories

path with frequency:
('VIN - L - Sb - GND', 0.1447)
('VIN - L - Sa - VOUT', 0.1214)
('VIN - L - Sb - VOUT', 0.0998)
('VIN - Sa - L - VOUT', 0.0914)
('VIN - Sb - L - VOUT', 0.0914)
('VIN - L - Sa - GND', 0.0906)
('VOUT - Sb - Sa - GND', 0.0763)
('VOUT - Sa - Sb - GND', 0.0747)
('VIN - Sa - Sb - VOUT', 0.074)
('VIN - Sb - Sa - VOUT', 0.0707)
('VOUT - L - Sa - GND', 0.0671)
('VIN - L - Sa - Sa - VOUT', 0.065)
('VIN - Sa - L - GND', 0.0612)
('VIN - C - VOUT', 0.0583)
('VOUT - Sb - L - GND', 0.0579)
('VIN - Sb - L - GND', 0.0571)
('VOUT - Sa - Sa - Sb - GND', 0.0549)
('VOUT - Sa - L - GND', 0.0529)
('VIN - Sb - Sa - GND', 0.048)
('VIN - Sa - Sb - GND', 0.043)
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
sim.current.step 0
root offset is:  1
['Sa']
['Sa', 'L']
['Sb']
['Sb', 'Sa']
['Sa', 'C']
['Sb', 'C']
['VIN - C - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - C - Sb - Sa - GND']
[['Sb0', 'IN', '7'], ['C0', 'OUT', 'IN'], ['Sa0', '7', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
['Sa', 'Sa']
['Sb', 'Sb']
['Sa', 'Sb']
['Sb', 'Sa']
['Sa', 'L']
['Sb', 'L']
action  0  : node on 0
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 1
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 0
sim.current.step 1
root offset is:  1
['VIN - Sa - VOUT', 'VIN - Sa - C - Sa - GND', 'VOUT - C - Sa - GND']
[['Sa0', '6', '0'], ['C0', 'OUT', '6'], ['Sa1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 200 100.0 300.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 200 100.0 300.0
0 0
0.9 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} 200 100.0 300.0
0 0
['VIN - Sb - VOUT', 'VIN - Sb - Sa - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', '7', 'OUT'], ['Sb0', 'OUT', 'IN'], ['C0', '7', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
0.1 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} 200 100.0 300.0
0 0
0.2 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 200 100.0 300.0
0 0
0.3 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 200 100.0 300.0
0 0
0.4 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.6 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.9 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
action  0  : node on 2
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 0
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sa1-left', 'Sa1-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 1
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'Sb0-left', 'Sb0-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 3
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'L0-left', 'L0-right']
state child 3 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 0
sim.current.step 2
root offset is:  1
['VIN - Sb - C - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - C - Sa - GND']
[['Sa0', '8', '0'], ['C0', 'OUT', '8'], ['Sb0', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
['VIN - Sa - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - Sa - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['Sa1', 'IN', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1)]
0.1 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} 200 100.0 300.0
0 0
0.2 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} 200 100.0 300.0
0 0
0.3 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} 200 100.0 300.0
0 0
0.4 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} 200 100.0 300.0
0 0
0.5 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.6 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.8 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.9 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} 200 100.0 300.0
0 0
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - Sb - C - GND', 'VOUT - Sa - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', '0', 'IN'], ['Sb0', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.5 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.6 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.9 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
['VIN - Sa - VOUT', 'VIN - C - C - GND', 'VOUT - Sa - C - C - GND']
[['Sa0', 'OUT', 'IN'], ['C0', '8', '0'], ['C1', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 10)]
0.1 [0, -500]
{'efficiency': 0.0, 'output_voltage': -500.0} 200 100.0 300.0
0 0
0.2 [0, -500]
{'efficiency': 0.0, 'output_voltage': -500.0} 200 100.0 300.0
0 0
0.3 [0, -500]
{'efficiency': 0.0, 'output_voltage': -500.0} 200 100.0 300.0
0 0
0.4 [0, -500]
{'efficiency': 0.0, 'output_voltage': -500.0} 200 100.0 300.0
0 0
0.5 [0, -500]
{'efficiency': 0.0, 'output_voltage': -500.0} 200 100.0 300.0
0 0
0.6 [0, -500]
{'efficiency': 0.0, 'output_voltage': -500.0} 200 100.0 300.0
0 0
0.7 [0, -500]
{'efficiency': 0.0, 'output_voltage': -500.0} 200 100.0 300.0
0 0
0.8 [0, -500]
{'efficiency': 0.0, 'output_voltage': -500.0} 200 100.0 300.0
0 0
0.9 [0, -500]
{'efficiency': 0.0, 'output_voltage': -500.0} 200 100.0 300.0
0 0
['VIN - Sa - Sb - VOUT', 'VIN - C - GND', 'VOUT - Sb - Sa - C - GND']
[['Sa0', 'IN', '8'], ['C0', 'IN', '0'], ['Sb0', 'OUT', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
['VIN - C - VOUT', 'VIN - C - Sb - Sa - GND', 'VOUT - Sb - Sa - GND']
[['Sa0', '0', '7'], ['C0', 'IN', 'OUT'], ['Sb0', '7', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
action  0  : node on 0
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 3
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 2
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 1
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sb0-left', 'Sb0-right']
state child 3 graph: defaultdict(<class 'set'>, {})
title adding node Sa
instant reward: 0 cumulate reward:  0 planning time: 1 cumulate planning time: 1
sim.current.step 3
root offset is:  1
['VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VOUT - Sa - Sa - C - GND']
[['Sa0', 'IN', '6'], ['C0', '0', '6'], ['Sa1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 200 100.0 300.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 200 100.0 300.0
0 0
0.9 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} 200 100.0 300.0
0 0
action  0  : edge on [0, 4]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}})
action  1  : edge on [0, 5]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}})
action  2  : edge on [0, 3]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}})
action  3  : edge on [-1, -1]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 3 graph: defaultdict(<class 'set'>, {})
action  4  : edge on [0, 8]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}})
action  5  : edge on [0, 6]
action child  5  avg_return: 0.0
state child  5  reward: 0
state  5 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 5 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}})
action  6  : edge on [0, 7]
action child  6  avg_return: 0.0
state child  6  reward: 0
state  6 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 6 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}})
title connecting GND and Sa0-right
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 1
sim.current.step 4
root offset is:  1
action  0  : edge on [1, 5]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {5}, 5: {1}})
action  1  : edge on [1, 8]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {8}, 8: {1}})
action  2  : edge on [1, 6]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {6}, 6: {1}})
action  3  : edge on [-1, -1]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}})
action  4  : edge on [1, 7]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1}})
title connecting VIN and C0-left
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 1
sim.current.step 5
root offset is:  1
['VIN - Sa - VOUT', 'VIN - C - Sa - GND', 'VOUT - Sa - C - Sa - GND']
[['Sa0', '6', '0'], ['C0', 'IN', '6'], ['Sa1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'C0': [10], 'Ra1': [100000], 'Rb1': [1]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'C0', 'Ra1', 'Rb1']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 10, 100000, 1)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 200 100.0 300.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 200 100.0 300.0
0 0
0.9 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} 200 100.0 300.0
0 0
action  0  : edge on [2, 7]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {5}, 5: {1}, 2: {7}, 7: {2}})
action  1  : edge on [2, 6]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {5}, 5: {1}, 2: {6}, 6: {2}})
action  2  : edge on [2, 8]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {5}, 5: {1}, 2: {8}, 8: {2}})
action  3  : edge on [-1, -1]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {5}, 5: {1}})
title connecting VOUT and Sa1-left
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 1
sim.current.step 6
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {5}, 5: {1}, 2: {7}, 7: {2}})
action  1  : edge on [3, 6]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {5}, 5: {1}, 2: {7}, 7: {2}, 3: {6}, 6: {3}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 1
sim.current.step 7
root offset is:  1
action  0  : edge on [4, 6]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0, 6}, 1: {5}, 5: {1}, 2: {7}, 7: {2}, 6: {4}})
action  1  : edge on [-1, -1]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {5}, 5: {1}, 2: {7}, 7: {2}})
title connecting Sa0-right and C0-right
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 1
sim.current.step 8
root offset is:  1
action  0  : edge on [5, 8]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0, 6}, 1: {5}, 5: {8, 1}, 2: {7}, 7: {2}, 6: {4}, 8: {5}})
action  1  : edge on [-1, -1]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0, 6}, 1: {5}, 5: {1}, 2: {7}, 7: {2}, 6: {4}})
title connecting C0-left and Sa1-right
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 1
sim.current.step 9
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0, 6}, 1: {5}, 5: {8, 1}, 2: {7}, 7: {2}, 6: {4}, 8: {5}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 1
sim.current.step 10
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0, 6}, 1: {5}, 5: {8, 1}, 2: {7}, 7: {2}, 6: {4}, 8: {5}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 1
sim.current.step 11
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right', 'C0-left', 'C0-right', 'Sa1-left', 'Sa1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0, 6}, 1: {5}, 5: {8, 1}, 2: {7}, 7: {2}, 6: {4}, 8: {5}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 1
effis of topo: [{'parameter': 'None', 'efficiency': 0, 'output_voltage': -500}]
#####################Game: 0   steps:  12   average cumulate reward:  0
title result with parameter:None 
-1 , 20 : 12.0
[{'parameter': 'None', 'efficiency': 0, 'output_voltage': -500}]
figures are saved in:figures/2021-03-18-11-49-19/

outputs are saved in:Results/mutitest_200-2021-03-18-11-49-19-50865.txt

figures already existed
Results already existed
261
194
1746
261
194
find
OrderedDict([('L0', ['N-L0-Sb0', 'OUT']), ('Sa0', ['IN', 'OUT']), ('Sb0', ['0', 'N-L0-Sb0'])])
figures/2021-03-18-11-49-28/ created
Viz/TreeStructures2021-03-18-11-49-28-50865/ created
max depth is -1 ,trajectory is 20 every thread has  20  trajectories

path with frequency:
('VIN - L - Sb - GND', 0.1447)
('VIN - L - Sa - VOUT', 0.1214)
('VIN - L - Sb - VOUT', 0.0998)
('VIN - Sa - L - VOUT', 0.0914)
('VIN - Sb - L - VOUT', 0.0914)
('VIN - L - Sa - GND', 0.0906)
('VOUT - Sb - Sa - GND', 0.0763)
('VOUT - Sa - Sb - GND', 0.0747)
('VIN - Sa - Sb - VOUT', 0.074)
('VIN - Sb - Sa - VOUT', 0.0707)
('VOUT - L - Sa - GND', 0.0671)
('VIN - L - Sa - Sa - VOUT', 0.065)
('VIN - Sa - L - GND', 0.0612)
('VIN - C - VOUT', 0.0583)
('VOUT - Sb - L - GND', 0.0579)
('VIN - Sb - L - GND', 0.0571)
('VOUT - Sa - Sa - Sb - GND', 0.0549)
('VOUT - Sa - L - GND', 0.0529)
('VIN - Sb - Sa - GND', 0.048)
('VIN - Sa - Sb - GND', 0.043)
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
[20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
sim.current.step 0
root offset is:  1
['Sb']
['Sb', 'C']
['VIN - Sa - VOUT', 'VIN - Sa - Sb - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', '5', 'OUT'], ['C0', '5', '0'], ['Sa0', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 200 100.0 300.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 200 100.0 300.0
0 0
0.9 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} 200 100.0 300.0
0 0
['VIN - Sb - VOUT', 'VIN - Sa - VOUT', 'VIN - C - GND', 'VOUT - Sb - C - GND', 'VOUT - Sa - C - GND']
[['Sb0', 'IN', 'OUT'], ['C0', 'IN', '0'], ['Sa0', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.5 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.6 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.9 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
['Sa']
['Sa', 'Sb']
['VIN - Sa - Sb - VOUT', 'VIN - Sa - L - GND', 'VOUT - Sb - L - GND']
[['Sa0', '7', 'IN'], ['Sb0', 'OUT', '7'], ['L0', '7', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100)]
0.1 ['47', '-430']
{'efficiency': 0.47, 'output_voltage': -430.0} 200 100.0 300.0
0 0
0.2 ['78', '-314']
{'efficiency': 0.78, 'output_voltage': -314.0} 200 100.0 300.0
0 0
0.3 ['89', '-208']
{'efficiency': 0.89, 'output_voltage': -208.0} 200 100.0 300.0
0 0
0.4 ['93', '-140']
{'efficiency': 0.93, 'output_voltage': -140.0} 200 100.0 300.0
0 0
0.5 ['95', '-95']
{'efficiency': 0.95, 'output_voltage': -95.0} 200 100.0 300.0
0 0
0.6 ['96', '-64']
{'efficiency': 0.96, 'output_voltage': -64.0} 200 100.0 300.0
0 0
0.7 ['96', '-41']
{'efficiency': 0.96, 'output_voltage': -41.0} 200 100.0 300.0
0 0
0.8 ['95', '-24']
{'efficiency': 0.95, 'output_voltage': -24.0} 200 100.0 300.0
0 0
0.9 ['89', '-10']
{'efficiency': 0.89, 'output_voltage': -10.0} 200 100.0 300.0
0 0
['Sb', 'C']
['Sa', 'Sa']
['Sb', 'L']
['Sa', 'C']
['Sb', 'Sa']
['Sa', 'L']
['Sb', 'Sb']
['Sa', 'Sb']
['VIN - Sa - VOUT', 'VIN - Sa - C - GND', 'VOUT - Sa - Sa - C - GND']
[['Sa0', 'OUT', 'IN'], ['Sa1', '7', 'IN'], ['C0', '7', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Ra0': [100000], 'Rb0': [1], 'Ra1': [100000], 'Rb1': [1], 'C0': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Ra0', 'Rb0', 'Ra1', 'Rb1', 'C0']
[(0.1, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.2, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.3, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.4, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.5, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.6, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.7, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.8, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10), (0.9, 1, 100, 100, 10, 0.1, 100000, 1, 100000, 1, 10)]
0.1 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.2 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.6 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.7 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 200 100.0 300.0
0 0
0.8 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 200 100.0 300.0
0 0
0.9 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} 200 100.0 300.0
0 0
action  0  : node on 1
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 0
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sa0-left', 'Sa0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 1 cumulate planning time: 1
sim.current.step 1
root offset is:  1
['VIN - Sb - C - VOUT', 'VIN - C - GND', 'VOUT - C - Sb - C - GND']
[['Sb0', 'IN', '6'], ['C0', 'OUT', '6'], ['C1', '0', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
['VIN - Sb - VOUT', 'VIN - Sb - Sa - GND', 'VOUT - Sb - Sb - Sa - GND']
[['Sb0', 'IN', 'OUT'], ['Sa0', '0', '8'], ['Sb1', 'IN', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'Rb1': [1], 'Ra1': [100000]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'Rb1', 'Ra1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 1, 100000)]
0.1 ['89', '90']
{'efficiency': 0.89, 'output_voltage': 90.0} 200 100.0 300.0
0 0
0.2 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 200 100.0 300.0
0 0
0.3 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 200 100.0 300.0
0 0
0.4 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.6 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.9 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
action  0  : node on 2
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 3
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'L0-left', 'L0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 0
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sa0-left', 'Sa0-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 1
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'Sb1-left', 'Sb1-right']
state child 3 graph: defaultdict(<class 'set'>, {})
instant reward: 0 cumulate reward:  0 planning time: 1 cumulate planning time: 2
sim.current.step 2
root offset is:  1
['VIN - C - Sb - C - VOUT', 'VIN - C - GND', 'VOUT - C - Sb - GND']
[['Sb0', '0', '5'], ['C0', '5', 'OUT'], ['C1', '0', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'C1': [10]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'C1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 10)]
0.1 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.2 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.3 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.4 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.5 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.6 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.7 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.8 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
0.9 ['0', '0']
{'efficiency': 0.0, 'output_voltage': 0.0} 200 100.0 300.0
0 0
['VIN - Sb - VOUT', 'VIN - Sb - C - Sb - GND', 'VOUT - C - Sb - GND']
[['Sb0', '0', '6'], ['C0', 'OUT', '6'], ['Sb1', 'IN', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'Rb1': [1], 'Ra1': [100000]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'Rb1', 'Ra1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000)]
0.1 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} 200 100.0 300.0
0 0
0.2 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 200 100.0 300.0
0 0
0.3 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 200 100.0 300.0
0 0
0.4 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.6 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.9 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
['VIN - Sb - VOUT', 'VIN - Sb - VOUT', 'VIN - C - GND', 'VOUT - Sb - C - GND', 'VOUT - Sb - C - GND']
[['Sb0', 'IN', 'OUT'], ['C0', '0', 'IN'], ['Sb1', 'OUT', 'IN']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'Rb1': [1], 'Ra1': [100000]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'Rb1', 'Ra1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000)]
0.1 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} 200 100.0 300.0
0 0
0.2 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.3 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.4 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.5 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.6 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} 200 100.0 300.0
0 0
0.7 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} 200 100.0 300.0
0 0
0.8 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} 200 100.0 300.0
0 0
0.9 ['99', '99']
{'efficiency': 0.99, 'output_voltage': 99.0} 200 100.0 300.0
0 0
['VIN - Sb - VOUT', 'VIN - C - L - GND', 'VOUT - Sb - C - L - GND']
[['Sb0', 'IN', 'OUT'], ['C0', '7', 'IN'], ['L0', '7', '0']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'L0': [100]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'L0']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 100)]
0.1 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} 200 100.0 300.0
0 0
0.2 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 200 100.0 300.0
0 0
0.3 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 200 100.0 300.0
0 0
0.4 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.6 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.9 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
action  0  : node on 1
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 0 graph: defaultdict(<class 'set'>, {})
action  1  : node on 0
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sa0-left', 'Sa0-right']
state child 1 graph: defaultdict(<class 'set'>, {})
action  2  : node on 3
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'L0-left', 'L0-right']
state child 2 graph: defaultdict(<class 'set'>, {})
action  3  : node on 2
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'C1-left', 'C1-right']
state child 3 graph: defaultdict(<class 'set'>, {})
title adding node Sb
instant reward: 0 cumulate reward:  0 planning time: 1 cumulate planning time: 3
sim.current.step 3
root offset is:  1
['VIN - Sb - Sb - VOUT', 'VIN - C - GND', 'VOUT - Sb - Sb - C - GND']
[['Sb0', '8', 'IN'], ['C0', 'IN', '0'], ['Sb1', 'OUT', '8']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'Rb1': [1], 'Ra1': [100000]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'Rb1', 'Ra1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000)]
0.1 ['83', '83']
{'efficiency': 0.83, 'output_voltage': 83.0} 200 100.0 300.0
0 0
0.2 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} 200 100.0 300.0
0 0
0.3 ['93', '93']
{'efficiency': 0.93, 'output_voltage': 93.0} 200 100.0 300.0
0 0
0.4 ['95', '95']
{'efficiency': 0.95, 'output_voltage': 95.0} 200 100.0 300.0
0 0
0.5 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 200 100.0 300.0
0 0
0.6 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 200 100.0 300.0
0 0
0.7 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.8 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.9 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
action  0  : edge on [0, 4]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}})
action  1  : edge on [0, 6]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {6}, 6: {0}})
action  2  : edge on [0, 7]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {7}, 7: {0}})
action  3  : edge on [0, 3]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {3}, 3: {0}})
action  4  : edge on [0, 5]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {5}, 5: {0}})
action  5  : edge on [0, 8]
action child  5  avg_return: 0.0
state child  5  reward: 0
state  5 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 5 graph: defaultdict(<class 'set'>, {0: {8}, 8: {0}})
action  6  : edge on [-1, -1]
action child  6  avg_return: 0.0
state child  6  reward: 0
state  6 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 6 graph: defaultdict(<class 'set'>, {})
title connecting GND and Sb0-right
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 3
sim.current.step 4
root offset is:  1
['VIN - Sb - VOUT', 'VIN - C - Sb - GND', 'VOUT - Sb - C - Sb - GND']
[['Sb0', '5', '0'], ['C0', '5', 'IN'], ['Sb1', 'IN', 'OUT']]
1
{'Duty_Cycle': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'Frequency': [1], 'Vin': [100], 'Rout': [100], 'Cout': [10], 'Rin': [0.1], 'Rb0': [1], 'Ra0': [100000], 'C0': [10], 'Rb1': [1], 'Ra1': [100000]}
['Duty_Cycle', 'Frequency', 'Vin', 'Rout', 'Cout', 'Rin', 'Rb0', 'Ra0', 'C0', 'Rb1', 'Ra1']
[(0.1, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.2, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.3, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.4, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.5, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.6, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.7, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.8, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000), (0.9, 1, 100, 100, 10, 0.1, 1, 100000, 10, 1, 100000)]
0.1 ['90', '90']
{'efficiency': 0.9, 'output_voltage': 90.0} 200 100.0 300.0
0 0
0.2 ['94', '94']
{'efficiency': 0.94, 'output_voltage': 94.0} 200 100.0 300.0
0 0
0.3 ['96', '96']
{'efficiency': 0.96, 'output_voltage': 96.0} 200 100.0 300.0
0 0
0.4 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.5 ['97', '97']
{'efficiency': 0.97, 'output_voltage': 97.0} 200 100.0 300.0
0 0
0.6 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.7 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.8 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
0.9 ['98', '98']
{'efficiency': 0.98, 'output_voltage': 98.0} 200 100.0 300.0
0 0
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}})
action  1  : edge on [1, 8]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {8}, 8: {1}})
action  2  : edge on [1, 7]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {7}, 7: {1}})
action  3  : edge on [1, 5]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {5}, 5: {1}})
action  4  : edge on [1, 6]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 1: {6}, 6: {1}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 3
sim.current.step 5
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}})
action  1  : edge on [2, 5]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 2: {5}, 5: {2}})
action  2  : edge on [2, 6]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 2: {6}, 6: {2}})
action  3  : edge on [2, 8]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 2: {8}, 8: {2}})
action  4  : edge on [2, 7]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 2: {7}, 7: {2}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 3
sim.current.step 6
root offset is:  1
action  0  : edge on [3, 7]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 3: {7}, 7: {3}})
action  1  : edge on [3, 6]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 3: {6}, 6: {3}})
action  2  : edge on [3, 8]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 3: {8}, 8: {3}})
action  3  : edge on [3, 5]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 3: {5}, 5: {3}})
action  4  : edge on [-1, -1]
action child  4  avg_return: 0.0
state child  4  reward: 0
state  4 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 4 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}})
title connecting Sb0-left and Sb1-left
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 3
sim.current.step 7
root offset is:  1
action  0  : edge on [4, 6]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0, 6}, 3: {7}, 7: {3}, 6: {4}})
action  1  : edge on [-1, -1]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0}, 3: {7}, 7: {3}})
action  2  : edge on [4, 5]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0, 5}, 3: {7}, 7: {3}, 5: {4}})
action  3  : edge on [4, 8]
action child  3  avg_return: 0.0
state child  3  reward: 0
state  3 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 3 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0, 8}, 3: {7}, 7: {3}, 8: {4}})
title connecting Sb0-right and C0-right
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 3
sim.current.step 8
root offset is:  1
action  0  : edge on [5, 7]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0, 6}, 3: {7}, 7: {3, 5}, 6: {4}, 5: {7}})
action  1  : edge on [-1, -1]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0, 6}, 3: {7}, 7: {3}, 6: {4}})
action  2  : edge on [5, 8]
action child  2  avg_return: 0.0
state child  2  reward: 0
state  2 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 2 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0, 6}, 3: {7}, 7: {3}, 6: {4}, 5: {8}, 8: {5}})
title connecting C0-left and Sb1-left
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 3
sim.current.step 9
root offset is:  1
action  0  : edge on [6, 8]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0, 6}, 3: {7}, 7: {3, 5}, 6: {8, 4}, 5: {7}, 8: {6}})
action  1  : edge on [-1, -1]
action child  1  avg_return: 0.0
state child  1  reward: 0
state  1 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 1 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0, 6}, 3: {7}, 7: {3, 5}, 6: {4}, 5: {7}})
title connecting C0-right and Sb1-right
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 3
sim.current.step 10
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0, 6}, 3: {7}, 7: {3, 5}, 6: {8, 4}, 5: {7}, 8: {6}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 3
sim.current.step 11
root offset is:  1
action  0  : edge on [-1, -1]
action child  0  avg_return: 0.0
state child  0  reward: 0
state  0 ports: ['GND', 'VIN', 'VOUT', 'Sb0-left', 'Sb0-right', 'C0-left', 'C0-right', 'Sb1-left', 'Sb1-right']
state child 0 graph: defaultdict(<class 'set'>, {0: {4}, 4: {0, 6}, 3: {7}, 7: {3, 5}, 6: {8, 4}, 5: {7}, 8: {6}})
title skip connecting
instant reward: 0 cumulate reward:  0 planning time: 0 cumulate planning time: 3
effis of topo: [{'parameter': 'None', 'efficiency': 0, 'output_voltage': -500}]
#####################Game: 0   steps:  12   average cumulate reward:  0
title result with parameter:None 
-1 , 20 : 12.0
[{'parameter': 'None', 'efficiency': 0, 'output_voltage': -500}]
figures are saved in:figures/2021-03-18-11-49-28/

outputs are saved in:Results/mutitest_200-2021-03-18-11-49-28-50865.txt

